var tipuesearch = {"pages": [{
    "title": "",
    "text": "Uh oh:heavy_exclamation_mark: Seems like you have taken a wrong turn somewhere :construction: :dragon: This page seems to be playing hide and seek with you. :dragon_face: :circus_tent: Perhaps a search or clicking around in the menus will help? :space_invader: Or perhaps your :princess: is in another castle? :mushroom:",
    "tags": "",
    "url": "/404.html"
  },{
    "title": "Abort Reference",
    "text": "Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Swish\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"swish Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/core/abort-reference.html"
  },{
    "title": "Abort Reference",
    "text": "Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Trustly\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"trustly Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/core/abort-reference.html"
  },{
    "title": "Abort Reference",
    "text": "Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Invoice\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"invoice Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/core/abort-reference.html"
  },{
    "title": "Abort",
    "text": "Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Creditcard\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"creditcard Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/abort-reference.html"
  },{
    "title": "Abort Reference",
    "text": "Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Mobilepay\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"DKK\", \"prices\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"mobilepay Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"da-DK\", \"urls\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/core/abort-reference.html"
  },{
    "title": "Abort Reference",
    "text": "Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Vipps\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"NOK\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"vipps Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"urls\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/core/abort-reference.html"
  },{
    "title": "Abort",
    "text": "Abort To abort a payment order, perform the abort operation that is returned in the payment order response. You need to include the following in the request body: Abort PATCH Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Field Type Description paymentOrder object The payment order object. operation string Abort abortReason string CancelledByConsumer or CancelledByCustomer. Why the payment was aborted. Abort PATCH Response The response given when aborting a payment order is equivalent to a GET request towards the paymentorders resource, as displayed above, with its status set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd\", \"created\": \"2022-01-24T10:54:05.6243371Z\", \"updated\": \"2022-01-24T10:54:19.2679591Z\", \"operation\": \"Purchase\", \"status\": \"Aborted\", \"currency\": \"SEK\", \"amount\": 32000, \"vatAmount\": 0, \"description\": \"Abort test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/metadata\" } }, \"operations\": [ ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Initialized, Paid, Failed, Cancelled or Aborted. Indicates the state of the payment order. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for this payment. implementation string The Digital Payments implementation type. Omit if the integration is for Payments Only. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. orderItems string The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. urls string The URL to the urls resource where information about the urls can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource whereinformation about the paid transactions, including any possibly created tokens,can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. See Operations for details.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/abort.html"
  },{
    "title": "Abort",
    "text": "Abort To abort a payment order, perform the abort operation that is returned in the payment order response. You need to include the following in the request body: Abort PATCH Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Field Type Description paymentOrder object The payment order object. operation string Abort abortReason string CancelledByConsumer or CancelledByCustomer. Why the payment was aborted. Abort PATCH Response The response given when aborting a payment order is equivalent to a GET request towards the paymentorders resource, as displayed above, with its status set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd\", \"created\": \"2022-01-24T10:54:05.6243371Z\", \"updated\": \"2022-01-24T10:54:19.2679591Z\", \"operation\": \"Purchase\", \"status\": \"Aborted\", \"currency\": \"SEK\", \"amount\": 32000, \"vatAmount\": 0, \"description\": \"Abort test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/metadata\" } }, \"operations\": [ ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Initialized, Paid, Failed, Cancelled or Aborted. Indicates the state of the payment order. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The Digital Payments implementation type. Omit if the integration is for Payments Only. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. orderItems string The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. urls string The URL to the urls resource where information about the urls can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource whereinformation about the paid transactions, including any possibly created tokens,can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. See Operations for details.",
    "tags": "",
    "url": "/checkout-v3/features/core/abort.html"
  },{
    "title": "Abort",
    "text": "Abort To abort a payment order, perform the update-paymentorder-abort operation that is returned in the payment order response. You need to include the following in the request body: Abort PATCH Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Field Type Description paymentOrder object The payment order object. operation string Abort abortReason string CancelledByConsumer or CancelledByCustomer. Why the payment was aborted. Abort PATCH Response The response given when aborting a payment order is equivalent to a GET request towards the paymentorders resource, as displayed above, with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payers\" }, \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp//09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com//5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com//core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] }",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/abort.html"
  },{
    "title": "AbortAsync",
    "text": "The AbortRequestAsync method will send an AbortRequest for the last issued request to the terminal. The Abort message itself is not responded to by the terminal, but the actual request being aborted is. warning warning: The result from AbortAsync will always have the ResponseResult “Failure”. Returns AbortRequestResult *string ErrorCondition *string ResponseContent *NexoResponseResult ResponseResult *string ResponseText",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/abortasync.html"
  },{
    "title": "Automated Fuel Dispenser Payments",
    "text": "Automated Fuel Dispenser Payments warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. An Automated Fuel Dispenser (AFD) payment is a purchase where the user requests an authorization transaction for an automatic fuel dispenser. The request contains the maximum purchase amount, but the issuer can reply with a partial approval to lower the maximum purchase amount. This can be used to stop the fuel dispension at the maximum price. The only supported use case is automated fuel dispensers. To be able to verify this, it is required that the Merchant Category Code mcc is passed in the request under PayeeInfo. This feature is only supported with the Purchase operation. It does not support with order items. By default the available instruments and card types will be limited to those which support AFD payments. To enable other payment options for the payer, pass in restrictedToAfdInstruments with the value false. See the abbreviated example below on how to implement AFD payments by setting the generateAfdPayment to true. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 10000, \"vatAmount\": 2500, \"generateAfdPayment\": true, \"restrictedToAfdInstruments\": true, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"mcc\": 5542 }, \"orderItems\": null } } Request fields not covered in the common Digital Payments Initialized redirect or seamless view table: Field Type Description generateAfdPayment bool Set to true if the payment order is an AFD payment, false if not. restrictedToAfdInstruments bool Set to true if the payment menu should show only payment options that support AFD, false to show all options. Default is true when using generateAfdPayment. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. mcc integer The merchant category code used for the purchase, 4 digits. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 10000, \"vatAmount\": 2500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\" ], \"implementation\": \"PaymentsOnly\", \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } When The Authorization Is Completed The authorized amount might be a lower value than the requested amount, known as partial approval. In this case, the original submitted amount might be found by requesting rel:paid-paymentorder and checking the field submittedAmount. Then the amount and vatAmount will contain the value that is authorized. The final amount to be paid must be passed in the capture request, and if the authorized amount is larger than the final amount the rest should be cancelled. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/afd.html"
  },{
    "title": "Automated Fuel Dispenser Payments",
    "text": "Automated Fuel Dispenser Payments warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. An Automated Fuel Dispenser (AFD) payment is a purchase where the user requests an authorization transaction for an automatic fuel dispenser. The request contains the maximum purchase amount, but the issuer can reply with a partial approval to lower the maximum purchase amount. This can be used to stop the fuel dispension at the maximum price. The only supported use case is automated fuel dispensers. To be able to verify this, it is required that the Merchant Category Code mcc is passed in the request under PayeeInfo. This feature is only supported with the Purchase operation. It does not support with order items. By default the available instruments and card types will be limited to those which support AFD payments. To enable other payment options for the payer, pass in restrictedToAfdInstruments with the value false. See the abbreviated example below on how to implement AFD payments by setting the generateAfdPayment to true. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 10000, \"vatAmount\": 2500, \"generateAfdPayment\": true, \"restrictedToAfdInstruments\": true, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"mcc\": 5542 }, \"orderItems\": null } } Request fields not covered in the common Digital Payments Initialized redirect or seamless view table: Field Type Description generateAfdPayment bool Set to true if the payment order is an AFD payment, false if not. restrictedToAfdInstruments bool Set to true if the payment menu should show only payment options that support AFD, false to show all options. Default is true when using generateAfdPayment. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. mcc integer The merchant category code used for the purchase, 4 digits. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 10000, \"vatAmount\": 2500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\" ], \"implementation\": \"PaymentsOnly\", \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } When The Authorization Is Completed The authorized amount might be a lower value than the requested amount, known as partial approval. In this case, the original submitted amount might be found by requesting rel:paid-paymentorder and checking the field submittedAmount. Then the amount and vatAmount will contain the value that is authorized. The final amount to be paid must be passed in the capture request, and if the authorized amount is larger than the final amount the rest should be cancelled. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/features/optional/afd.html"
  },{
    "title": "After Payment",
    "text": "After the payment is confirmed, the payer will be redirected from the Swish app to the completeUrl set in the create payment request. You need to retrieve payment status with GET Sales transaction before presenting a confirmation page to the payer. Options After Posting A Payment If CallbackURL is set: Whenever changes to the payment occur a Callback request will be posted to the callbackUrl, which was generated when the payment was created. You can create a reversal transactions by implementing the Reversal request. You can also access and reverse a payment through your merchant pages in the Merchant portal. Swish Transactions All Swish transactions are described below. Please note that Swish does not support Merchant Initiated Transactions for the time being. List Sales Transactions The sales resource lists the sales transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The sale resource contains information about the sale transaction made against a swish payment. You can return a specific sale transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"sales\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"saleList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"swishPaymentReference\": \"8D0A30A7804E40479F88FFBA26111F04\", \"swishStatus\": \"PAID\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Sale\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the sales resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of sale transaction objects. {{ transaction }}List[] object The sale transaction object described in the sale resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial sale has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Create Sales Transactions In browser solutions the payer’s msisdn (mobile number) is required. This is managed either by sending a POST request as seen below, or by redirecting the payer to the hosted payment page. The msisdn is only required for browser solutions. With in-app solutions, the payer uses the device that hosts the Swish app to manage the purchase, making msisdn optional. Browser Request Browser Request 1 2 3 4 5 6 7 8 9 10 POST /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"msisdn\": \"+46739000001\" } } Browser Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"sale\": { \"date\": \"23.10.2017 08:39:37 +00:00\", \"paymentRequestToken\": \"LhXrK84MSpWU2RO09f8kUP-FHiBo-1pB\", \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2017-10-23T08:39:35.6478733Z\", \"updated\": \"2017-10-23T08:39:37.3788733Z\", \"type\": \"Sale\", \"state\": \"AwaitingActivity\", \"number\": 992309, \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Purchase\", \"payeeReference\": \"Postman1508747933\", \"isOperational\": true, \"operations\": [] } } } In-app Request In-app Request 1 2 3 4 5 6 7 8 9 POST /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { } } In-app Response In-app Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"sale\": { \"date\": \"23.10.2017 08:39:37 +00:00\", \"paymentRequestToken\": \"LhXrK84MSpWU2RO09f8kUP-FHiBo-1pB\", \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2017-10-23T08:39:35.6478733Z\", \"updated\": \"2017-10-23T08:39:37.3788733Z\", \"type\": \"Sale\", \"state\": \"AwaitingActivity\", \"number\": 992309, \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Purchase\", \"payeeReference\": \"Postman1508747933\", \"isOperational\": true, \"operations\": [ { \"href\": \"swish://paymentrequest?token=&lt;swishtoken&gt;&amp;callbackurl=&lt;completeUrl&gt;\", \"method\": \"GET\", \"rel\": \"redirect-app-swish\" } ] } } } The operation redirect-app-swish is only returned when using in-app flows. The payment now contains a sale transaction with the status (state) AwaitingActivity, meaning we are awaiting a response from Swish. When the payer confirms the payment a callback request will follow from Swedbank Pay. Reversals The Reversals resource list the reversals transactions (one or more) on a specific payment. Reversal Sequence Diagram A reversal transcation need to match the Payee reference of a completed sales transaction. sequenceDiagram activate Merchant Merchant-&gt;&gt;- SwedbankPay: POST &lt;Swish reversal&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource Create Reversal Transaction A reversal transaction can be created after a completed authorization by performing a request to the create-reversal operation. A callback request will follow from Swedbank Pay. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\" : \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check︎ transaction object The transaction object, containing information about this reversal. check︎ amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check︎ description string A textual description of this reversal. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The created reversal resource contains information about the reversal transaction made against a swish payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/swish/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-reversal\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the reversal resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Swish\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"swish Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] } Capture Swish does not support capture as it is a one-phase payment method all completed payments are captured. Cancel Swish does not support cancel as cancel can only be used on two-phase payments before they are captured or reversed. Recurring Swish does not support recurring payments. Seamless view Features",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/after-payment.html"
  },{
    "title": "After Payment",
    "text": "Options After Posting A Payment When you detect that the payer has reached your completeUrl, you need to do a GET request on the payment resource, which contains the id of the payment generated in the first step, to receive the state of the transaction. You will also be able to see the available operations after posting a payment. Abort: It is possible to abort the process if the payment has no successful transactions. See the abort description. For reversals, you will need to implement the reversal request. If CallbackURL is set: Whenever changes to the payment occur aCallback request will be posted to the callbackUrl,which was set when the payment was created. Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Trustly\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"trustly Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] } Reversals The create-reversal operation will reverse a payment and refund the amount to the payer. To reverse a payment, perform the create-reversal operation. The HTTP body of the request should look as follows: Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 POST /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"activity\": \"Sale\", \"amount\": 1500, \"vatAmount\": 0, \"payeeReference\": \"ABC856\", \"receiptReference\": \"ABC855\", \"description\": \"description for transaction\" } } Required Field Type Description check︎ transaction object The transaction object containing details about the reversal transaction. check︎ activity string FinancingConsumer. check︎ amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check︎ payeeReference string The payeeReference is the receipt/invoice number if receiptReference is not defined, which is a unique reference with max 50 characters set by the merchant system. This must be unique for each operation and must follow the regex pattern [\\w-]*.   receiptReference string(50) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check︎ description string A textual description of the reversal. Reversal Response The reversal resource will be returned, containing information about the newly created reversal transaction. The created reversal resource contains information about the reversal transaction made against a trustly payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/trustly/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-reversal\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the reversal resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource will list the reversal transactions (one or more) on a specific payment. The URL will be found on a payment that has a successful sale operation. Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a trustly payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram Reversal can only be done on completed Sales transactions. sequenceDiagram participant SwedbankPay as Swedbank Pay participant Merchant Merchant-&gt;&gt;SwedbankPay: Post &lt;Trustly reversals&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate Merchant deactivate SwedbankPay Seamless View Features",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/after-payment.html"
  },{
    "title": "After Payment",
    "text": "Options After Posting A Payment When you detect that the payer has reached your completeUrl, you need to do a GET request on the payment resource, which contains the paymentID generated in the first step, to receive the state of the transaction. You will also be able to see the available operations after posting a payment. Abort: It is possible to abort the process if the payment has no successful transactions. See the abort description. An invoice authorization must be followed by a capture or cancel request. For reversals, you will need to implement the reversal request. If CallbackURL is set: Whenever changes to the payment occur a Callback request will be posted to the callbackUrl, which was generated when the payment was created. Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Invoice\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"invoice Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] } Cancellations Perform the create-cancellation operation to cancel a previously authorized or partially captured invoice payment. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 12 POST /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"activity\": \"FinancingConsumer\", \"payeeReference\": \"customer order reference-unique\", \"description\": \"description for transaction\" } } Required Parameter name Datatype Value (with description) check︎ transaction.activity string FinancingConsumer. check︎ transaction.payeeReference string The payeeReference is the receipt/invoice number, which is a unique reference with max 50 characters set by the merchant system. This must be unique for each operation and must follow the regex pattern [\\w-]*. check︎ transaction.description string(50) A textual description for the cancellation. Cancel Response The cancel resource will be returned, containing information about the newly created cancel transaction. The created cancel resource contains information about the cancel transaction made against a invoice payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/invoice/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   List Cancel Transactions The cancellations resource lists the cancellation transaction made on a specific payment. Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The cancel resource contains information about the cancel transaction made against a invoice payment. You can return a specific cancel transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellations\": { \"receiptReference\": \"AH12355\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"cancelList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the cancellations resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of cancel transaction objects. {{ transaction }}List[] object The cancel transaction object described in the cancel resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Cancel Sequence A cancel can only be performed on a successfully authorized transaction which has not been captured yet. If you perform a cancellation after doing a partial capture, you will only cancel the remaining authorized amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: Post &lt;Invoice cancellations&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate Merchant deactivate SwedbankPay Reversals The create-reversal operation will reverse a previously captured payment and refund the amount to the payer. To reverse a payment, perform the create-reversal operation. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 POST /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"activity\": \"FinancingConsumer\", \"amount\": 1500, \"vatAmount\": 0, \"payeeReference\": \"ABC856\", \"receiptReference\": \"ABC855\", \"description\": \"description for transaction\" } } Required Field Type Description check︎ transaction object The transaction object containing details about the reversal transaction. check︎ activity string FinancingConsumer. check︎ amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check︎ payeeReference string The payeeReference is the receipt/invoice number if receiptReference is not defined, which is a unique reference with max 50 characters set by the merchant system. This must be unique for each operation and must follow the regex pattern [\\w-]*.   receiptReference string(50) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check︎ description string A textual description of the reversal. Reversal Response The reversal resource will be returned, containing information about the newly created reversal transaction. The created reversal resource contains information about the reversal transaction made against a invoice payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/invoice/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-reversal\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the reversal resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource will list the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a invoice payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"receiptReference\": \"AH12355\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Reversal can only be done on an captured transaction where there are some captured amount not yet reversed. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: Post &lt;Invoice reversals&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate Merchant deactivate SwedbankPay Capture Features",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/after-payment.html"
  },{
    "title": "After Payment",
    "text": "Options After Posting A Payment When you detect that the payer reach your completeUrl , you need to do a GET request on the payment resource, containing the paymentID generated in the first step, to receive the state of the transaction. You will also be able to see the available operations after posting a payment. Abort: It is possible to abort the process if the payment has no successful transactions. See the Abort description here. If the payment shown above is done as a two phase (Authorization), you will need to implement the Capture and Cancel requests. For reversals, you will need to implement the Reversal request. If CallbackURL is set: Whenever changes to the payment occur a Callback request will be posted to the callbackUrl, which was generated when the payment was created. Cancellations Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the difference between the capture amount and the authorization amount. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource. check description string A textual description of the reason for the cancellation. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The cancel resource contains information about a cancellation transaction made against a payment. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancellation\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation resource contains information about the cancellation transaction made against a card payment. id string The relative URL of the created cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized , Completed or Failed . Indicates the state of the transaction number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the payment order in its current state. List Cancel Transactions The cancellations resource lists the cancellation transactions on a specific payment. Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The cancellation resource contains information about the cancellation transaction made against a creditcard payment. You can return a specific cancellation transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellations\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"cancellationList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the cancellations resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of cancellation transaction objects. {{ transaction }}List[] object The cancellation transaction object described in the cancellation resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancellation has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Cancel Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [creditcard cancellactions] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource Reversals This transaction is used when a captured payment needs to be reversed. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this reversal transaction belongs to. reversal object The reversal resource contains information about the reversal transaction made against a card payment. id string The relative URL of the created reversaltransaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancellation has been done and further transactions are possible, the state will be awaitingActivity. number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the payment order in its current state. List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a creditcard payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [creditcard reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Creditcard\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"creditcard Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] } Remove Payment Token If you, for any reason, need to delete a paymentToken you use the Delete payment token request. warning Please note that this call does not erase the card number stored at Swedbank Pay. A card number is automatically deleted six months after a successful Delete payment token request. If you want to remove card information beforehand, you need to contact ehandelsetup@swedbankpay.dk, verkkokauppa.setup@swedbankpay.fi, ehandelsetup@swedbankpay.no or ehandelsetup@swedbankpay.se; and supply them with the relevant transaction reference or payment token. Delete Token Request Request 1 2 3 4 5 6 7 8 9 10 PATCH /psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"tokenType\" : \"PaymentToken\", \"comment\": \"Comment on why the deletion is happening\" } Delete Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/creditcard/payments/instrumentdata/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"isDeleted\": true, \"isPayeeToken\": false, \"cardBrand\": \"MasterCard\", \"maskedPan\": \"123456xxxxxx1111\", \"expiryDate\": \"MM/YYYY\" } } Mobile Card Payments Features",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/after-payment.html"
  },{
    "title": "After Payment",
    "text": "Options After Posting A Payment Abort: It is possible to abort a payment if the payment has no successful transactions. If the payment shown above has a completed authorization, you will need to implement the Capture and Cancel requests. For reversals, you will need to implement the Reversal request. If CallbackURL is set: Whenever changes to the payment occur a Callback request will be posted to the callbackUrl, generated when the payment was created. Cancellations The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction Perform the create-cancel operation to cancel a previously created payment. You can only cancel a payment - or part of payment - not yet captured. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields check︎ Field Type Description check︎ transaction string The transaction object contains information about this cancellation. check︎ description string A textual description of the reason for the cancellation. check︎ payeeReference string(50) A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The created cancel resource contains information about the cancel transaction made against a mobilepay payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/mobilepay/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the different between the capture amount and the authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt;mobilepay cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant Reversals The reversal resource contains information about the reversal transaction made against a mobilepay payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Create Reversal Transaction The create-reversal operation reverses a previously created and captured payment. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1000, \"vatAmount\": 0, \"description\" : \"Test Reversal\", \"payeeReference\": \"DEF456\" } } Show fields Hide fields check︎ Field Type Description check︎ transaction integer The reversal transaction. check︎ amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check︎ description string A textual description of the capture check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The created reversal resource contains information about the reversal transaction made against a mobilepay payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/mobilepay/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-reversal\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the reversal resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Reversal Sequence Reversal can only be done on a payment where there are some captured amount not yet reversed. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt;mobilepay reversal&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Mobilepay\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"DKK\", \"prices\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"mobilepay Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"da-DK\", \"urls\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] } Seamless View Features",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/after-payment.html"
  },{
    "title": "After Payment",
    "text": "Create Payment To create a Vipps payment, you perform an HTTP POST against the /psp/vipps/payments resource. An example of a payment creation request is provided below. Each individual field of the JSON document is described in the following section. Use the expand request parameter to get a response that includes one or more expanded sub-resources inlined. Vipps Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 POST /psp/vipps/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"prices\": [ { \"type\": \"Vipps\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Vipps Test\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://api.externalintegration.payex.com/psp/payment-callback\", \"logoUrl\": \"https://example.com/path/to/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"Postmantimestamp\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+4793000001\" } } } Show fields Hide fields Required Field Type Description check︎ payment object The payment object. check︎ operation string Purchase check︎ intent string Authorization check︎ currency string NOK check︎ prices object The prices object. check︎ type string vipps check︎ amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. check︎ vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check︎ description string(40) A 40 character length textual description of the purchase. check︎ userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check︎ language string sv-SE, nb-NO or en-US. check︎ urls object The object containing URLs relevant for the payment. check︎ hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check︎ completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check︎ payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check︎ payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory strin A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The subsites must be resolved with Swedbank Pay reconciliation before being used.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object An object that holds prefill information that can be inserted on the payment page.   msisdn string Number will be prefilled on payment page, if valid. Only Norwegian phone numbers are supported. The country code prefix is +47 Vipps Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 72100003079, \"created\": \"2018-09-05T14:18:44.4259255Z\", \"instrument\": \"Vipps\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Vipps Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0 weeeeee\", \"language\": \"nb-NO\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"urls\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/vipps/payments/authorize/afccf3d0016340620756d5ff3e08f69b555fbe2e45ca71f4bd159ebdb0f00065\", \"rel\": \"redirect-authorization\" } ] } Purchase Posting a payment (operation Purchase) returns the options of aborting the payment altogether or creating an authorization transaction through the redirect-authorization hyperlink. Request 1 2 3 4 5 { \"payment\": { \"operation\": \"Purchase\" } } Operations When a payment resource is created and during its lifetime, it will have a set of operations that can be performed on it. Which operations are available will vary depending on the state of the payment resource, what the access token is authorized to do, etc. Field Description href The target URL to perform the operation against. rel The name of the relation the operation has to the current resource. method The HTTP method to use when performing the operation. The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-payment-abort Aborts the payment before any financial transactions are performed. redirect-authorization Used to redirect the payer to Swedbank Pay Payments and the authorization UI. create-capture Creates a capture transaction. create-cancellation Creates a cancellation transaction. create-reversal Creates a reversal transaction. Vipps Transactions All Vipps after payment transactions are described below. Authorizations The authorizations resource contains information about the authorization transactions made on a specific payment. GET Request Authorizations Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Authorizations The created authorization resource contains information about the authorization transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancellations The cancellations resource lists the cancellation transactions on a specific payment. GET Request Cancel Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Cancel The cancel resource contains information about the cancel transaction made against a vipps payment. You can return a specific cancel transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellations\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"cancelList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the cancellations resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of cancel transaction objects. {{ transaction }}List[] object The cancel transaction object described in the cancel resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Create Cancellation Transaction A payment may be cancelled if the rel create-cancellation is available. You can only cancel a payment, or part of it, if it has yet to be captured. To revert a capture, or part of a capture, you must perform a reversal. Performing a cancellation will cancel all the remaining authorized amount on a payment. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"payeeReference\": \"testabc\", \"description\" : \"description for transaction\" } } Cancel Response The created cancel resource contains information about the cancel transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Reversals The reversals resource lists the reversal transactions (one or more) on a specific payment. GET Request Reversal Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Reversal The reversal resource contains information about the reversal transaction made against a vipps payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Create Reversal Transaction A reversal transaction can be created if the rel create-reversal is available. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"payeeReference\": \"cpttimestamp\", \"description\" : \"description for transaction\" } } Required Field Type Description check transaction object The transaction object. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the capture check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The created reversal resource contains information about the reversal transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-reversal\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the reversal resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Abort To abort a payment, perform the update-payment-abort operation that is returned in the payment request. Abort Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Abort Response The response will be the payment resource with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 70100130293, \"created\": \"2019-01-09T13:11:28.371179Z\", \"updated\": \"2019-01-09T13:11:46.5949967Z\", \"instrument\": \"Vipps\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Aborted\", \"currency\": \"NOK\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"vipps Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"urls\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [] } Capture Features",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/after-payment.html"
  },{
    "title": "After Payment",
    "text": "Operations Most payment instruments are two-phase payments – in which a successful payment order will result in an authorized transaction – that must be followed up by a capture or cancellation transaction in a later stage. One-phase payments like Swish are settled directly without the option to capture or cancel. For a full list of the available operations, see the techincal reference. Operation Description create-paymentorder-capture The second part of a two-phase transaction where the authorized amount is sent from the payer to the payee. It is possible to do a part-capture on a subset of the authorized amount. Several captures on the same payment are possible, up to the total authorization amount. create-paymentorder-cancel Used to cancel authorized and not yet captured transactions. If a cancellation is performed after doing a part-capture, it will only affect the not yet captured authorization amount. create-paymentorder-reversal Used to reverse a payment. It is only possible to reverse a payment that has been captured and not yet reversed. GET Request To identify the operations that are available we need to do a GET request against the URL of paymentorder.id: Request 1 2 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; GET Response The (abbreviated) response containing an updateorder, capture, cancellation, and reversal operation should look similar to the response below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures\", \"rel\": \"create-paymentorder-capture\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations\", \"rel\": \"create-paymentorder-cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals\", \"rel\": \"create-paymentorder-reversal\", \"contentType\": \"application/json\" } ] } Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. operations array The array of operations that are possible to perform on the payment order in its current state. Cancel Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction To cancel a previously created payment, you must perform the create-paymentorder-cancel operation against the accompanying href returned in the operations list. You can only cancel a payment - or part of a payment - which has not been captured yet. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The transaction object. check description string A textual description of why the transaction is cancelled. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response If the cancel request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you perform a cancel after doing a partial capture, you will cancel the remaining authorized amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant Reversal If we want to reverse a previously captured amount, we need to perform create-paymentorder-reversal against the accompanying href returned in the operations list. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Reversal of captured transaction\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check description string Textual description of why the transaction is reversed. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. Reversal Response If the reversal request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"reversal\": { \"id\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/pcreditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-26T14:00:03.4725904Z\", \"updated\": \"2022-01-26T14:00:04.3851302Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 71100730898, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Reversing the capture amount\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\" \"isOperational\": false, \"reconciliationNumber\": 738180, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this reversal transaction belongs to. reversals object The reversal object, containing information about the reversal transaction. id string The relative URL of the reversal transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational boolean true if the transaction is operational; otherwise false . reconciliationNumber string The number of the reconciliation batch file where the transaction can be found. operations array The array of operations that are possible to perform on the payment order in its current state. info Note that all of the operations Cancel, Capture and Reversal must be implemented. Capture Features",
    "tags": "",
    "url": "/old-implementations/checkout-v2/after-payment.html"
  },{
    "title": "After Payment",
    "text": "Operations Most payment instruments are two-phase payments – in which a successful payment order will result in an authorized transaction – that must be followed up by a capture or cancellation transaction in a later stage. One-phase payments like Swish are settled directly without the option to capture or cancel. For a full list of the available operations, see the techincal reference. Operation Description create-paymentorder-capture The second part of a two-phase transaction where the authorized amount is sent from the payer to the payee. It is possible to do a part-capture on a subset of the authorized amount. Several captures on the same payment are possible, up to the total authorization amount. create-paymentorder-cancel Used to cancel authorized and not yet captured transactions. If a cancellation is performed after doing a part-capture, it will only affect the not yet captured authorization amount. create-paymentorder-reversal Used to reverse a payment. It is only possible to reverse a payment that has been captured and not yet reversed. GET Request To identify the operations that are available we need to do a GET request against the URL of paymentorder.id: Request 1 2 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; GET Response The (abbreviated) response containing an updateorder, capture, cancellation, and reversal operation should look similar to the response below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures\", \"rel\": \"create-paymentorder-capture\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations\", \"rel\": \"create-paymentorder-cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals\", \"rel\": \"create-paymentorder-reversal\", \"contentType\": \"application/json\" } ] } Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. operations array The array of operations that are possible to perform on the payment order in its current state. Cancel Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction To cancel a previously created payment, you must perform the create-paymentorder-cancel operation against the accompanying href returned in the operations list. You can only cancel a payment - or part of a payment - which has not been captured yet. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The transaction object. check description string A textual description of why the transaction is cancelled. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response If the cancel request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you perform a cancel after doing a partial capture, you will cancel the remaining authorized amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant Reversal If we want to reverse a previously captured amount, we need to perform create-paymentorder-reversal against the accompanying href returned in the operations list. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Reversal of captured transaction\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check description string Textual description of why the transaction is reversed. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. Reversal Response If the reversal request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"reversal\": { \"id\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/pcreditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-26T14:00:03.4725904Z\", \"updated\": \"2022-01-26T14:00:04.3851302Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 71100730898, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Reversing the capture amount\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\" \"isOperational\": false, \"reconciliationNumber\": 738180, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this reversal transaction belongs to. reversals object The reversal object, containing information about the reversal transaction. id string The relative URL of the reversal transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational boolean true if the transaction is operational; otherwise false . reconciliationNumber string The number of the reconciliation batch file where the transaction can be found. operations array The array of operations that are possible to perform on the payment order in its current state. info Note that all of the operations Cancel, Capture and Reversal must be implemented. Capture Features",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/after-payment.html"
  },{
    "title": "Age Restrictions",
    "text": "Restrict Payments To An Age Limit Swedbank Pay provides the possibility to restrict payments to an Age Limit from payment instruments which support this. This can be used when you want to make sure you only accept payments from individuals over a certain age. You are currently only able to restrict Swish payments to an Age Limit, but we will add support for more payment instruments going forward. No changes are required at your (the merchant’s) end to be able to offer more instruments at a later time. The way you use this feature is by adding the field restrictedToAgeLimit in your payment order request and setting it to the age limit you wish to restrict your payments to. This will leave out all instruments which do not support this feature. For instance, set restrictedToAgeLimit to 20 if you only want to accept payments from individuals over the age 20. Instruments supporting the feature will reject payments that do not match the restriction. Restrict Payments To An Age Limit Request You need to add an int field called restrictedToAgeLimit in your payment order request and set it to your desired age limit, i.e. 20. Below is a shortened example of a payment order request. Apart from the new field, the payment request is similar to a standard payment order request. For an example of a payment order request, click here. The response will be similar to a standard payment order response, which is also documented on the page linked above. Request 1 2 3 4 5 6 7 8 9 10 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"restrictedToAgeLimit\": 20, } } Required Field Type Description check paymentOrder object The payment order object.   restrictedToAgeLimit int Used for setting the age you want to restrict the payment to.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/age-restrictions.html"
  },{
    "title": "Age Restrictions",
    "text": "Restrict Payments To An Age Limit Swedbank Pay provides the possibility to restrict payments to an Age Limit from payment instruments which support this. This can be used when you want to make sure you only accept payments from individuals over a certain age. You are currently only able to restrict Swish payments to an Age Limit, but we will add support for more payment instruments going forward. No changes are required at your (the merchant’s) end to be able to offer more instruments at a later time. The way you use this feature is by adding the field restrictedToAgeLimit in your payment order request and setting it to the age limit you wish to restrict your payments to. This will leave out all instruments which do not support this feature. For instance, set restrictedToAgeLimit to 20 if you only want to accept payments from individuals over the age 20. Instruments supporting the feature will reject payments that do not match the restriction. Restrict Payments To An Age Limit Request You need to add an int field called restrictedToAgeLimit in your payment order request and set it to your desired age limit, i.e. 20. Below is a shortened example of a payment order request. Apart from the new field, the payment request is similar to a standard payment order request. For an example of a payment order request, The response will be similar to a standard payment order response, which is also documented on the page linked above. Request 1 2 3 4 5 6 7 8 9 10 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"restrictedToAgeLimit\": 20, } } Required Field Type Description check paymentOrder object The payment order object.   restrictedToAgeLimit int Used for setting the age you want to restrict the payment to.",
    "tags": "",
    "url": "/checkout-v3/features/optional/age-restrictions.html"
  },{
    "title": "Android Default UI",
    "text": "Android: Default UI PaymentFragment is very plain; in normal use it will only contain a progress indicator and/or a WebView. For error conditions that may be resolved by a simple retry, however, it will, by default show a message and a pull-to-refresh control. If desired, this UI can be disabled. In addition, is a completion message and an error message available. Those are unlikely to be useful in production, but can be enabled for development, if desired. This feature is also controller by an argument. This argument is an integer representing flag bits. Android 1 2 3 4 5 6 7 8 9 10 val arguments = PaymentFragment.ArgumentsBuilder() .paymentOrder(paymentOrder) .setEnabledDefaultUI() // enable nothing .build() val manualArguments = Bundle() manualArguments.putInt( PaymentFragment.ARG_ENABLED_DEFAULT_UI, PaymentFragment.RETRY_PROMPT or PaymentFragment.ERROR_MESSAGE )",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/technical-reference/android-default-ui.html"
  },{
    "title": "Android View Model Provider Key",
    "text": "Android: View Model Provider Key On Android, you communicate with a PaymentFragment through a PaymentViewModel that is stored in the FragmentActivity containing the PaymentFragment. Normally this means that a single Activity can only contain one PaymentFragment. This should not usually be a problem, but for advanced use cases, you can manually set the storage key for the PaymentViewModel of a given PaymentFragment, allowing for multiple instances to coexist in a single Activity. Further use of multiple simultaneous PaymentFragments is beyond the scope of this document. The key is set as an argument to the PaymentFragment. You can either use the PaymentFragment.ArgumentsBuilder to build the argument bundle (recommended), or you can manually set a value for the key PaymentFragment.ARG_VIEW_MODEL_PROVIDER_KEY. Android 1 2 3 4 5 6 7 8 9 10 val arguments = PaymentFragment.ArgumentsBuilder() .paymentOrder(paymentOrder) .viewModelProviderKey(\"PaymentViewModelOne\") .build() val manualArguments = Bundle() manualArguments.putString( PaymentFragment.ARG_VIEW_MODEL_PROVIDER_KEY, \"PaymentViewModelTwo\" )",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/technical-reference/android-view-model-provider-key.html"
  },{
    "title": "Android",
    "text": "This guide assumes that you are using the Merchant Backend Configuration and your backend implements the Merchant Backend API. If you are using a custom backend instead, the meaning of PaymentFragment arguments will be different, as well as any errors reported, but the basic process is the same. The differences will be highlighted in the chapter on custom backends. Installation The Android component of the Swedbank Pay Mobile SDK is distributed through Maven Central. It is split into two libraries in the com.swedbankpay.mobilesdk group: Core SDK: com.swedbankpay.mobilesdk:mobilesdk Merchant Backend Utilities: com.swedbankpay.mobilesdk:mobilesdk-merchantbackend If you are not using the Merchant Backend API in your backend, you only need to use the first one. Otherwise, you should add both libraries to your project to get utilities for interfacing with your Merchant Backend server. Most applications can integrate the SDK by simply adding the dependency in the build.gradle file: 1 2 3 4 dependencies { implementation 'com.swedbankpay.mobilesdk:mobilesdk:4.0.0' implementation 'com.swedbankpay.mobilesdk:mobilesdk-merchantbackend:4.0.0' } Please refer to Maven Central for the latest versions of the libraries. Usage sequenceDiagram participant App participant SDK participant Merchant participant SwedbankPay as Swedbank Pay participant Ext as External App rect rgba(238, 112, 35, 0.05) note left of App: Configuration App -&gt;&gt; SDK: MerchantBackendConfiguration.Builder(\"https://example.com/swedbank-pay-mobile/\").build() SDK --&gt;&gt; App: configuration App -&gt;&gt; SDK: PaymentFragment.defaultConfiguration = configuration end opt Unless Guest Payment App -&gt;&gt; SDK: Consumer(language = ..., shippingAddressRestrictedToCountryCodes = ...) SDK --&gt;&gt; App: consumer end rect rgba(138, 205, 195, 0.1) note left of App: Prepare Payment App -&gt;&gt; SDK: PaymentOrderUrls(context, \"https://example.com/swedbank-pay-mobile/\") SDK --&gt;&gt; App: paymentOrderUrls App -&gt;&gt; SDK: PaymentOrder(urls = paymentOrderUrls, ...) SDK --&gt;&gt; App: paymentOrder end App -&gt;&gt; SDK: activity.paymentViewModel.[rich]state.observe(...) App -&gt;&gt; SDK: PaymentFragment.ArgumentsBuilder().consumer(consumer).paymentOrder(paymentOrder).build() SDK --&gt;&gt; App: arguments App -&gt;&gt; SDK: PaymentFragment() SDK --&gt;&gt; App: paymentFragment App -&gt;&gt; SDK: paymentFragment.arguments = arguments App -&gt;&gt; App: Show paymentFragment rect rgba(138, 205, 195, 0.1) note left of App: Discover Endpoints SDK -&gt;&gt; Merchant: GET /swedbank-pay-mobile/ Merchant --&gt;&gt; SDK: { \"consumers\": \"/swedbank-pay-mobile/consumers\", \"paymentorders\": \"/swedbank-pay-mobile/paymentorders\" } end opt Unless Guest Payment SDK -&gt;&gt; Merchant: POST /swedbank-pay-mobile/consumers Merchant -&gt;&gt; SwedbankPay: POST /psp/consumers SwedbankPay --&gt;&gt; Merchant: rel: view-consumer-identification Merchant --&gt;&gt; SDK: rel: view-consumer-identification SDK -&gt;&gt; SDK: Show html page with view-consumer-identification SwedbankPay -&gt;&gt; SDK: Consumer identification process SDK -&gt;&gt; SwedbankPay: Consumer identification process SwedbankPay -&gt;&gt; SDK: consumerProfileRef SDK -&gt;&gt; SDK: paymentOrder.payer = { consumerProfileRef } end rect rgba(138, 205, 195, 0.1) note left of App: Payment Menu SDK -&gt;&gt; Merchant: POST /swedbank-pay-mobile/paymentorders Merchant -&gt;&gt; SwedbankPay: POST /psp/paymentorders SwedbankPay --&gt;&gt; Merchant: rel: view-paymentorder Merchant --&gt;&gt; SDK: rel: view-paymentorder SDK -&gt;&gt; SDK: Show html page with view-paymentorder SwedbankPay -&gt;&gt; SDK: Payment process SDK -&gt;&gt; SwedbankPay: Payment process opt Redirect to Third-Party Page SDK -&gt;&gt; SDK: Show third-party page SDK -&gt;&gt; SDK: Intercept navigation to paymentUrl SDK -&gt;&gt; SDK: Reload html page with view-paymentorder end opt Launch External Application SDK -&gt;&gt; Ext: Start external application Ext -&gt;&gt; Merchant: Open paymentUrl Merchant -&gt;&gt; Ext: Redirect intent://&lt;...&gt;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER Ext -&gt;&gt; SDK: Start activity\\naction=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER SDK -&gt;&gt; SDK: Reload html page with view-paymentorder end SDK -&gt;&gt; SDK: Intercept navigation to completeUrl SDK -&gt;&gt; SDK: paymentViewModel.state &lt;- SUCCESS SDK -&gt;&gt; App: observer.onChanged(SUCCESS) end App -&gt;&gt; App: Remove paymentFragment The public API of the Android SDK is in the package com.swedbankpay.mobilesdk. The main component is PaymentFragment, a Fragment that handles a single payment order. To use a PaymentFragment, it must have a Configuration. In most cases it is enough to construct a single Configuration and set it as the default. In more advanced cases you will need to subclass PaymentFragment and override getConfiguration. For using a backend implementing the Merchant Backend API, the SDK also provides utility classes in the package com.swedbankpay.mobilesdk.merchantbackend. The examples on this page make use of these, including the Configuration implementation MerchantBackendConfiguration. 1 2 3 4 5 val backendUrl = \"https://example.com/swedbank-pay-mobile/\" val configuration = MerchantBackendConfiguration.Builder(backendUrl) .build() PaymentFragment.defaultConfiguration = configuration To start a payment, you need a PaymentOrder, and, unless making a guest payment, a Consumer. Using a Consumer makes future payments by the same payer easier. The semantics of Consumer properties are the same as the fields of the POST /psp/consumers request. There are default values for the operation and language properties (ConsumerOperation.INITIATE_CONSUMER_SESSION and Language.ENGLISH, respectively). 1 2 3 4 val consumer = Consumer( language = Language.SWEDISH, shippingAddressRestrictedToCountryCodes = listOf(\"NO\", \"SE\", \"DK\") ) Similarly, the semantics of PaymentOrder properties are the same as the fields of the POST /psp/paymentorders request. Sensible default values are provided for many of the properties. The urls property has no default per se, but there are convenience constructors available for it, and it is recommended that you use them. Assuming you have the Android Payment Url Helper endpoint set up with the specified static path relative to your backend url (i.e. sdk-callback/android-intent), then using the one of the PaymentOrderUrls(context: Context, backendUrl: String) variants will set the paymentUrl correctly. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 val paymentOrder = PaymentOrder( currency = Currency.getInstance(\"SEK\"), amount = 1500L, vatAmount = 375L, description = \"Test Purchase\", language = Language.SWEDISH, urls = PaymentOrderUrls(context, backendUrl), payeeInfo = PayeeInfo( // ① payeeName = \"Merchant1\", productCategory = \"A123\", orderReference = \"or-123456\", subsite = \"MySubsite\" ), orderItems = listOf( OrderItem( reference = \"P1\", name = \"Product1\", type = ItemType.PRODUCT, `class` = \"ProductGroup1\", itemUrl = \"https://example.com/products/123\", imageUrl = \"https://example.com/product123.jpg\", description = \"Product 1 description\", discountDescription = \"Volume discount\", quantity = 4, quantityUnit = \"pcs\", unitPrice = 300L, discountPrice = 200L, vatPercent = 2500, amount = 1000L, vatAmount = 250L ) ) ) ① payeeId and payeeReference are required fields, but default to the empty string. The assumption here is that your Merchant Backend will override the values set here. If your system works better with the Mobile Client setting them instead, they are available here also. To start a payment, create a PaymentFragment and set its arguments according to the payment. The PaymentFragment.ArgumentsBuilder class is provided to help with creating the argument bundle. In most cases you only need to worry about the paymentOrder property. The payment process starts as soon as the PaymentFragment is visible. Note that Digital Payments is currently opt-in, so that merchants can upgrade without too much breaking changes and start using the new Digital Payments when ready. 1 2 3 4 5 6 7 8 9 10 11 12 val arguments = PaymentFragment.ArgumentsBuilder() .checkoutV3(true) .paymentOrder(paymentOrder) .build() val paymentFragment = PaymentFragment() paymentFragment.arguments = arguments // Now use FragmentManager to show paymentFragment. // You can also make a navigation graph with PaymentFragment // and do something like // findNavController().navigate(R.id.showPaymentFragment, arguments) Note that the SDK only supports customer-checkin for version 2, and provides fallback for merchants in need of this. Then you need to supply a consumer and the ckeckoutV3 setting becomes irrelevant. 1 2 3 4 5 6 7 8 9 val arguments = PaymentFragment.ArgumentsBuilder() .consumer(consumer) .paymentOrder(paymentOrder) .build() val paymentFragment = PaymentFragment() paymentFragment.arguments = arguments // Now handle the fragment the same way as previously. To observe the payment process, use the PaymentViewModel of the containing Activity. When the PaymentViewModel signals that the payment process has reached a final state, you should remove the PaymentFragment and inform the user of the result. 1 2 3 4 5 6 7 paymentViewModel.state.observe(this, Observer { if (it.isFinal == true) { // Remove PaymentFragment // Check payment status from your backend // Notify user } }) Note that checking the payment status after completion is outside the scope of the Mobile SDK. Your backend should collect any information it needs to perform this check when it services the request to the Payment Orders endpoint made by the PaymentFragment. Errors If any errors happen in the payment, the PaymentViewModel will report a state of either FAILURE or RETRYABLE_ERROR. If the error is retryable, the PaymentFragment will show an error message and a retry control (this is configurable), but you can also trigger a retry by calling retryPreviousAction on the PaymentViewModel. When the state is FAILURE or RETRYABLE_ERROR, and the error condition was caused by an exception thrown from the Configuration, that exception is available in PaymentViewModel.richState.exception. The exception will be of any type throw by your Configuration. When using MerchantBackendConfiguration, this means it will be an IOException if there was a problem communicating with the backend, and an IllegalStateException if you have made a programming error (consult the exception message). A particular IOException to check for is RequestProblemException, which signals that the backend responded with a Problem message. Another one is UnexpectedResponseException, which signals that the SDK did not understand the backend response. Problems If errors are encountered in the payment process, the Merchant Backend is expected to respond with a Problem Details for HTTP APIs (RFC 7807) message. If a problem occurs, the application can receive it by observing the richState of the PaymentViewModel. If a problem has occurred, the exception property of the RichState will contain a RequestProblemException. The problem is then accessible as exception.problem. The Android SDK will parse any RFC 7807 problem, but it has specialized data types for known problem types, namely the Common Problems and the Merchand Backend Problems. Problems are presented as a class hierarchy representing different problem categories. All problems parsed from RFC 7807 messages are classified as either Client or Server problems. A Client problem is one caused by client behavior, and is to be fixed by changing the request made to the server. Generally, a Client problem is a programming error, with the possible exception of Problem.Client.MobileSDK.Unauthorized. A Server problem is one caused by a malfunction or lack of service in the server evironment. A Server problem is fixed by correcting the behavior of the malfunctioning server, or simply trying again later. Further, both Client and Server problems are categorized as MobileSDK, SwedbankPay, or Unknown. MobileSDK problems are ones with Merchant Backend problem types, while SwedbankPay problems have Swedbank Pay API problem types. Unknown problems are of types that the SDK has no knowledge of. There is also the interface SwedbankPayProblem, which encompasses both Client and Server type SwedbankPay problems. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 paymentViewModel.richState.observe(this, Observer { if (it.state.isFinal == true) { val exeption = it.exception as? RequestProblemException if (exception != null) ( when (val problem = exception.problem) { is MerchantBackendProblem.Client.MobileSDK.Unauthorized -&gt; Log.d(TAG, \"Credentials invalidated: ${problem.message}\") if MerchantBackendProblem.Client.MobileSDK -&gt; Log.d(TAG, \"Other client error at Merchant Backend: ${problem.raw}\") is MerchantBackendProblem.Client.SwedbankPay.InputError -&gt; Log.d(TAG, \"Payment rejected by Swedbank Pay: ${problem.detail}; Fix: ${problem.action}\") is MerchantBackendProblem.Client.Unknown -&gt; if (problem.type == \"https://example.com/problems/special-problem\") { Log.d(TAG, \"Special problem occurred: ${problem.detail}\") } else { Log.d(TAG, \"Unexpected problem: ${problem.raw}\") } is MerchantBackendProblem.Server.MobileSDK.BackendConnectionTimeout -&gt; Log.d(TAG, \"Swedbank Pay timeout: ${problem.message}\") is MerchantBackendProblem.Server.SwedbankPay.SystemError -&gt; Log.d(TAG, \"Generic server error at Swedbank Pay: ${problem.detail}\") is SwedbankPayProblem -&gt; Log.d(TAG, \"Other problem at Swedbank Pay: ${problem.detail}; Fix: ${problem.action}\") else -&gt; Log.d(TAG, \"Unexpected problem: ${problem.raw}\") } } } }) Payment URL And External Applications The payment process may involve navigating to third-party web pages, or even launching external applications. To resume processing the payment in the payment menu, each payment order must have a Payment Url. As mentioned above, the SDK has convenience constructors to set up a payment url for you, and as the SDK handles showing third-party web pages inside the PaymentFragment, it automatically intercepts any navigation to the payment url, and reloads the payment menu. This requires no additional setup. If a third party application is launched, it will signal the return to the payment menu by opening the payment url, using a standard ACTION_VIEW Intent. The payment url is built such that it uses the Android Payment Url Helper, which serves an html page that converts the url to an intent url and redirects to it. The SDK has an intent filter for that intent, so the SDK will receive it, bringing the containing application to the foreground, and reloading the payment menu. If your Merchant Backend serves the Android Payment Url Helper endpoint at the specified path, no further setup is needed. Note that there is an argument for debugging purposes that cause third-party web pages to be opened in an external application. In that case the process continues analogously to the external application case. Using this argument should not be necessary, however. If you do find a case that does not work inside the PaymentFragment, but does work when using the browser for third-party sites, please file a bug on the Android SDK. Merchant Backend Sample Code iOS",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/android.html"
  },{
    "title": "Authorizations",
    "text": "List Authorizations The authorizations resource will list the authorization transactions made on a specific payment. Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The authorization resource contains information about the authorization transaction made against a invoice payment. You can return a specific authorization transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorizations\": { \"receiptReference\": \"AH12355\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"authorizationList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"consumer\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/consumer\" }, \"legalAddress\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/legaladdress\" }, \"billingAddress\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/billingaddress\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [ { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\", \"rel\": \"create-authorization\", \"contentType\": \"application/json\" }, { \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the authorizations resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of authorization transaction objects. {{ transaction }}List[] object The authorization transaction object described in the authorization resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Create Authorization Transaction To create an authorization transaction, perform the create-authorization operation as returned in a previously created invoice payment. info Note: The legal address must be the registered address of the payer. Authorization Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 POST /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"activity\": \"FinancingConsumer\" }, \"consumer\": { \"socialSecurityNumber\": \"socialSecurityNumber\", \"customerNumber\": \"123456\", \"name\": \"Olivia Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"ip\": \"127.0.0.1\" }, \"legalAddress\": { \"addressee\": \"Olivia Nyhuus\", \"streetAddress\": \"SaltnesToppen 43\", \"zipCode\": \"1642\", \"city\": \"Saltnes\", \"countryCode\": \"no\" }, \"billingAddress\": { \"addressee\": \"Olivia Nyhuus\", \"coAddress\": \"Bernt Nyhuus\", \"streetAddress\": \"SaltnesToppen 43\", \"zipCode\": \"1642\", \"city\": \"Saltnes\", \"countryCode\": \"no\" } } Show fields Hide fields Required Field Data type Description check transaction.activity string FinancingConsumer check consumer object The payer object. check socialSecurityNumber string The social security number (national identity number) of the payer. Format Sweden: YYMMDD-NNNN. Format Norway: DDMMYYNNNNN. Format Finland: DDMMYYNNNNN   customerNumber string The customer number in the merchant system.   email string The e-mail address of the payer. check msisdn string The mobile phone number of the payer. Format Sweden: +46707777777. Format Norway: +4799999999. Format Finland: +358501234567 check ip string The IP address of the payer. check legalAddress object The legal address object containing information about the payer’s legal address. check addressee string The full (first and last) name of the payer.   coAddress string The CO-address (if used)   streetAddress string The street address of the payer. Maximum 50 characters long. check zipCode string The postal code (ZIP code) of the payer. check city string The city of the payer. check countryCode string SE, NO, or FI. The country code of the payer. check billingAddress object The billing address object containing information about the payer’s billing address. check addressee string The full (first and last) name of the payer.   coAddress string The CO-address (if used) check︎︎︎︎ ︎ streetAddress string The street address of the payer. Maximum 50 characters long. check zipCode string The postal number (ZIP code) of the payer. check city string The city of the payer. check countryCode string SE, NO, or FI. Authorization Response The authorization resource will be returned, containing information about the newly created authorization transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"consumer\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/consumer\" }, \"legalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/legaladdress\" }, \"billingAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/billingaddress\" }, \"transaction\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/authorizations.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Order Callback 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"paymentorders\" }, \"payment\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a paymentorders payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/paymentorders/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET paymentorders payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a checkout-v3 payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/checkout-v3/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET checkout-v3 payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/checkout-v3/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a swish payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/swish/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET swish payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a trustly payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/trustly/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET trustly payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a invoice payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/invoice/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET invoice payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a creditcard payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"maskedPan\": \"123456xxxxxx1234\", \"expireDate\": \"mm/yyyy\", \"panToken\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit Card\", \"issuingBank\": \"UTL MAESTRO\", \"countryCode\": \"999\", \"acquirerTransactionType\": \"3DSECURE\", \"acquirerStan\": \"39736\", \"acquirerTerminalId\": \"39\", \"acquirerTransactionTime\": \"2017-08-29T13:42:18Z\", \"authenticationStatus\": \"Y\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   paymentToken string The payment token created for the card used in the authorization.   maskedPan string The masked PAN number of the card.   expireDate string The month and year of when the card expires.   panToken string The token representing the specific PAN of the card.   cardBrand string Visa, MC, etc. The brand of the card.   cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization.   issuingBank string The name of the bank that issued the card used for the authorization.   countryCode string The country the card is issued in.   acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer.   acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction.   acquirerTerminalId string The ID of the acquirer terminal.   acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction.   authenticationStatus string Y, A, U or N. Indicates the status of the authentication.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET creditcard payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a mobilepay payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/mobilepay/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET mobilepay payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET vipps payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a old-implementations/checkout-v2 payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/old-implementations/checkout-v2/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET old-implementations/checkout-v2 payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/callback.html"
  },{
    "title": "Callback",
    "text": "warning While the callback feature is mandatory, we would like to emphasize that it is mainly a fail-safe feature. We strongly advice that it is not your primary mean of checking for payment updates. When a change or update from the back-end system are made on a payment or transaction, Swedbank Pay will perform a callback to inform the payee (merchant) about this update. Why Is The Callback Important? Providing a callbackUrl in POST requests is mandatory. Below we provide three example scenarios of why this is important: If the payer closes the payment window, the merchant will never know what happened to the payment if callbackUrl is not implemented. If the payer stops up in a payment app such as Vipps or Swish, the payer will never come back to the merchant. This means that the merchant won’t know what happened to the payment unless callbackUrl is implemented. If a payer experiences a network error or something else happens that prevents the payer from being redirected from Swedbank Pay back to the merchant website, the callbackUrl is what ensures that you receive the information about what happened with the payment. Good To Know About Callbacks When a change or update from the back-end system is made on a payment or transaction, Swedbank Pay will perform an asynchronous server-to-server callback to inform the payee (merchant) about this update. It is important to know that the callback is asynchronous, and not real-time. As we can’t guarantee when you get the callback, there could be a delay between when the payer is returned back to the merchant and when the callback arrives. If the merchant chooses to wait for the callback, the payer might be left at the merchant’s page until the response comes. Swedbank Pay will make an HTTP POST to the callbackUrl that was specified when the payee (merchant) created the payment. When the callbackUrl receives such a callback, an HTTP GET request must be made on the payment or on the transaction. The retrieved payment or transaction resource will give you the necessary information about the recent change/update. As it isn’t scaled to be a primary source of updates, no given response time can be guaranteed, and a callback might fail. It will be retried if that should happen. Below are the retry timings, in seconds from the initial transaction time: 30 seconds 60 seconds 360 seconds 432 seconds 864 seconds 1265 seconds A callback should return a 200 OK response. The callback is sent from 91.132.170.1 in both the test and production environment. To understand the nature of the callback, the type of transaction, its status, etc., you need to perform a GET request on the received URL and inspect the response. The transaction type or any other information can not and should not be inferred from the URL. See URL usage for more information. Payment Instrument Callback 1 2 3 4 5 6 7 8 9 10 { \"payment\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 222222222 }, \"transaction\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"number\": 333333333 } } GET Response When performing an HTTP GET request towards the URL found in the transaction.id field of the callback, the response is going to look something like the abbreviated example provided below. The created authorization resource contains information about the authorization transaction made against a old-implementations/payment-menu-v2 payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/old-implementations/payment-menu-v2/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the authorization resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial authorization has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Sequence Diagram The sequence diagram below shows the HTTP POST you will receive from Swedbank Pay, and the two GET requests that you make to get the updated status. sequenceDiagram Participant Merchant Participant SwedbankPay as Swedbank Pay activate SwedbankPay SwedbankPay-&gt;&gt;+Merchant: POST &lt;callbackUrl&gt; deactivate SwedbankPay note left of Merchant: Callback by Swedbank Pay Merchant--&gt;&gt;+SwedbankPay: HTTP response Merchant-&gt;&gt;+SwedbankPay: GET old-implementations/payment-menu-v2 payment deactivate Merchant note left of Merchant: First API request SwedbankPay--&gt;&gt;+Merchant: payment resource deactivate SwedbankPay",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/callback.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction To cancel a previously created payment, you must perform the cancel operation against the accompanying href returned in the operations list. You can only cancel a payment - or part of a payment - which has not been captured yet. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The transaction object. check description string A textual description of why the transaction is cancelled. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response If the cancel request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you perform a cancel after doing a partial capture, you will cancel the remaining authorized amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/cancel.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction To cancel a previously created payment, you must perform the cancel operation against the accompanying href returned in the operations list. You can only cancel a payment - or part of a payment - which has not been captured yet. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The transaction object. check description string A textual description of why the transaction is cancelled. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response If the cancel request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you perform a cancel after doing a partial capture, you will cancel the remaining authorized amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/checkout-v3/features/core/cancel.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction Perform the create-cancel operation to cancel a previously created payment. You can only cancel a payment - or part of payment - not yet captured. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } check︎ Field Type Description check︎ transaction string The transaction object contains information about this cancellation. check︎ description string A textual description of the reason for the cancellation. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The created cancel resource contains information about the cancel transaction made against a invoice payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/invoice/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the different between the capture amount and the authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/core/cancel.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction Perform the create-cancel operation to cancel a previously created payment. You can only cancel a payment - or part of payment - not yet captured. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } check︎ Field Type Description check︎ transaction string The transaction object contains information about this cancellation. check︎ description string A textual description of the reason for the cancellation. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The created cancel resource contains information about the cancel transaction made against a creditcard payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"maskedPan\": \"123456xxxxxx1234\", \"expireDate\": \"mm/yyyy\", \"panToken\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit Card\", \"issuingBank\": \"UTL MAESTRO\", \"countryCode\": \"999\", \"acquirerTransactionType\": \"3DSECURE\", \"acquirerStan\": \"39736\", \"acquirerTerminalId\": \"39\", \"acquirerTransactionTime\": \"2017-08-29T13:42:18Z\", \"authenticationStatus\": \"Y\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   paymentToken string The payment token created for the card used in the authorization.   maskedPan string The masked PAN number of the card.   expireDate string The month and year of when the card expires.   panToken string The token representing the specific PAN of the card.   cardBrand string Visa, MC, etc. The brand of the card.   cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization.   issuingBank string The name of the bank that issued the card used for the authorization.   countryCode string The country the card is issued in.   acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer.   acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction.   acquirerTerminalId string The ID of the acquirer terminal.   acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction.   authenticationStatus string Y, A, U or N. Indicates the status of the authentication.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the different between the capture amount and the authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/cancel.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction Perform the create-cancel operation to cancel a previously created payment. You can only cancel a payment - or part of payment - not yet captured. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } check︎ Field Type Description check︎ transaction string The transaction object contains information about this cancellation. check︎ description string A textual description of the reason for the cancellation. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The created cancel resource contains information about the cancel transaction made against a mobilepay payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/mobilepay/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the different between the capture amount and the authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/core/cancel.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction Perform the create-cancel operation to cancel a previously created payment. You can only cancel a payment - or part of payment - not yet captured. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } check︎ Field Type Description check︎ transaction string The transaction object contains information about this cancellation. check︎ description string A textual description of the reason for the cancellation. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The created cancel resource contains information about the cancel transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the different between the capture amount and the authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/core/cancel.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction Perform the create-cancel operation to cancel a previously created payment. You can only cancel a payment - or part of payment - not yet captured. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } check︎ Field Type Description check︎ transaction string The transaction object contains information about this cancellation. check︎ description string A textual description of the reason for the cancellation. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The created cancel resource contains information about the cancel transaction made against a old-implementations/checkout-v2 payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/old-implementations/checkout-v2/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the different between the capture amount and the authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/cancel.html"
  },{
    "title": "Cancel",
    "text": "Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction Perform the create-cancel operation to cancel a previously created payment. You can only cancel a payment - or part of payment - not yet captured. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } check︎ Field Type Description check︎ transaction string The transaction object contains information about this cancellation. check︎ description string A textual description of the reason for the cancellation. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response The created cancel resource contains information about the cancel transaction made against a old-implementations/payment-menu-v2 payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancel\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Cancel\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/old-implementations/payment-menu-v2/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-cancel\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the cancel resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial cancel has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you do cancel after doing a part-capture you will cancel the different between the capture amount and the authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/cancel.html"
  },{
    "title": "Capture",
    "text": "Capture The capture transaction is where you ensure that the funds are charged from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s card, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture resource contains information about the capture transaction made against a card payment. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user in the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A human readable description of maximum 40 characters of the transaction payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the transaction in its current state. List Capture Transactions The captures resource list the capture transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a invoice payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"receiptReference\": \"AH12355\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [ captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/core/capture.html"
  },{
    "title": "Capture",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Capture The final step in the integration process for Invoice Redirect, Seamless View and Direct is to complete a Capture. Unlike the other payment instruments, performing an invoice capture won’t move any funds in itself. It will generate the actual invoice and distribute it to the payer. Step 1: Create The Capture Request To capture a FinancingConsumer invoice payment, perform the create-capture operation with the following request body: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 POST /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"activity\": \"FinancingConsumer\", \"amount\": 13500, \"vatAmount\": 2500, \"payeeReference\": \"ABC856\", \"receiptReference\": \"ABC855\", \"description\": \"description for transaction\", \"itemDescriptions\": [ { \"amount\": 12500, \"description\": \"item description 1\" }, { \"amount\": 1000, \"description\": \"item description 2\" } ], \"vatSummary\": [ { \"amount\": 12500, \"vatPercent\": 2500, \"vatAmount\": 2500 }, { \"amount\": 1000, \"vatPercent\": 0, \"vatAmount\": 0 } ] } } Show fields Hide fields Required Parameter name Datatype Value (with description) check︎ transaction.activity string FinancingConsumer. check︎ transaction.Amount integer Amount entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ transaction.vatAmount integer Amount entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ transaction.payeeReference string The payeeReference is the receipt/invoice number if receiptReference is not defined, which is a unique reference with max 50 characters set by the merchant system. This must be unique for each operation and must follow the regex pattern [\\w-]*.   transaction.receiptReference string(50) The receiptReference is a reference from the merchant system. This reference is used as an invoice/receipt number to supplement payeeReference. check︎ transaction.description string A textual description of the capture check︎ itemDescriptions.amount integer Total price for this order line - entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ itemDescriptions.description string A textual description of this product check︎ vatSummary.amount integer Total price for this order line - entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ vatSummary.vatAmount integer VAT Amount entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 SEK, 5000 =50.00 SEK. check︎ vatSummary.vatPercent integer The percent value of the VAT multiplied by 100. Supported values : 0, 600, 800, 1000, 1200, 1400, 1500, 2200, 2400, 2500. Notes on FinancingConsumer captures: The due date is set by Swedbank Pay based on the agreement with merchant. Standard due date is 14 days. The invoice number is set by Swedbank Pay. The created capture resource contains information about the capture transaction made against a invoice payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/invoice/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-capture\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the capture resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Step 2: Inspecting The Captures The captures resource lists the capture transactions performed on a specific invoice payment. GET Capture Request Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": [{ \"itemDescriptions\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1/itemdescriptions\" }, \"receiptReference\": \"ABC855\", \"invoiceCopy\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/7e6cdfc3-1276-44e9-9992-7cf4419750e1/invoicecopy\", \"transaction\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } }] } Capture Flow sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: Post &lt;Invoice captures&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate Merchant deactivate SwedbankPay Direct After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/capture.html"
  },{
    "title": "Capture",
    "text": "Capture The capture transaction is where you ensure that the funds are charged from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s card, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture resource contains information about the capture transaction made against a card payment. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user in the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A human readable description of maximum 40 characters of the transaction payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the transaction in its current state. List Capture Transactions The captures resource list the capture transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a creditcard payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [ captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/capture.html"
  },{
    "title": "Capture",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Capture The capture transaction is where you ensure that the funds are charged from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s card, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture resource contains information about the capture transaction made against a card payment. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user in the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A human readable description of maximum 40 characters of the transaction payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the payment order in its current state. List Capture Transactions The captures resource list the capture transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a creditcard payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [Credit card captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource Et voilà! The payment should now be complete, secure and everyone should be happy. But, sometimes you also need to implement the cancellation and reversal operations described in After Payment. Authorizations are kept valid in our systems for 180 days, and we accept captures within this timeframe. Please be aware that acquirers might have a shorter time limit before authorized amounts are released in their systems. We advise you to check with your acquirer if you have concerns about these limits. Redirect After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/capture.html"
  },{
    "title": "Capture",
    "text": "Capture The capture transaction is where you ensure that the funds are charged from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s card, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture resource contains information about the capture transaction made against a card payment. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user in the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A human readable description of maximum 40 characters of the transaction payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the transaction in its current state. List Capture Transactions The captures resource list the capture transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a mobilepay payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [ captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/core/capture.html"
  },{
    "title": "Capture",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Capture The capture resource contains information about the capture transaction made against a mobilepay payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Create Capture Transaction A capture transaction to withdraw money from the payer’s MobilePay can be created after a completed authorization by performing the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1000, \"vatAmount\": 250, \"payeeReference\": 1234, \"description\" : \"description for transaction\" } } Required Field Type Description check︎ transaction object Object representing the capture transaction. check︎ amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎ vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check︎ description string A textual description of the capture transaction. check︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response The created capture resource contains information about the capture transaction made against a mobilepay payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/mobilepay/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-capture\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the capture resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a smaller amount than the authorization amount. You can do more captures on the same payment later, up to the total authorization amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt;mobilepay capture&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant Et voilà! The payment should now be complete, secure and everyone should be happy. But, sometimes you also need to implement the cancellation and reversal operations described in After Payment. Authorizations are kept valid in our systems for 180 days, and we accept captures within this timeframe. Please be aware that acquirers might have a shorter time limit before authorized amounts are released in their systems. We advise you to check with your acquirer if you have concerns about these limits. Redirect After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/capture.html"
  },{
    "title": "Capture",
    "text": "Capture The capture transaction is where you ensure that the funds are drawn from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s Vipps account, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"payeeReference\": \"cpttimestamp\", \"description\" : \"description for transaction\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response The created capture resource contains information about the capture transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-capture\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the capture resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   List Capture Transactions The captures resource lists the capture transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/vipps/vipps/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a vipps payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [Vipps captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/core/capture.html"
  },{
    "title": "Capture",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Capture The capture transaction is where you ensure that the funds are drawn from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s Vipps account, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"payeeReference\": \"cpttimestamp\", \"description\" : \"description for transaction\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response The created capture resource contains information about the capture transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-capture\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the capture resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   List Capture Transactions The captures resource lists the capture transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/vipps/vipps/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a vipps payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [Vipps captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource Et voilà! The payment should now be complete, secure and everyone should be happy. But, sometimes you also need to implement the cancellation and reversal operations described in After Payment. Authorizations are kept valid in our systems for 180 days, and we accept captures within this timeframe. Please be aware that acquirers might have a shorter time limit before authorized amounts are released in their systems. We advise you to check with your acquirer if you have concerns about these limits. Seamless View After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/capture.html"
  },{
    "title": "Capture",
    "text": "Step 5: Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform create-paymentorder-capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:create-paymentorder-capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/capture.html"
  },{
    "title": "Capture",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Step 5: Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform create-paymentorder-capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:create-paymentorder-capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end Et voilà! Checkout should now be complete, the payment should be secure and everyone should be happy. But, sometimes you also need to implement the cancellation and reversal operations described below. Authorizations are kept valid in our systems for 180 days, and we accept captures within this timeframe. Please be aware that acquirers might have a shorter time limit before authorized amounts are released in their systems. We advise you to check with your acquirer if you have concerns about these limits. Payment Menu After Payment",
    "tags": "",
    "url": "/old-implementations/checkout-v2/capture.html"
  },{
    "title": "Capture",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end Et voilà! The payment should now be complete and everyone should be happy. But, sometimes you also need to implement the cancellation and reversal operations described in After Payment. Authorizations are kept valid in our systems for 180 days, and we accept captures within this timeframe. Please be aware that acquirers might have a shorter time limit before authorized amounts are released in their systems. We advise you to check with your acquirer if you have concerns about these limits. Payment Order After Payment",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/capture.html"
  },{
    "title": "Card Authorization Transaction",
    "text": "Card Authorization Transaction The authorization resource contains information about an authorization transaction made towards a payment. To create a new authorization transaction, perform a POST towards the URL obtained from the payment.authorization.id from the payment resource below. The example is abbreviated for brevity. GET Authorization Request Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Authorization Response Response 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorizations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, } } Authorization Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 POST /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"cardNumber\": \"4925000000000004\", \"cardExpiryMonth\": \"12\", \"cardExpiryYear\": \"22\", \"cardVerificationCode\": \"749\", \"cardholderName\": \"Olivia Nyhuus\", \"chosenCoBrand\": \"Visa\" } } Authorization Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"recurrenceToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"maskedPan\": \"123456xxxxxx1234\", \"expiryDate\": \"mm/yyyy\", \"panToken\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"issuingBank\": \"UTL MAESTRO\", \"countryCode\": \"999\", \"acquirerTransactionType\": \"3DSECURE\", \"issuerAuthorizationApprovalCode\": \"397136\", \"acquirerStan\": \"39736\", \"acquirerTerminalId\": \"39\", \"acquirerTransactionTime\": \"2017-08-29T13:42:18Z\", \"authenticationStatus\": \"Y\", \"nonPaymentToken\": \"\", \"externalNonPaymentToken\": \"\", \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"ExternalResponseError\", \"failedActivityName\": \"Authorize\", \"failedErrorCode\": \"REJECTED_BY_ACQUIRER\", \"failedErrorDescription\": \"General decline, response-code: 05\", \"isOperational\": \"TRUE\", \"activities\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177/activities\" }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Required Field Type Description check transaction object The transaction object. check cardNumber string Primary Account Number (PAN) of the card, printed on the face of the card. check cardExpiryMonth integer Expiry month of the card, printed on the face of the card. check cardExpiryYear integer Expiry year of the card, printed on the face of the card.   cardVerificationCode string Card verification code (CVC/CVV/CVC2), usually printed on the back of the card.   cardholderName string Name of the cardholder, usually printed on the face of the card. Show fields Hide fields Field Type Description payment object The payment object. authorization object The authorization object. direct string The type of the authorization. cardBrand string Visa, MC, etc. The brand of the card. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. issuingBank string The name of the bank that issued the card used for the authorization. paymentToken string The payment token created for the card used in the authorization. maskedPan string The masked PAN number of the card. expiryDate string The month and year of when the card expires. panToken string The token representing the specific PAN of the card. panEnrolled string   acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest monetary unit of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user on the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/card-authorization-transaction.html"
  },{
    "title": "Checkin Events",
    "text": "Checkin Events The Checkin Seamless View can inform about events that occur during Checkin through JavaScript event callbacks which can be implemented in the configuration object passed to the payex.hostedView.consumer(configuration) object. sequenceDiagram participant Consumer participant Merchant participant SwedbankPay as Swedbank Pay Consumer -&gt;&gt; Merchant: visit Merchant -&gt;&gt; Merchant: Prepare, Embed ClientScript Merchant -&gt;&gt; SwedbankPay: payex.hostedView.consumer().open() alt Configuration validation failure SwedbankPay --&gt;&gt; Merchant: onError end alt Identified consumer SwedbankPay-&gt;&gt;Merchant: onConsumerIdentified alt Depending on backend response SwedbankPay-&gt;&gt;Merchant: onShippingDetailsAvailable SwedbankPay-&gt;&gt;Merchant: onBillingDetailsAvailable end end alt Change shipping address Consumer-&gt;&gt;SwedbankPay: Click change shipping address button SwedbankPay-&gt;&gt;Merchant: OnShippingDetailsAvailable end onConsumerIdentified This event triggers when a consumer has performed Checkin and is identified, if the Payment Menu is not loaded and in the DOM. The onConsumerIdentified event is raised with the following event argument object: onConsumerIdentified event object 1 2 3 4 { \"actionType\": \"OnConsumerIdentified\", \"consumerProfileRef\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\" } onShippingDetailsAvailable Triggered when a consumer has been identified or shipping address has been updated. info The Checkin must be completed before any shipping details are finalized, as the Checkin component provides shipping address via the onShippingDetailsAvailable event. onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers/5a17c24e-d459-4567-bbad-aa0f17a76119/shipping-details\" } onBillingDetailsAvailable Triggered when a consumer has been identified. onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\":\"/psp/consumers/5a17c24e-d459-4567-bbad-aa0f17a76119/billing-details\" }",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/checkin-events.html"
  },{
    "title": "Checkout – Checkin",
    "text": "Step 1: Initiate Session For Consumer Identification The payer will be identified with the consumers resource and will be persisted to streamline future Payment Menu processes. Payer identification is done through the initiate-consumer-session operation. info Guest Checkout: Note: If the payer is using the Payment Menu as a guest, you can go directly to step 3, which you will find on the next page. Checkin Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/consumers HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"operation\": \"initiate-consumer-session\", \"language\": \"sv-SE\", \"shippingAddressRestrictedToCountryCodes\" : [\"NO\", \"SE\", \"DK\"], \"requireShippingAddress\": true } Required Field Type Description check operation string initiate-consumer-session, the operation to perform. check language string Selected language to be used in Checkin. Supported values are sv-SE, nb-NO or en-US.   shippingAddressRestrictedToCountryCodes string List of supported shipping countries for merchant. Using ISO-3166 standard. This is required unless requireShippingAddress is set to false.   requireShippingAddress bool Defaults to true. If set to false we will not collect a shipping address from the consumer. Checkin Response When the request has been sent, a response containing an array of operations that can be acted upon will be returned: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 { \"token\": \"7e380fbb3196ea76cc45814c1d99d59b66db918ce2131b61f585645eff364871\", \"operations\": [ { // Deprecated operation. Do not use! \"method\": \"GET\", \"rel\": \"redirect-consumer-identification\", \"href\": \"https://ecom.externalintegration.payex.com/consumers/sessions/7e380fbb3196ea76cc45814c1d99d59b66db918ce2131b61f585645eff364871\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"rel\": \"view-consumer-identification\", \"href\": \"https://ecom.externalintegration.payex.com/consumers/core/scripts/client/px.consumer.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"contentType\": \"application/javascript\" } ] } Field Type Description token string A session token used to initiate Checkout UI. operations array The array of operation objects to choose from, described in detail in the table below. rel string The relational name of the operation, used as a programmatic identifier to find the correct operation given the current state of the application. method string The HTTP method to use when performing the operation. contentType string The HTTP content type of the target URL. Indicates what sort of resource is to be found at the URL, how it is expected to be used and behave. href string The target URL of the operation. Step 2: Display Swedbank Pay Checkin Module The response from the POST of consumer information contains a few operations. The combination of rel, method and contentType should give you a clue how the operation should be performed. The view-consumer-identification operation and its application/javascript content type gives us a clue that the operation is meant to be embedded in a &lt;script&gt; element in an HTML document. warning In our example we will focus on using the view-consumer-identification solution. The redirect-consumer-identification method redirects the user to Swedbank’s own site to handle the checkin and is used in other implementations. redirect-consumer-identification should only be used in test environments. It is not suitable for the production environment as there is no simple way of retrieving the consumerProfileRef. HTML 1 2 3 4 5 6 7 8 9 10 11 12 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Checkout is Awesome!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"checkin\"&gt;&lt;/div&gt; &lt;div id=\"payment-menu\"&gt;&lt;/div&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=\"&lt;Your-JavaScript-File-Here&gt;\"&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; info The Checkin and Payment Menu components (the two &lt;iframe&gt; elements) must be separate (one must not replace the other). warning Please note that nested iframes (an iframe within an iframe) are unsupported. In the HTML, you only need to add two &lt;div&gt; elements to place the check-in and payment menu inside of. The JavaScript will handle the rest when it comes to handling the check-in and payment menu. JavaScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 var request = new XMLHttpRequest(); request.addEventListener('load', function () { // We will assume that our own backend returns the // exact same as what SwedbankPay returns. var response = JSON.parse(this.responseText); var script = document.createElement('script'); // This assumes that the operations from the response of the POST from the // payment order is returned verbatim from the server to the Ajax: var operation = response.operations.find(function (o) { return o.rel === 'view-consumer-identification'; }); script.setAttribute('src', operation.href); script.onload = function () { payex.hostedView.consumer({ // The container specifies which id the script will look for // to host the checkin component container: 'checkin', onConsumerIdentified: function onConsumerIdentified(consumerIdentifiedEvent) { // consumerIdentifiedEvent.consumerProfileRef contains the reference // to the identified consumer which we need to pass on to the // Payment Order to initialize a personalized Payment Menu. console.log(consumerIdentifiedEvent); }, onShippingDetailsAvailable: function onShippingDetailsAvailable(shippingDetailsAvailableEvent) { console.log(shippingDetailsAvailableEvent); } }).open(); }; // Appending the script to the head var head = document.getElementsByTagName('head')[0]; head.appendChild(script); }); // Place in your own API endpoint here. request.open('POST', '&lt;Your-Backend-Endpoint-Here&gt;', true); request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); // In this example we'll send in all of the information mentioned before, // in the request to the endpoint. request.send(JSON.stringify({ operation: 'initiate-consumer-session', language: 'sv-SE', shippingAddressRestrictedToCountryCodes: ['NO', 'SE'] })); info Note that we add the script at the end of the body. This ensures that every element (like the container &lt;div&gt; elements) has loaded in before we try to access them with our script. How It Looks With the scripts loading in after the entire page is loaded, we can access the &lt;div&gt; container that the Checkin will be hosted in. When everything has finished loading, you should see something like this: In this example, the payer’s information is pre-filled as provided by the initial POST. If not, the fields will appear empty. warning Pre-filled checkins are only available for merchants who have a specific agreement with Swedbank Pay. From here, there are three ways forwards, depending on the consumer. If they are registered with a profile at Swedbank Pay, the information already provided will be sufficient. The consumer can simply click proceed, and the profile will appear on the page (with sensitive data masked). If Swedbank Pay detects that the consumer hasn’t registered any personal details, two options are provided: Store details for future purchases or proceed without storing details. If they choose to store details, the next step is to enter their SSN. Once a valid SSN has been provided, a page for address details appears. When the consumer has entered their address, the profile box shown above will be displayed. If the consumer opts out of storing their details, they will be sent directly to the page for address details to enter their shipping address. This info is not stored for future purchases. Please note that this is not the same as shopping as a guest. With a consumerProfileRef safely tucked into our pocket, the Checkin is complete and we can move on to Payment Menu. Be aware that the consumerProfileRef expires after 24 hours as well as after being used to complete a payment. The consumerProfileRef can not be reused for several purchases. A complete overview of how the process of identifying the payer through Checkin is illustrated in the sequence diagram below. sequenceDiagram participant Consumer participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(238, 112, 35, 0.05) note left of Consumer: Checkin Consumer -&gt;&gt;+ Merchant: Start Checkin Merchant -&gt;&gt;+ SwedbankPay: POST /psp/consumers deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: rel:view-consumer-identification ① deactivate SwedbankPay Merchant --&gt;&gt;- Consumer: Show Checkin on Merchant Page Consumer -&gt;&gt;+ Consumer: Initiate Consumer Seamless View (open iframe) ② Consumer -&gt;&gt;+ SwedbankPay: Show Consumer UI page in iframe ③ deactivate Consumer SwedbankPay -&gt;&gt;- Consumer: Consumer identification process activate Consumer Consumer -&gt;&gt;+ SwedbankPay: Consumer identification process deactivate Consumer SwedbankPay --&gt;&gt;- Consumer: show consumer completed iframe activate Consumer Consumer -&gt;&gt; Consumer: EVENT: onConsumerIdentified (consumerProfileRef) ④ deactivate Consumer end If a browser refresh is performed after the payer has checked in, the payment menu must be shown even though onConsumerIdentified is not invoked. Additional events during Checkin can also be implemented in the configuration object, such as onConsumerIdentified, onShippingDetailsAvailableand onBillingDetailsAvailable. Read more about these in the Checkin events section. Note on consumer data During this stage, some consumer data is stored. Read more about our Data Protection Policy for details on which information we store and its duration. Introduction Payment Menu",
    "tags": "",
    "url": "/old-implementations/checkout-v2/checkin.html"
  },{
    "title": "CloseAsync",
    "text": "The CloseAsync method sends a LogoutRequest to terminate the login session and allow for maintenance. Call this method at least once every day to ensure that parameter updates are possible.",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/closeasync.html"
  },{
    "title": "Co-badge Dankort",
    "text": "Co-badge Card Choice For Dankort Due to new EU regulations from 2016-06-09 regarding cards that have more than one payment application, we have developed support for the end users of Dankort to be able to choose their preferred payment application on the Swedbank Pay payment page. If you are a Dankort user, read more about this feature at Dankort. As a merchant you can set a priority selection of payment application by contacting Swedbank Pay Support. The payer will always be able to override this priority selection on the payment page. If you want more information about Co-badge Card Choice for Dankort users, please contact Swedbank Pay Support. The example below shows the payment window where the payer can choose between Dankort or Visa before completing the payment. How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/cobadge-dankort.html"
  },{
    "title": "Code Of Conduct",
    "text": "It is important that the projects governed by Swedbank Pay foster a collaborative, open, inclusive, positive and tolerant community. To underscore this, a CODE_OF_CONDUCT.md file from Contributor Covenant should be added to the project: Contributor Code of Conduct As contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities. We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality. Examples of unacceptable behavior by participants include: The use of sexualized language or imagery Personal attacks Trolling or insulting/derogatory comments Public or private harassment Publishing other’s private information, such as physical or electronic addresses, without explicit permission Other unethical or unprofessional conduct Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team. This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer at opensource@payex.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. Maintainers are obligated to maintain confidentiality with regard to the reporter of an incident. This Code of Conduct is adapted from the Contributor Covenant, version 1.3.0, available at http://contributor-covenant.org/version/1/3/0/ The Code of Conduct should then be referenced from the CONTRIBUTING file, for example with the following paragraphs: Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.",
    "tags": "",
    "url": "/checkout-v3/resources/development-guidelines/code-of-conduct.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaid and possibly the onFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaid and possibly the onFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/complete-url.html"
  },{
    "title": "CompleteUrl",
    "text": "CompleteUrl This URL will be used by Swedbank Pay when a payment is Completed or Failed. If your integration subscribes to the onPaymentCompleted and possibly the onPaymentFailed event, no redirect or use of the completeUrl will take place. But if you do not have any event handler for the onPaymentCompleted event, the Swedbank Pay JavaScript will perform an HTTP redirect in the top frame to the completeUrl. You will still need to do a GET request on the payment resource to find the final status (Completed or Failed).",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/complete-url.html"
  },{
    "title": "Configuration",
    "text": "While making a payment, the SDK will need to create a payment order, and possibly start a consumer identification session. These are ultimately done using the relevant Swedbank Pay APIs, but as those are protected by secrets you cannot securely embed in a mobile app, you will need our own server in the middle. The SDK cannot communicate directly with your servers, so you must provide a Configuration that specifies how it does that. This page provides a basic overview of the Configuration on both iOS and Android. More details shall be discussed in the platform-specific chapters. iOS The Configuration is a value that conforms to the SwedbankPaySDKConfiguration protocol. The protocol has two required methods: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 struct MyConfiguration : SwedbankPaySDKConfiguration { // This method is called when the SDK starts a consumer identification session. // You need to make a request to your own backend here, that backend must // make a POST /psp/consumers request to Swedbank Pay, finally you must propagate // the result of that request to the completion callback here. // // The consumer and userData arguments are the values set to your // SwedbankPaySDKController. Their precise meaning is up to you. func postConsumers( consumer: SwedbankPaySDK.Consumer?, userData: Any?, completion: @escaping (Result&lt;SwedbankPaySDK.ViewConsumerIdentificationInfo, Error&gt;) -&gt; Void ) { // code } // This method is called when the SDK creates the payment order. // You need to make a request to your own backend here, that backend must // make a POST /psp/paymentorders request to Swedbank Pay, finally you must propagate // the result of that request to the completion callback here. // // The paymentOrder and userData arguments are the values set to your // SwedbankPaySDKController. Their precise meaning is up to you. // // If you are making a payment with consumer identification, then the // consumerProfileRef from the identification session will be provided // in the consumerProfileRef argument. Otherwise, consumerProfileRef will be nil. func postPaymentorders( paymentOrder: SwedbankPaySDK.PaymentOrder?, userData: Any?, consumerProfileRef: String?, completion: @escaping (Result&lt;SwedbankPaySDK.ViewPaymentOrderInfo, Error&gt;) -&gt; Void ) { // code } } Android The Configuration is a subclass of the abstract class Configuration. The class has two abstract methods. These methods are suspending (asynchronous) Kotlin methods; a compatibility class is provided if you need to implement your Configuration in Java instead. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 class MyConfiguration : Configuration() { // This method is called when the SDK starts a consumer identification session. // You need to make a request to your own backend here, that backend must // make a POST /psp/consumers request to Swedbank Pay, and finally you must // return a ViewConsumerIdentificationInfo object populated with the // results of that request. // // The context argument is an application context for resource access. // The consumer and userData arguments are the values set as arguments // to PaymentFragment. Their precise meaning is up to you. override suspend fun postConsumers( context: Context, consumer: Consumer?, userData: Any? ): ViewConsumerIdentificationInfo { // code } // This method is called when the SDK creates the payment order. // You need to make a request to your own backend here, that backend must // make a POST /psp/paymentorders request to Swedbank Pay, finally you must // return a ViewPaymentOrderInfo object populated with the // results of that request. // // The context argument is an application context for resource access. // The paymentOrder and userData arguments are the values set as arguments // to PaymentFragment. Their precise meaning is up to you. // // If you are making a payment with consumer identification, then the // consumerProfileRef from the identification session will be provided // in the consumerProfileRef argument. Otherwise, consumerProfileRef will be nil. override suspend fun postPaymentorders( context: Context, paymentOrder: PaymentOrder?, userData: Any?, consumerProfileRef: String? ): ViewPaymentOrderInfo { // code } } Backend As the mobile application cannot talk directly to Swedbank Pay servers, you will need your own backend to make those requests on the behalf of your Configuration. You are free to design your backend as best suits you, but the next chapter will detail one possible implementation, which also has a bundled-in Configuration implementation available in the SDK. One thing you should keep in mind while designing your backend is that the paymentUrl of your payment order needs special consideration in order to work correctly. This is a somewhat complicated issue, discussed in detail in each platform-specific chapter, but the gist of the issue is that the paymentUrl will, in some cases, be opened in the browser application, and at that point we must take some measures to return to your application to continue the payment. This can be accomplished by having paymentUrl return a redirect response; the details of that redirect will be discussed in the platform-specific pages. It is recommneded that paymentUrl be unique to each payment order that you create. The next chapter will go over the Merchant Backend API. It will also explore in detail how paymentUrl is handled on a server implementing the Merchant Backend API. The SDK comes ready with a Configuration suitable for a server implementing the Merchant Backend API, which will be discussed in detail in the client platform specific chapters. Back: Introduction Next: Merchant Backend",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/configuration.html"
  },{
    "title": "Contributing",
    "text": "To make it clear exactly how outside contributors should provide their contributions to the project, a CONTRIBUTING.md file should be created at the root of the repository. Once such a file exists, GitHub will present it to users creating new pull requests, issues, etc. in the repository. Here’s an example of how such a file can look like: How to contribute To contribute to the Swedbank Pay Development Guidelines, there’s just a few things you need to know. Getting Started Read and make sure you agree with the Code of Conduct. Make sure you have a GitHub account. Then, you have three options: Submit a ticket for your issue, assuming one does not already exist. Clearly describe the issue including steps to reproduce when it is a bug. Make sure you fill in the earliest version that you know has the issue. Edit the file you want to change directly on GitHub. Fork the repository on GitHub. If you choose option 3 (forking the repository), then please read on. Making Changes Create a new branch from where you want to base your work. This is usually the master or develop branch. Please avoid working directly on the master and develop branch. Make commits of logical units in the new branch. Check for unnecessary space with git diff --check before committing. Make sure your commit messages are well written and in the proper format. Push the branch to your forked repository (remote). Submit a pull request for the pushed branch.",
    "tags": "",
    "url": "/checkout-v3/resources/development-guidelines/contributing.html"
  },{
    "title": "Corporate Limited Menu",
    "text": "Corporate Limited Menu Corporate Limited Menu allows you to limit what payment instruments shows up when your customers pays through the menu. Do note that the instrument in question needs to support corporate payment instruments and have the feature enabled during the contract setup to be shown in the menu. If you don’t invoke the restriction in your payment order request, every valid payment instrument will show up as usual in the payment menu. This is done by setting corporateMode to true. In this example the instrument is set to card. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"corporateMode\": \"true\", \"instrument\": \"CreditCard\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\" } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check corporateMode bool Determines if the menu should only show instruments that supports corporate payment methods and has been enabled in your contracts. check instrument string The payment instrument you want to restrict to in corporate mode. Selected by using the Instrument Mode. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.",
    "tags": "",
    "url": "/checkout-v3/features/optional/corporate-limited-menu.html"
  },{
    "title": "Corporate Limited Menu",
    "text": "Corporate Limited Menu Corporate Limited Menu allows you to limit what payment instruments shows up when your customers pays through the menu. Do note that the instrument in question needs to support corporate payment instruments and have the feature enabled during the contract setup to be shown in the menu. If you don’t invoke the restriction in your payment order request, every valid payment instrument will show up as usual in the payment menu. This is done by setting corporateMode to true. In this example the instrument is set to card. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"corporateMode\": \"true\", \"instrument\": \"CreditCard\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\" } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check corporateMode bool Determines if the menu should only show instruments that supports corporate payment methods and has been enabled in your contracts. check instrument string The payment instrument you want to restrict to in corporate mode. Selected by using the Instrument Mode. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/corporate-limited-menu.html"
  },{
    "title": "Create Payment",
    "text": "Create Payment Within the swish part of the eCommerce API, you can create the following kind of payments: Purchase To create a swish payment, you perform an HTTP POST against the payments resource. The kind of payment created is indicated with the value of the operation field in the request. Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"&lt;operation&gt;\", \"intent\": \"&lt;intent&gt;\", } } Required Field Type Description check payment object The payment object. check operation string Determines the initial operation, defining the type of payment created. check intent string The intent of the payment identifies how and when the charge will be effectuated. This determine the type transactions used during the payment process. Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. AutoCapture is a one phase-option that enable capture of funds automatically after authorization.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/create-payment.html"
  },{
    "title": "Create Payment",
    "text": "Create Payment Within the trustly part of the eCommerce API, you can create the following kind of payments: Purchase To create a trustly payment, you perform an HTTP POST against the payments resource. The kind of payment created is indicated with the value of the operation field in the request. Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"&lt;operation&gt;\", \"intent\": \"&lt;intent&gt;\", } } Required Field Type Description check payment object The payment object. check operation string Determines the initial operation, defining the type of payment created. check intent string The intent of the payment identifies how and when the charge will be effectuated. This determine the type transactions used during the payment process. Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. AutoCapture is a one phase-option that enable capture of funds automatically after authorization.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/create-payment.html"
  },{
    "title": "Create Payment",
    "text": "Create Payment Within the invoice part of the eCommerce API, you can create the following kind of payments: Purchase To create a invoice payment, you perform an HTTP POST against the payments resource. The kind of payment created is indicated with the value of the operation field in the request. Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"&lt;operation&gt;\", \"intent\": \"&lt;intent&gt;\", } } Required Field Type Description check payment object The payment object. check operation string Determines the initial operation, defining the type of payment created. check intent string The intent of the payment identifies how and when the charge will be effectuated. This determine the type transactions used during the payment process. Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. AutoCapture is a one phase-option that enable capture of funds automatically after authorization.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/create-payment.html"
  },{
    "title": "Create Payment",
    "text": "Create Payment Within the card part of the eCommerce API, you can create the following kind of payments: Purchase Recurrence Verification To create a card payment, you perform an HTTP POST against the payments resource. The kind of payment created is indicated with the value of the operation field in the request. Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"&lt;operation&gt;\", \"intent\": \"&lt;intent&gt;\", } } Required Field Type Description check payment object The payment object. check operation string Determines the initial operation, defining the type of payment created. check intent string The intent of the payment identifies how and when the charge will be effectuated. This determine the type transactions used during the payment process. Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. AutoCapture is a one phase-option that enable capture of funds automatically after authorization.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/create-payment.html"
  },{
    "title": "Create Payment",
    "text": "Create Payment Within the mobile-pay part of the eCommerce API, you can create the following kind of payments: Purchase To create a mobile-pay payment, you perform an HTTP POST against the payments resource. The kind of payment created is indicated with the value of the operation field in the request. Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"&lt;operation&gt;\", \"intent\": \"&lt;intent&gt;\", } } Required Field Type Description check payment object The payment object. check operation string Determines the initial operation, defining the type of payment created. check intent string The intent of the payment identifies how and when the charge will be effectuated. This determine the type transactions used during the payment process. Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. AutoCapture is a one phase-option that enable capture of funds automatically after authorization.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/create-payment.html"
  },{
    "title": "Create Payment",
    "text": "Create Payment Within the vipps part of the eCommerce API, you can create the following kind of payments: Purchase To create a vipps payment, you perform an HTTP POST against the payments resource. The kind of payment created is indicated with the value of the operation field in the request. Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"&lt;operation&gt;\", \"intent\": \"&lt;intent&gt;\", } } Required Field Type Description check payment object The payment object. check operation string Determines the initial operation, defining the type of payment created. check intent string The intent of the payment identifies how and when the charge will be effectuated. This determine the type transactions used during the payment process. Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. AutoCapture is a one phase-option that enable capture of funds automatically after authorization.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/create-payment.html"
  },{
    "title": "Create Method",
    "text": "Create is a static method that creates an instance and returns an ISwpTrmIf interface. This is the first call to make. At the moment there is only one class available, PAXTrmImp_1. Parameters SwpIfConfig - instance of a config object. ISwpTrmCallbackInterface - reference to an instance that handles available callbacks. Returns A reference to an instance implementing the ISwpTrmIf_1 interface. Example Create an instance to get an interface 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 using SwpTrmLib; public class MyImplementation : ISwpTrmCallbackInterface { ISwPTrmIf_1 Pax; public MyInit() { Pax = PAXTrmImp_1.Create( new SwpIfConfig() { LogPath = @\"C:\\myLogPath\" }, this ); } // ConfirmationHandler is used when the terminal asks the operator for // a confirmation. Eg. signature sales (rarely used). // Requires the implementation to run as a server. void ConfirmationHandler(string text, IConfirmationResult callback) {} // EventNotificationHandler occurs for some events that may be useful to // act upon // Requires the implementation to run as a server. void EventNotificationHandler(EventToNotifyEnumeration type, string text) {} } SwpIfConfig SwpIfConfig is only used when calling the Create method. There are default values and the most relevant to change is possibly LogPath and TerminalRxPort. TerminalRxPort is only used in server mode. The DraftCapture implies other changes that are not documented here as well, and should therefore be left as is. 1 2 3 4 5 6 7 8 9 public class SwpIfConfig { public string LogPath { get; set; } = \".\\\\\"; public int TerminalRxPort { get; set; } = 11000; public NLog.LogLevel LogLevel { get; set; } = NLog.LogLevel.Debug; public string UICulture { get; set; } = CultureInfo.CurrentCulture.Name; public bool DraftCapture { get; set; } = false; public bool LogTerminalHandler { get; set; } = false; }",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/create.html"
  },{
    "title": "Cross Channel Payments",
    "text": "Cross Channel Payments Swedbank Pay’s Digital Payments API is built in a way that depends on that you, as a merchant, is able to store the paymentOrderId. The paymentOrderId is a URL which points to the specific instance of a payment order resource, but in some cases it will be hard to use it as a payment reference. To help you keep track of the transaction easier, we provide a unique identification called referenceCode in all v3 implementations. The code can then be printed and, for instance, used as a scannable barcode for future tracking. The referenceCode isn’t available by default, but needs to be activated by us to appear in your payment order responses. Reference Code Query When enabled, the referenceCode will appear as a 16 digit code in the expanded paid field when the payment is fully paid. In addition to the regular GET method, you may obtain information about the payment by doing a QUERY with the referenceCode in the JSON body as shown in the below example. Both GET and QUERY responses will look like the abbreviated paid example below. The parts omitted from this example will look like the response from a regular GET request. GET Request Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json QUERY Request Request 1 2 3 4 5 6 7 8 QUERY /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"referenceCode\": 1717224235360011 } GET And QUERY Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"Creditcard\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"referenceCode\": \"1717224235360011\" \"details\": {} } } Field Type Description paymentOrder object The payment order object. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Payment instrument used in the cancelled payment. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. referenceCode string A 16 digit reference code which can be used for tracking payments. details integer Details connected to the payment.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/cross-channel-payments.html"
  },{
    "title": "Cross Channel Payments",
    "text": "Cross Channel Payments Swedbank Pay’s Digital Payments API is built in a way that depends on that you, as a merchant, is able to store the paymentOrderId. The paymentOrderId is a URL which points to the specific instance of a payment order resource, but in some cases it will be hard to use it as a payment reference. To help you keep track of the transaction easier, we provide a unique identification called referenceCode in all v3 implementations. The code can then be printed and, for instance, used as a scannable barcode for future tracking. The referenceCode isn’t available by default, but needs to be activated by us to appear in your payment order responses. Reference Code Query When enabled, the referenceCode will appear as a 16 digit code in the expanded paid field when the payment is fully paid. In addition to the regular GET method, you may obtain information about the payment by doing a QUERY with the referenceCode in the JSON body as shown in the below example. Both GET and QUERY responses will look like the abbreviated paid example below. The parts omitted from this example will look like the response from a regular GET request. GET Request Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json QUERY Request Request 1 2 3 4 5 6 7 8 QUERY /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"referenceCode\": 1717224235360011 } GET And QUERY Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"Creditcard\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"referenceCode\": \"1717224235360011\" \"details\": {} } } Field Type Description paymentOrder object The payment order object. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Payment instrument used in the cancelled payment. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. referenceCode string A 16 digit reference code which can be used for tracking payments. details integer Details connected to the payment.",
    "tags": "",
    "url": "/checkout-v3/features/optional/cross-channel-payments.html"
  },{
    "title": "Mobile SDK – Custom Backend",
    "text": "In this chapter we explore how to integrate the mobile SDK with a fully custom backend server. It is recommended that you first read through the previous chapters and gain an understanding of how the SDK works with a backend implementing the Merchant Backend API. Basic Backend Requirements To support the SDK, your backend must be capable of at least creating a payment order. If you wish to use consumer identification, it must also be able to start an identification session. In addition to these, your backend must serve the appropriate html documents at urls used for the paymentUrl; the content of these html documents will be discussed below, but it is noteworthy that they are different for payments from Android applications and those from iOS applications. Further, the urls used for as paymentUrl on iOS must be configured as universal links for your iOS application. Android Configuration To bind the SDK to your custom backend, you must create a subclass of com.swedbankpay.mobilesdk.Configuration. This must be a Kotlin class. If you cannot use Kotlin, you can use the compatibility class com.swedbankpay.mobilesdk.ConfigurationCompat. Your subclass must provide implementations of postConsumers and postPaymentorders. These methods are named after the corresponding Swedbank Pay APIs they are intended to be forwarded to. If you do not intend to use consumer identification, you can have your postConsumers implementation throw an exception. The methods will be called with the arguments you give to the PaymentFragment. Therefore, the meaning of consumer, paymentOrder, and userData is up to you. If the consumer was identified before creating the paymentOrder, the consumer reference will be passed in the consumerProfileRef argument of postPaymentorders. The exact implementation of these methods is outside the scope of this document. You must return a ViewConsumerIdentificationInfo and a ViewPaymentOrderInfo object respectively; please refer to their class documentation on how to populate them from your backend responses. Any exception you throw from these methods will in turn be reported from the PaymentViewModel. Whether a given exception is treated as a retryable condition is controlled by the shouldRetryAfter&lt;Operation&gt;Exception methods; by default they only consider IllegalStateException as fatal. Please refer to the Configuration documentation on all the features. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class MyConfiguration : Configuration() { suspend fun postConsumers( context: Context, consumer: Consumer?, userData: Any? ): ViewConsumerIdentificationInfo { val viewConsumerIdentification = post(\"https://example.com/identify\") return ViewConsumerIdentificationInfo( webViewBaseUrl = \"https://example.com/\", viewConsumerIdentification = viewConsumerIdentification ) } suspend fun postPaymentorders( context: Context, paymentOrder: PaymentOrder?, userData: Any?, consumerProfileRef: String? ): ViewPaymentOrderInfo { val viewPaymentOrder = post(\"https://example.com/pay/android\") return ViewPaymentOrderInfo( webViewBaseUrl = \"https://example.com/\", viewPaymentOrder = viewPaymentOrder, completeUrl = \"https://example.com/complete\", cancelUrl = \"https://example.com/cancel\", paymentUrl = \"https://example.com/payment/android\", termsOfServiceUrl = \"https://example.com/tos\" ) } } iOS Configuration On iOS you must conform to the SwedbankPaySDKConfiguration protocol. Just like on Android, you must provide implementations for the postConsumers and postPaymentorders methods. The consumer, paymentOrder, and userData arguments to those methods will be the values you initialize your SwedbankPaySDKController with, and their meaning is up to you. The postPaymentorders method will optionally receive a consumerProfileRef argument, if the consumer was identified before creating the payment order. The methods are asynchronous, and the result is reported by calling the completion callback with the result. Successful results have payloads of SwedbankPaySDK.ViewConsumerIdentificationInfo and SwedbankPaySDK.ViewPaymentOrderInfo, respectively; please refer to the type documentation on how to populate those types. The error of any failure result you report will be propagated back to your app in the paymentFailed(error:) delegate method. You must call the completion callback exactly once, multiple calls are a programing error. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 struct MyConfiguration : SwedbankPaySDKConfiguration { func postConsumers( consumer: SwedbankPaySDK.Consumer?, userData: Any?, completion: @escaping (Result&lt;SwedbankPaySDK.ViewConsumerIdentificationInfo, Error&gt;) -&gt; Void ) { post(\"https://example.com/identify\") { result in do { let viewConsumerIdentification = try result.get() let info = ViewConsumerIdentificationInfo( webViewBaseURL: \"https://example.com/\", viewConsumerIdentification: viewConsumerIdentification ) completion(.success(info)) } catch let error { completion(.failure(error)) } } } func postPaymentorders( paymentOrder: SwedbankPaySDK.PaymentOrder?, userData: Any?, consumerProfileRef: String?, completion: @escaping (Result&lt;SwedbankPaySDK.ViewPaymentOrderInfo, Error&gt;) -&gt; Void ) { post(\"https://example.com/pay/ios\") { result in do { let viewPaymentorder = try result.get() let info = ViewPaymentOrderInfo( webViewBaseURL: \"https://example.com/\", viewPaymentorder: viewPaymentorder, completeUrl: \"https://example.com/complete\", cancelUrl: \"https://example.com/cancel\", paymentUrl: \"https://example.com/payment/ios\", termsOfServiceUrl: \"https://example.com/tos\" ) completion(.success(info)) } catch { completion(.failure(error)) } } } } Backend The code examples allude to a run-of-the-mill https API, but you can of course handle the communication in any way you see fit. The important part is that your backend must then communicate with the Swedbank Pay API using your secret token, and perform the requested operation. POST Consumers The “POST consumers” operation is simple, you must make a request to POST /psp/consumers with a payload of your choosing, and you must get the view-consumer-identification link back to the SDK. Consumer SDK Request SDK Request 1 2 POST /identify HTTP/1.1 Host: example.com Consumer SDK Response SDK Response 1 2 3 4 HTTP/1.1 200 OK Content-Type: text/plain https://ecom.externalintegration.payex.com/consumers/core/scripts/client/px.consumer.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119 Consumer Swedbank Pay Request Swedbank Pay Request 1 2 3 4 5 6 7 8 9 10 POST /psp/consumers HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"operation\": \"initiate-consumer-session\", \"language\": \"sv-SE\", \"shippingAddressRestrictedToCountryCodes\" : [\"NO\", \"SE\", \"DK\"] } Consumer Swedbank Pay Response Swedbank Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"operations\": [ { \"method\": \"GET\", \"rel\": \"view-consumer-identification\", \"href\": \"https://ecom.externalintegration.payex.com/consumers/core/scripts/client/px.consumer.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"contentType\": \"application/javascript\" } ] } This is, of course, an over-simplified protocol for documentation purposes. POST Payment Orders The “POST paymentorders” is a bit more complicated, as it needs to tie in with paymentUrl handling. Also, the full set of payment order urls must be made available to the app. In this simple example we use static urls for all of those, but in a real application you will want to create at least some of them dynamically, and will therefore need to incorporate them to your protocol. Payment Order SDK Request SDK Request 1 2 POST /pay/android HTTP/1.1 Host: example.com Payment Order SDK Response SDK Response 1 2 3 4 HTTP/1.1 200 OK Content-Type: text/plain https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE Payment Order Swedbank Pay Request Swedbank Pay Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"urls\": { \"hostUrls\": [\"https://example.com/\"], \"completeUrl\": \"https://example.com/complete\", \"cancelUrl\": \"https://example.com/cancel\", \"paymentUrl\": \"https://example.com/payment/android\" } } } Payment Order Swedbank Pay Response Swedbank Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 201 Created Content-Type: application/json { \"operations\": [ { \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } Payment URL As discussed in previous chapters, in some situations the paymentUrl of a payment will be opened in the browser. When this happens, we need a way of returning the flow to the mobile application. We need to take a slightly different approach depending on the client platform. Android The SDK has an Intent Filter for the com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER action. When it receives this action, if the Intent uri is equal to the paymentUrl of an ongoing payment (as reported by ViewPaymentOrderInfo), it will reload the payment menu of that payment. Therefore, if the paymentUrl is opened in the browser, that page must start an activity with such an Intent. This can be done by navigating to an intent scheme url. Note that the rules for following intent-scheme navigations can sometimes cause redirects to those url not to work. To work around this, the paymentUrl must serve a proper html page, which attempts to immediately redirect to the intent-scheme url, but also has a link the user can tap on. Refer to the intent scheme url documentation on how to form one. You should always include the package name so that your intent is not mistakenly routed to the wrong app. Request 1 2 GET /payment/android HTTP/1.1 Host: example.com Response 1 2 3 4 5 6 7 8 9 10 11 12 HTTP/1.1 200 OK Content-Type: text/html &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Payment&lt;/title&gt; &lt;meta http-equiv=\"refresh\" content=\"0;url=intent://example.com/payment/android#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=com.example.app;end;\"&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=\"intent://example.com/payment/android#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=com.example.app;end;\"&gt;Back to app&lt;/a&gt; &lt;/body&gt; &lt;/html&gt; iOS Switching apps on iOS is always done by opening a URL. urls. It is preferred to use a Universal Link URL. Your app and backend must be configured such that the paymentUrl used on iOS payments is registered as a universal link to your app. Then, on iOS 13.4 or later, in most cases when the paymentUrl is navigated to, it will be immediately given to your app to handle. However, Universal Links are not entirely reliable, in particular if you wish to support iOS earlier than 13.4, and we must still not get stuck if the paymentUrl is opened in the browser instead. Now, the most straightforward way of escaping this situation is to define a custom url scheme for your app, and do something similar to the Android solution, involving that scheme. If you plan to support only iOS 13.4 and up, where the situation is rather unlikely to occur, this can be sufficient. Doing this on earlier versions is likely to end up suboptimal, though, as doing this will cause an unsightly confirmation dialog to be shown before the app is actually launched. As the situation where paymentUrl is opened in the browser is actually quite likely to occur on iOS earlier than 13.4, this means you are more or less subjecting all users on those systems to sub-par user experience. To provide a workaround to the confirmation popup, we devise a system that allows the user to retrigger the navigation to paymentUrl in such a way as to maximize the likelihood that the system will let the app handle it. As one of the criteria is that the navigation must be to a domain different to the current one, the paymentUrl itsef will always redirect to a page on a different domain. That page is then able to link back to the paymentUrl and have that navigation be routed to the app. You could host this “trampoline” page yourself, but Swedbank Pay has a generic one available for use. The trampoline page takes three arguments, target, which should be set to your paymentUrl, language, which supports all the Checkout languages, and app, you app name that will be shown on the page. On iOS any URL the app is opened with is delivered to the UIApplicationDelegate by either the application(_:continue:restorationHandler:) method (for universal links) or application(_:open:options:). To let the SDK respond appropriately, you need to call SwedbankPaySDK.continue(userActivity:) or SwedbankPaySDK.open(url:) from those methods, respectively. Request 1 2 GET /payment/ios HTTP/1.1 Host: example.com Response 1 2 HTTP/1.1 301 Moved Permanently Location: https://ecom.stage.payex.com/externalresourcehost/trampoline?target=https%3A%2F%2Fexample.com%2Fpayment%2Fios%3Ffallback%3Dtrue&amp;language=en-US&amp;app=Example%20App The trampoline url will, in turn, serve an html page: Request 1 2 GET /externalresourcehost/trampoline?target=https%3A%2F%2Fexample.com%2Fpayment%2Fios%3Ffallback%3Dtrue&amp;language=en-US&amp;app=Example%20App HTTP/1.1 Host: ecom.stage.payex.com Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: text/html &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt; &lt;title&gt;Swedbank Pay Redirect&lt;/title&gt; &lt;link rel=\"icon\" type=\"image/png\" href=\"/externalresourcehost/content/images/favicon.png\"&gt; &lt;link rel=\"stylesheet\" href=\"/externalresourcehost/content/css/style.css\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"trampoline-container\" onclick=\"redirect()\"&gt; &lt;img alt=\"Swedbank Pay Logo\" src=\"/externalresourcehost/content/images/swedbank-pay-logo-vertical.png\" /&gt; &lt;span class=\"trampoline-text\"&gt; &lt;a&gt;Back to Example App&lt;/a&gt; &lt;/span&gt; &lt;/div&gt; &lt;script&gt; function redirect() { window.location.href = decodeURLComponent(\"https%3A%2F%2Fexample.com%2Fpayment%2Fios%3Ffallback%3Dtrue\"); }; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; The page links back to https://example.com/payment/ios?fallback=true. Notice the additional parameter. This is, indeed, part of the target parameter, and under the control of your backend. The purpose of this is to allow for one final escape hatch, in case the universal link mechanism fails to work. If this url is yet again opened in the browser, the backend responds with a redirect to to a custom-scheme url. (This should only happen if your universal links configuration is broken, or if iOS has somehow failed to load the Apple App-Site Association file.) Request 1 2 GET /payment/ios?fallback=true HTTP/1.1 Host: example.com Response 1 2 HTTP/1.1 301 Moved Permanently Location: com.example.app://example.com/payment/ios?fallback=true From the app perspective, in our example, the url the app is opened with will be one these three: https://example.com/payment/ios, https://example.com/payment/ios?fallback=true, or com.example.app://example.com/payment/ios?fallback=true. When any of these is passed to the SDK from your UIApplicationDelegate, the SDK will then call into your Configuration to check if it matches the paymentUrl (https://example.com/payment/ios in this example). This can be customized, but by default it will allow the scheme to change and for additional query parameters to be added to the url, so this example would work with the default configuration. Apple App-Site Association As the iOS paymentUrl needs to be a universal link, the backend will also need an Apple App-Site Association file. This must be served at /.well-known/apple-app-site-association, and it must associate any url used as a paymentUrl with the app. Request 1 2 GET /.well-known/apple-app-site-association HTTP/1.1 Host: example.com Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 HTTP/1.1 200 OK Content-Type: application/json { \"applinks\": { \"apps\": [], \"details\": [ { \"appID\": \"ABCDE12345.com.example.app\", \"paths\": [ \"/payment/ios\" ], \"appIDs\": [ \"ABCDE12345.com.example.app\" ], \"components\": [ { \"/\": \"/payment/ios\" } ] } ] } } Note that the AASA file must be served over https, otherwise iOS will not load it. This example AASA file contains both old-style and new-style values for maximum compatibility. You may not need the old-style values in your implementation, depending on your situation. Updating The Payment Order The SDK includes a facility for updating a payment order after is has been created. The Merchant Backend Configuration uses this to allow setting the instrument of an instrument mode payment, but your custom Configuration can use it for whatever purpose you need. Android First, implement updatePaymentOrder in your Configuration subclass. This method returns the same data type as postPaymentorders, and when it does, the PaymentFragment reloads the payment menu according to the new data. The paymentOrder and userData arguments are what you set for the PaymentFragment, the viewPaymentOrderInfo argument is the current ViewPaymentOrderInfo (as returned from a previous call to this method, or, if this is the first update, the original postPaymentorders call). The updateInfo argument will be the value you call PaymentViewModel.updatePaymentOrder with, its meaning is therefore defined by you. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class MyConfiguration : Configuration() { override suspend fun updatePaymentOrder( context: Context, paymentOrder: PaymentOrder?, userData: Any?, viewPaymentOrderInfo: ViewPaymentOrderInfo, updateInfo: Any? ): ViewPaymentOrderInfo { val viewPaymentOrder = post(\"https://example.com/payment/android/frobnicate\") return ViewPaymentOrderInfo( webViewBaseUrl = \"https://example.com/\", viewPaymentOrder = viewPaymentOrder, completeUrl = \"https://example.com/complete\", cancelUrl = \"https://example.com/cancel\", paymentUrl = \"https://example.com/payment/android\", termsOfServiceUrl = \"https://example.com/tos\" ) } } To trigger an update, call updatePaymentOrder on the PaymentViewModel of the active payment. The argument of that call will be passed to your Configuration.updatePaymentOrder as the updateInfo argument. 1 activity.paymentViewModel.updatePaymentOrder(\"frob\") iOS Implement updatePaymentOrder in your configuration. Rather like the Android method, this method takes a callback of the same type as postPaymentorders, and when that callback is invoked with a Success result, the SwedbankPaySDKController reloads the payment menu according to the new data. Unlike postPaymentorders, this method must also return a request handle, which can be used to cancel the request if needed. If the request is cancelled, the completion callback should not be called. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 struct MyConfiguration : SwedbankPaySDKConfiguration { func updatePaymentOrder( paymentOrder: SwedbankPaySDK.PaymentOrder?, userData: Any?, viewPaymentOrderInfo: SwedbankPaySDK.ViewPaymentOrderInfo, updateInfo: Any, completion: @escaping (Result&lt;SwedbankPaySDK.ViewPaymentOrderInfo, Error&gt;) -&gt; Void ) -&gt; SwedbankPaySDKRequest? { val request = post(\"https://example.com/payment/ios/frobnicate\") { result in do { let viewPaymentorder = try result.get() let info = ViewPaymentOrderInfo( webViewBaseURL: \"https://example.com/\", viewPaymentorder: viewPaymentorder, completeUrl: \"https://example.com/complete\", cancelUrl: \"https://example.com/cancel\", paymentUrl: \"https://example.com/payment/ios\", termsOfServiceUrl: \"https://example.com/tos\" ) completion(.success(info)) } catch NetworkError.cancelled { // no callback } catch { completion(.failure(error)) } } return request } } To trigger an update, call updatePaymentOrder on the SwedbankPaySDKController. The argument will be passed to your configuration in the updateInfo argument. 1 2 3 swedbankPayController.updatePaymentOrder( updateInfo: \"frob\" ) Backend The backend implementation makes any needed calls to Swedbank Pay, and returns whatever your implementation expects. It is recommended to always use the view-paymentorder link from the update response, in case the update has caused a change to that url. Request 1 2 POST /payment/android/frobnicate HTTP/1.1 Host: example.com Response 1 2 3 4 HTTP/1.1 200 OK Content-Type: text/plain https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE Errors Any exception you throw from your Configuration will be made available in PaymentViewModel.exception or SwedbankPaySDKDelegate.paymentFailed(error:). You are therefore fully in control of the model you wish to use to report errors. We recommend adopting the Problem Details for HTTP APIs convention for reporting errors from your backend. At the moment of writing, the Android SDK also contains a utility for parsing RFC 7807 messages to help with this. iOS Payment Menu Redirect Handling In many cases the payment menu will need to navigate to a different web page as part of the payment process. Unfortunately, testing has shown that not all such pages are happy about being opened in a WKWebView. To mitigate this, the SDK contains a list of pages we know to work, and any others will be opened in Safari (or whatever browser the user has set as default in recent iOS). If you wish, you can customize this behavior by overriding decidePolicyForPaymentMenuRedirect in your configuration. Note that you can also modify this behavior by the webRedirectBehavior property of SwedbankPaySDKController. 1 2 3 4 5 6 7 8 9 struct MyConfiguration : SwedbankPaySDKConfiguration { func decidePolicyForPaymentMenuRedirect( navigationAction: WKNavigationAction, completion: @escaping (SwedbankPaySDK.PaymentMenuRedirectPolicy) -&gt; Void ) { // we like to live dangerously, allow everything completion(.openInWebView) } } iOS Payment URL Matching The iOS paymentUrl universal-link/custom-scheme contraption makes it so that your app must be able to accept some variations in the urls. The default behavior is to allow for a different scheme and additional query parameters. If these are not good for your app, you can override the url(_:matchesPaymentUrl:) method in your configuration. If you wish to simply specify the allowed custom scheme, you can conform to SwedbankPaySDKConfigurationWithCallbackScheme instead. 1 2 3 4 5 6 7 struct MyConfiguration : SwedbankPaySDKConfiguration { func url(_ url: URL, matchesPaymentUrl paymentUrl: URL) -&gt; Bool { // We trust universal links enough // so we do not need the custom-scheme fallback return url == paymentUrl } } 1 2 3 struct MyConfiguration : SwedbankPaySDKConfigurationWithCallbackScheme { let callbackScheme = \"com.example.app\" } Back: iOS Next: Other Features",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/custom-backend.html"
  },{
    "title": "Custom Logo",
    "text": "Custom Logo If you have permission and the feature has been activated in your contract, you can replace the Swedbank Pay logo in the Payment Menu. See the abbreviated example below with logoUrl present in the paymentOrder request’s urls. If the configuration is activated and you add a logoUrl, the SwedbankPay logo will be replaced and the text changed accordingly. If the configuration is activated and you do not add a logoUrl, no logo or text will be shown. If the configuration is deactivated, adding a logoUrl has no effect. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" } } }",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/custom-logo.html"
  },{
    "title": "Custom Logo",
    "text": "Custom Logo If you have permission and the feature has been activated in your contract, you can replace the Swedbank Pay logo in the Payment Menu. See the abbreviated example below with logoUrl present in the paymentOrder request’s urls. If the configuration is activated and you add a logoUrl, the SwedbankPay logo will be replaced and the text changed accordingly. If the configuration is activated and you do not add a logoUrl, no logo or text will be shown. If the configuration is deactivated, adding a logoUrl has no effect. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" } } }",
    "tags": "",
    "url": "/checkout-v3/features/optional/custom-logo.html"
  },{
    "title": "Custom Logo",
    "text": "Custom Logo If you have permission and the feature has been activated in your contract, you can replace the Swedbank Pay logo in the Payment Menu. See the abbreviated example below with logoUrl present in the paymentOrder request’s urls. If the configuration is activated and you add a logoUrl, the SwedbankPay logo will be replaced and the text changed accordingly. If the configuration is activated and you do not add a logoUrl, no logo or text will be shown. If the configuration is deactivated, adding a logoUrl has no effect. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" } } }",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/custom-logo.html"
  },{
    "title": "Custom Logo",
    "text": "Custom Logo If you have permission and the feature has been activated in your contract, you can replace the Swedbank Pay logo in the Payment Menu. See the abbreviated example below with logoUrl present in the paymentOrder request’s urls. If the configuration is activated and you add a logoUrl, the SwedbankPay logo will be replaced and the text changed accordingly. If the configuration is activated and you do not add a logoUrl, no logo or text will be shown. If the configuration is deactivated, adding a logoUrl has no effect. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" } } }",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/custom-logo.html"
  },{
    "title": "Data Protection",
    "text": "Paymentorder consumer data When creating a payment order and checking in a consumer the consumer may opt to create a profile. This will store certain data (listed below) to their profile. If a consumer chooses to not create a profile, we store the consumer data as the provided data is only possible to input during this stage. To have access to this when completing a payment order, such as capturing it when shipping the order the address and name must be available on a profile. To achieve this we store the information temporarily to make sure it is available. This data is deleted after 28 days. Data stored temporarily or on a profile Billing address Country code First name Last name Legal address Social security number Social security number country code",
    "tags": "",
    "url": "/checkout-v3/resources/data-protection.html"
  },{
    "title": "Debugging Features",
    "text": "Debugging Features To help with investigating problematic scenarios, the SDK has some debugging features. Android The SDK normally attempts to keep the payment flow inside a WebView as far as possible. In case some payment instrument fails to work properly, it may be helpful to see if it is related to the WebView. To allow this, you can set a flag to immediately move the payment process to the browser app when it navigates away from the payment menu. In particular, if some card issuer’s flow opens a third-party application, but the process fails to return to your app, you should see if this option makes any difference. Testing your application with this option enabled can also be useful in ascertaining that your “Android Intent callback” endpoint is working properly. Android 1 2 3 4 5 6 7 8 9 10 val arguments = PaymentFragment.ArgumentsBuilder() .paymentOrder(paymentOrder) .useBrowser(true) .build() val manualArguments = Bundle() manualArguments.putBoolean( PaymentFragment.ARG_USE_BROWSER, true ) If a payment flow should open a third-party application, but this does not happen as expected, you can set a flag to display error dialogs when web content attempts to start an Activity, but it fails. Android 1 2 3 4 5 6 7 8 9 10 val arguments = PaymentFragment.ArgumentsBuilder() .paymentOrder(paymentOrder) .debugIntentUris(true) .build() val manualArguments = Bundle() manualArguments.putBoolean( PaymentFragment.ARG_DEBUG_INTENT_URLS, true ) iOS As explained in the iOS documentation, the iOS SDK will, in some cases, open navigations out of the payment menu in Safari rather than the WKWebView. The SDK contains a list of redirects that we have tested to be working, but, of course, this list can be neither complete nor correct for all time. If you encounter a payment flow that opens in the WKWebView (i.e. does not open in Safari), but does not work correctly, you can make all navigations go to Safari to check if the flow has become incompatible with WKWebView. On the other hand, if you encounter a payment flow that opens in Safari and wish to investigate if it would work in the web view instead, you can make all navigations open in the web view. iOS 1 2 3 swedbankPaySDKController.webRedirectBehavior = .AlwaysUseWebView swedbankPaySDKController.webRedirectBehavior = .AlwaysUseBrowser If you have set .AlwaysUseBrowser and discovered a site that works with WKWebView, you can set a webNavigationLogger to your SwedbankPaySDKController and make note of the URL. Then, modify your Configuration to allow that URL to be opened in the WKWebView. If using the Merchant Backend Configuration, add a additionalAllowedWebViewRedirects argument to your initializer. If using a custom Configuration, change your decidePolicyForPaymentMenuRedirect implementation accordingly. iOS 1 2 3 swedbankPaySDKController.webNavigationLogger = { url in print(url) } 1 2 3 4 let configuration = SwedbankPaySDK.MerchantBackendConfiguration( backendUrl: backendUrl, additionalAllowedWebViewRedirects: [.Domain(\"example.com\")] ) After you have verified that a domain works with WKWebView, please file an issue to have it added to the SDK’s bundled list.",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/optional/debugging.html"
  },{
    "title": "Delete Token",
    "text": "Delete Unscheduled, Recurrence Or Payment Tokens Payers should be able to delete tokens connected to them. How to do this is described in the example below. Note that the different token types have different responses. The state field must have the state Deleted when deleting the token. No other states are supported. Delete recurrenceToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/recurrenceTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete recurrenceToken Response Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"isDeleted\": true } Delete unscheduledToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/unscheduledTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete unscheduledToken Response The example shows a token connected to a card. The instrument parameters and display name will vary depending on the instrument. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"123456xxxxxx1111\" \"instrumentParameters\": { \"cardBrand\": \"Visa\", \"expiryDate\": \"MM/YYYY\" } } Delete paymentToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/paymentTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete paymentToken Response The example shows a token connected to a card. The instrument parameters and display name will vary depending on the instrument. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"123456xxxxxx1111\" \"instrumentParameters\": { \"cardBrand\": \"Visa\", \"expiryDate\": \"MM/YYYY\" } }",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/delete-token.html"
  },{
    "title": "Delete Token",
    "text": "Delete Unscheduled, Recurrence Or Payment Tokens Payers should be able to delete tokens connected to them. How to do this is described in the example below. Note that the different token types have different responses. The state field must have the state Deleted when deleting the token. No other states are supported. Delete recurrenceToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/checkout-v3/recurrenceTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete recurrenceToken Response Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"isDeleted\": true } Delete unscheduledToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/checkout-v3/unscheduledTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete unscheduledToken Response The example shows a token connected to a card. The instrument parameters and display name will vary depending on the instrument. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"123456xxxxxx1111\" \"instrumentParameters\": { \"cardBrand\": \"Visa\", \"expiryDate\": \"MM/YYYY\" } } Delete paymentToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/checkout-v3/paymentTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete paymentToken Response The example shows a token connected to a card. The instrument parameters and display name will vary depending on the instrument. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"123456xxxxxx1111\" \"instrumentParameters\": { \"cardBrand\": \"Visa\", \"expiryDate\": \"MM/YYYY\" } }",
    "tags": "",
    "url": "/checkout-v3/features/optional/delete-token.html"
  },{
    "title": "Delete Token",
    "text": "Delete recurrenceToken Payers should be able to delete payment tokens that are associated to them. How to delete a recurrenceToken is described in the example below. Note that the value of state must be Deleted when deleting the token. No other states are supported. Delete Token Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/invoice/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/invoice/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"isDeleted\": true } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/optional/delete-token.html"
  },{
    "title": "Delete Token",
    "text": "Delete recurrenceToken Payers should be able to delete payment tokens that are associated to them. How to delete a recurrenceToken is described in the example below. Note that the value of state must be Deleted when deleting the token. No other states are supported. Delete Token Request Request 1 2 3 4 5 6 7 8 9 10 PATCH /psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\", \"tokenType\" : \"recurrenceToken\" } Delete Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"isDeleted\": true \"isPayeeToken\": false, \"cardBrand\": \"Visa\", \"maskedPan\": \"123456xxxxxx1111\", \"expiryDate\": \"MM/YYYY\", \"tokenType\" : \"recurrenceToken\" } } Delete unscheduledToken Payers should be able to delete payment tokens that are associated to them. How to delete a unscheduledToken is described in the example below. Note that the value of state must be Deleted when deleting the token. No other states are supported. Delete Token Request Request 1 2 3 4 5 6 7 8 9 10 PATCH /psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\", \"tokenType\" : \"unscheduledToken\" } Delete Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"isDeleted\": true \"isPayeeToken\": false, \"cardBrand\": \"Visa\", \"maskedPan\": \"123456xxxxxx1111\", \"expiryDate\": \"MM/YYYY\", \"tokenType\" : \"unscheduledToken\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/delete-token.html"
  },{
    "title": "Delete Token",
    "text": "Delete recurrenceToken Payers should be able to delete payment tokens that are associated to them. How to delete a recurrenceToken is described in the example below. Note that the value of state must be Deleted when deleting the token. No other states are supported. Delete Token Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/old-implementations/checkout-v2/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"isDeleted\": true } } Delete unscheduledToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/old-implementations/checkout-v2/unscheduledTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete unscheduledToken Response The example shows a token connected to a card. The instrument parameters and display name will vary depending on the instrument. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"123456xxxxxx1111\" \"instrumentParameters\": { \"cardBrand\": \"Visa\", \"expiryDate\": \"MM/YYYY\" } }",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/delete-token.html"
  },{
    "title": "Delete Token",
    "text": "Delete recurrenceToken Payers should be able to delete payment tokens that are associated to them. How to delete a recurrenceToken is described in the example below. Note that the value of state must be Deleted when deleting the token. No other states are supported. Delete Token Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/old-implementations/payment-menu-v2/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete Token Response Response 1 2 3 4 5 6 7 8 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"isDeleted\": true } Delete unscheduledToken Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/old-implementations/payment-menu-v2/unscheduledTokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\" } Delete unscheduledToken Response The example shows a token connected to a card. The instrument parameters and display name will vary depending on the instrument. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"123456xxxxxx1111\" \"instrumentParameters\": { \"cardBrand\": \"Visa\", \"expiryDate\": \"MM/YYYY\" } }",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/delete-token.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/paymentorders/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/checkout-v3/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/swish/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/trustly/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/invoice/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 POST /psp/creditcard/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/mobilepay/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"DKK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"da-DK\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/vipps/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/old-implementations/checkout-v2/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/description.html"
  },{
    "title": "Description",
    "text": "Description The description field is a 40 character length textual summary of the purchase. It is needed to specify what payer is actually purchasing. Below you will find an abbreviated Card Payments Purchase request. As you can see the description field is set to be Test Description in the the code example. info Notice that for Redirect, the description will be shown as Test - Reference1583419461, as set in the code example. For the Seamless View scenario, the description is not shown in the payment window, but it is still required in the initial request. Description Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 POST /psp/old-implementations/payment-menu-v2/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Description\", \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": \"hostUrls\": [\"https://example.com\"] } } How It Looks",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/description.html"
  },{
    "title": "Direct",
    "text": "Payment Flow When the payer starts the purchase process, you make a POST request towards Swedbank Pay with the collected Purchase information. The next step is to collect the payer’s Swish registered mobile number and make a POST request towards Swedbank Pay to create a sales transaction. Swedbank Pay will handle the dialog with Swish and the payer will have to confirm the purchase in the Swish app. If callbackURL is set, you will receive a payment callback when the Swish dialog is completed. Make a GET request to check the payment status. report_problem Swish is a one-phase payment instrument that is based on sales transactions not involving capture or cancellation operations. link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. Step 1: Create A Purchase A Purchase payment is created by performing the following request. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Initial Direct Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 POST /psp/swish/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"prices\": [ { \"type\": \"Swish\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [ \"https://example.com\" ], \"paymentUrl\": \"https://example.com/perform-payment\", \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"ref-123456\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+46739000001\" } }, \"swish\": { \"enableEcomOnly\": false, \"paymentRestrictedToAgeLimit\": 18, \"paymentRestrictedToSocialSecurityNumber\": \"199710202392\" } } Show fields Hide fields Required Field Type Description   check payment object The payment object contains information about the specific payment.   check operation string Determines the initial operation, defining the type of payment created.   check intent string Authorization.   check currency string SEK.   check prices object The prices resource lists the prices related to a specific payment.   check type string Swish   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string(40) A 40 character length textual description of the purchase.     payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string sv-SE, nb-NO or en-US.   check urls object The urls resource lists urls that redirects users to relevant sites.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.     callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.     logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.     termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check payeenInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.     payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     payer string The payer object, containing information about the payer.     payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.     prefillInfo object An object holding information which, when available, will be prefilled on the payment page.     msisdn string Number will be prefilled on payment page, if valid. The mobile number must have a country code prefix and be 8 to 15 digits in length.     swish object An object that holds different scenarios for Swish payments.     enableEcomOnly boolean true if to only enable Swish on web based transactions.; otherwise false to also enable Swish transactions via in-app payments     paymentRestrictedToAgeLimit integer Positive number that sets the required age needed to fulfill the payment. To use this feature it has to be configured in the contract.     paymentRestrictedToSocialSecurityNumber string When provided, the payment will be restricted to a specific social security number to make sure its the same logged in customer who is also the payer. Format: yyyyMMddxxxx. To use this feature it has to be configured in the contract.   Initial Direct Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 992308, \"created\": \"2017-10-23T08:38:57.2248733Z\", \"instrument\": \"Swish\", \"operation\": \"Purchase\", \"intent\": \"Sale\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales\", \"rel\": \"create-sale\" } ] } Step 2a: Create E-Commerce Sale Transaction This operation creates an e-commerce sales transaction in the Direct payment scenario. This is managed either by sending a POST request as seen below, or by directing the payer to the hosted payment pages. Note that the msisdn value (the payer’s mobile number) is required in this request. E-Commerce Request Request 1 2 3 4 5 6 7 8 9 10 POST /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"msisdn\": \"+46739000001\" } } Field Type Required transaction object The transaction object contains information about the specific transaction. msisdn string The payer’s mobile number. It must have a country code prefix and be 8 to 15 digits in length. E-Commerce Response The created sale resource contains information about the sale transaction made against a swish payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"sale\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Sale\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/swish/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-sale\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the sale resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial sale has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   E-Commerce Sequence Diagram The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The Callback response is a simplified example in this flow. Go to the Callback section to view the complete flow. sequenceDiagram activate Browser Browser-&gt;&gt;-Merchant: Start purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST &lt;Swish payment&gt; (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: Payment resource activate Merchant Merchant-&gt;&gt;- SwedbankPay: POST &lt;Sales Transaction&gt; (operation=create-sale) activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Transactions resource activate Merchant note left of Merchant: POST containing MSISDN Merchant-&gt;&gt;-Browser: Tell payer to open Swish app Swish_API-&gt;&gt;Swish_App: Ask for payment confirmation activate Swish_App Swish_App--&gt;&gt;-Swish_API: Payer confirms payment alt Callback activate SwedbankPay SwedbankPay--&gt;&gt;-Swish_API: Callback response activate SwedbankPay SwedbankPay-&gt;&gt;-Merchant: Transaction Callback end activate Merchant Merchant-&gt;&gt;- SwedbankPay: GET &lt;Swish payment&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Payment response activate Merchant Merchant-&gt;&gt;-Browser: Payment Status Step 2b: Create M-Commerce Sale Transaction This operation creates an m-commerce sales transaction in the Direct payment scenario. This is managed either by sending a POST request as seen below, or by directing the payer to the hosted payment pages. Note that the msisdn value (the payer’s mobile number) is left out in this request. The redirect-app-swish operation is only present in the m-commerce flow response. M-Commerce Request Request 1 2 3 4 5 6 7 8 POST /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { } } Field Type Required transaction object The transaction object is empty for m-commerce sale transactions. M-Commerce Response The created sale resource contains information about the sale transaction made against a swish payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"sale\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Sale\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/swish/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] \"operations\": [ { \"href\": \"swish://paymentrequest?token=LhXrK84MSpWU2RO09f8kUP-FHiBo-1pB\", \"method\": \"GET\", \"rel\": \"redirect-app-swish\" }, { \"href\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"edit-sale\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the sale resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial sale has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.   Step 3: GET The Payment Status Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"prices\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"captures\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The URL to the payeeinfo resource where the information about the payee of the payment can be retrieved. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. M-Commerce Sequence Diagram The sequence diagram below shows the three requests you have to send to Swedbank Pay to make a purchase. The Callback response is a simplified example in this flow. Go to the Callback section to view the complete flow. sequenceDiagram activate Browser Browser-&gt;&gt;-Merchant: Start purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST &lt;Swish payment&gt; (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: Payment resource activate Merchant Merchant-&gt;&gt;- SwedbankPay: POST &lt;Sales Transaction&gt; (operation=create-sale) activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Transaction resource activate Merchant note left of Merchant: POST containing MSISDN Merchant--&gt;&gt;-Browser: Tell payer to open Swish app Swish_API-&gt;&gt;Swish_App: Ask for payment confirmation activate Swish_App Swish_App--&gt;&gt;-Swish_API: Payer confirms payment activate Swish_API Swish_API-&gt;&gt;-Swish_App: Start redirect activate Swish_App Swish_App--&gt;&gt;-Browser: Redirect alt Callback activate SwedbankPay SwedbankPay--&gt;&gt;-Swish_API: Callback response activate SwedbankPay SwedbankPay-&gt;&gt;-Merchant: Transaction Callback end activate Merchant Merchant-&gt;&gt;- SwedbankPay: GET &lt;Swish Payment&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Payment response activate Merchant Merchant--&gt;&gt;-Browser: Payment Status Introduction Redirect",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/direct.html"
  },{
    "title": "Direct",
    "text": "report_problem Availability: Note that this invoice integration is no longer available in Sweden. If you are a Swedish merchant and wish to offer invoice as a payment option, this has to be done through our payment order implementation. Invoice Direct Implementation Flow Collect all purchase information and send it in a POST request to Swedbank Pay. Make sure to include personal information (SSN and postal code). Make a new POST request towards Swedbank Pay to retrieve the name and address of the customer to create a purchase. Create a POSTrequest to retrieve the transaction status. Send a GET request with the paymentID to get the authorization result. Make a Capture by creating a POST request. An invoice payment is always two-phased based - you create an Authorize transaction, that is followed by a Capture or Cancel request. The Capture , Cancel, Reversal opions are described in features. info Note that the invoice will not be created/distributed before you have made a capture request. By making a Capture, Swedbank Pay will generate the invoice to the payer and the order is ready for shipping. link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. The 3 most important steps in the Invoice Direct flow are shown below. Step 1: Create A Purchase Our payment example below uses the FinancingConsumer value. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Financing Consumer Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 POST /psp/invoice/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"FinancingConsumer\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [ { \"type\": \"Invoice\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"generatePaymentToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"PR123\", \"payeeName\": \"Merchant1\", \"productCategory\": \"PC1234\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"invoice\": { \"invoiceType\": \"PayExFinancingSe\" } } Show fields Hide fields Required Field Type Description check︎︎︎︎︎ payment object The payment object contains information about the specific payment. check︎︎︎︎︎ operation string The operation that the payment is supposed to perform. The FinancingConsumer operation is used in our example. check︎︎︎︎︎ intent string Authorization is the only intent option for invoice. Reserves the amount, and is followed by a cancellation or capture of funds. check︎︎︎︎︎ currency string NOK, SEK, DKK, USD or EUR. check︎︎︎︎︎ prices object The prices resource lists the prices related to a specific payment. check︎︎︎︎︎ type string Use the value ``.See the prices resource for more information. check︎︎︎︎︎ amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check︎︎︎︎︎ vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check︎︎︎︎︎ description string(40) A 40 character length textual description of the purchase. check︎︎︎︎︎ userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check︎︎︎︎︎ language string sv-SE, nb-NO or en-US. check︎︎︎︎︎ urls object The urls resource lists urls that redirects users to relevant sites.   hostUrl array The array of URLs valid for embedding of Swedbank Pay Seamless Views. If not supplied, view-operation will not be available. check︎︎︎︎︎ completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check︎︎︎︎︎ payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check︎︎︎︎︎ payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check︎︎︎︎︎ payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true. Financing Consumer Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SE\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"payeeInfo\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"settings\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" }, \"approvedLegalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/approvedlegaladdress\" }, \"maskedApprovedLegalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/maskedapprovedlegaladdress\" } }, \"approvedLegalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/approvedlegaladdress\" }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"method\": \"POST\" }, { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\", \"rel\": \"create-cancel\", \"method\": \"POST\" }, { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/approvedlegaladdress\", \"rel\": \"create-approved-legal-address\", \"method\": \"POST\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Step 2: Get approvedLegalAddress Confirmation Retrieve the payer’s legal address, which is needed to do the next step. Approved Legal Address Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/invoice/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"addressee\": { \"socialSecurityNumber\": \"194810205957\", \"zipCode\": \"55560\" } } Approved Legal Address Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"approvedLegalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/approvedlegaladdress\", \"addressee\": \"Leo 6\", \"streetAddress\": \"Gata 535\", \"zipCode\": \"55560\", \"city\": \"Vaxholm\", \"countryCode\": \"SE\" } } Step 3: Complete The Payment Add the legal address in your complete request. Complete Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 POST /psp/invoice/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"activity\": \"FinancingConsumer\" }, \"consumer\": { \"socialSecurityNumber\": \"194810205957\", \"customerNumber\": \"123456\", \"email\": \"someExample@payex.com\", \"msisdn\": \"+46765432198\", \"ip\": \"127.0.0.1\" }, \"legalAddress\": { \"addressee\": \"Leo 6\", \"streetAddress\": \"Gata 535\", \"zipCode\": \"55560\", \"city\": \"Vaxholm\", \"countryCode\": \"SE\" } } Complete Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"shippingAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/shippingaddress\" }, \"legalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/legaladdress\" }, \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/23fc8ea7-57b8-44bb-8313-08d7ca2e1a26\", \"transaction\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/23fc8ea7-57b8-44bb-8313-08d7ca2e1a26\", \"created\": \"2020-03-17T09:46:10.3506297Z\", \"updated\": \"2020-03-17T09:46:12.2512221Z\", \"type\": \"Authorization\", \"state\": \"Completed\", \"number\": 71100537930, \"amount\": 4201, \"vatAmount\": 0, \"description\": \"Books &amp; Ink\", \"payeeReference\": \"1584438350\", \"isOperational\": false, \"operations\": [] } } } The sequence diagram below shows a high level description of the invoice process, including the four requests you have to send to Swedbank Pay to create an authorized transaction. Invoice Flow sequenceDiagram Payer-&gt;&gt;Merchant: Start purchase (collect SSN and postal number) activate Merchant note left of Merchant: First API request Merchant-&gt;&gt;-Swedbank Pay: POST &lt;Invoice Payments&gt; (operation=FinancingConsumer) activate Swedbank Pay Swedbank Pay--&gt;&gt;-Merchant: payment resource activate Merchant note left of Merchant: Second API request Merchant-&gt;&gt;-Swedbank Pay: POST &lt;approvedLegalAddress&gt; (SNN and postal number) activate Swedbank Pay Swedbank Pay-&gt;&gt;Swedbank Pay: Update payment with payer's delivery address Swedbank Pay--&gt;&gt;-Merchant: Approved legaladdress information activate Merchant Merchant--&gt;&gt;-Payer: Display all details and final price activate Payer Payer-&gt;&gt;Payer: Input email and mobile number Payer-&gt;&gt;-Merchant: Confirm purchase activate Merchant note left of Merchant: Third API request Merchant-&gt;&gt;-Swedbank Pay: POST &lt;invoice authorizations&gt; (Transaction Activity=FinancingConsumer) activate Swedbank Pay Swedbank Pay--&gt;&gt;-Merchant: Transaction result activate Merchant note left of Merchant: Fourth API request Merchant-&gt;&gt;-Swedbank Pay: GET &lt;invoice payments&gt; activate Swedbank Pay Swedbank Pay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: Display result Options After Posting A Purchase Payment Head over to Capture to complete the Invoice Direct integration. Seamless View Capture",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/direct.html"
  },{
    "title": "Enterprise PayerReference",
    "text": "Enterprise PayerReference If a merchant wants to use the Enterprise implementation and has a secure login, but doesn’t store the payer’s SSN, they can add a payerReference in the payer field of the payment request. If the payerReference is present along with email and msisdn, the merchant doesn’t need to add a nationalIdentifier. Other than that, it is the same as a regular Redirect or Seamless View request using the Enterprise implementation. If no existing consumer profile exists on the payerReference or email and msisdn, the payer will be asked to enter their social security number as shown below. This information is needed in order to store payment information. The payer will be given the option to continue as a guest. When doing so, no payment information will be stored.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/enterprise-payer-reference.html"
  },{
    "title": "Fees And Discounts",
    "text": "Fees And Discounts If you want to add fees or discounts to your payment order, this can be done by adding them as orderItems in your request. Use positive amounts for fees and negative amounts for discounts. Remember that the sum of the orderItems must match the total payment order amount. Restricting the fee or discount to certain instruments is also possible. Simply add the restrictToInstruments field and which instruments the fee or discount applies to. This is currently available for invoice only. The example below shows a fee which only applies to Swedish invoices. Other options for some of the fields are in the table at the bottom. Fee Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json \"orderItems\": [ { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] Show fields Hide fields Field Type Description   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string Used for discounts only. The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer Used for discounts only. If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. The fee or discount applies to all instruments if a restriction is not included. Use of this field requires an agreement with Swedbank Pay.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/fees-discounts.html"
  },{
    "title": "Fees And Discounts",
    "text": "Fees And Discounts If you want to add fees or discounts to your payment order, this can be done by adding them as orderItems in your request. Use positive amounts for fees and negative amounts for discounts. Remember that the sum of the orderItems must match the total payment order amount. Restricting the fee or discount to certain instruments is also possible. Simply add the restrictToInstruments field and which instruments the fee or discount applies to. This is currently available for invoice only. The example below shows a fee which only applies to Swedish invoices. Other options for some of the fields are in the table at the bottom. Fee Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json \"orderItems\": [ { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] Show fields Hide fields Field Type Description   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string Used for discounts only. The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer Used for discounts only. If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. The fee or discount applies to all instruments if a restriction is not included. Use of this field requires an agreement with Swedbank Pay.",
    "tags": "",
    "url": "/checkout-v3/features/optional/fees-discounts.html"
  },{
    "title": "Fees And Discounts",
    "text": "Fees And Discounts If you want to add fees or discounts to your payment order, this can be done by adding them as orderItems in your request. Use positive amounts for fees and negative amounts for discounts. Remember that the sum of the orderItems must match the total payment order amount. Restricting the fee or discount to certain instruments is also possible. Simply add the restrictToInstruments field and which instruments the fee or discount applies to. This is currently available for invoice only. The example below shows a fee which only applies to Swedish invoices. Other options for some of the fields are in the table at the bottom. Fee Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json \"orderItems\": [ { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] Show fields Hide fields Field Type Description   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string Used for discounts only. The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer Used for discounts only. If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. The fee or discount applies to all instruments if a restriction is not included. Use of this field requires an agreement with Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/fees-discounts.html"
  },{
    "title": "Fees And Discounts",
    "text": "Fees And Discounts If you want to add fees or discounts to your payment order, this can be done by adding them as orderItems in your request. Use positive amounts for fees and negative amounts for discounts. Remember that the sum of the orderItems must match the total payment order amount. Restricting the fee or discount to certain instruments is also possible. Simply add the restrictToInstruments field and which instruments the fee or discount applies to. This is currently available for invoice only. The example below shows a fee which only applies to Swedish invoices. Other options for some of the fields are in the table at the bottom. Fee Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json \"orderItems\": [ { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] Show fields Hide fields Field Type Description   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string Used for discounts only. The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer Used for discounts only. If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. The fee or discount applies to all instruments if a restriction is not included. Use of this field requires an agreement with Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/fees-discounts.html"
  },{
    "title": "Financing Consumer",
    "text": "Financing Consumer A FinancingConsumer payment is an invoice. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 POST /psp/invoice/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"FinancingConsumer\", \"intent\": \"&lt;intent&gt;\", \"currency\": \"NOK\", \"prices\": [ { \"type\": \"Invoice\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"generateRecurrenceToken\": \"false\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"PR123\", \"payeeName\": \"Merchant1\", \"productCategory\": \"PC1234\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"invoice\": { \"invoiceType\": \"PayExFinancingNo\" } } API requests The options you can choose from when creating a payment with key operation set to value FinancingConsumer are listed below. Options Before Posting A Payment   Norway Finland Sweden operation FinancingConsumer FinancingConsumer FinancingConsumer currency NOK EUR SEK invoiceType PayExFinancingNO PayExFinancingFI PayExFinancingSE An invoice payment is always two-phased based -  you create an Authorize transaction that is followed by a Capture or Cancel request.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/financing-consumer.html"
  },{
    "title": "Frictionless Payments",
    "text": "Frictionless Payments When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. 3-D Secure 2 is an improved version of the old protocol, now allowing frictionless payments where transactions can be completed without input from the cardholder. To increase the chances of this, there are certain fields that should be included in your request. The more information you add, the better. Payer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 { \"payer\": { \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"workPhoneNumber\" : \"+4787654321\", \"homePhoneNumber\" : \"+4776543210\", \"shippingAddress\": { \"addressee\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, } Field Type Description payer object The payer object. email string Payer’s registered email address. msisdn string Payer’s registered mobile phone number. homePhoneNumber string Payer’s registered home phone number. workPhoneNumber string Payer’s registered work phone number. shippingAddress object The shipping address object related to the payer. addressee string The name of the addressee – the receiver of the shipped goods. coAddress string Payer’ s c/o address, if applicable. streetAddress string Payer’s street address. Maximum 50 characters long. zipCode string Payer’s zip code. city string Payer’s city of residence. countryCode string Country Code for the country of residence. Risk Indicator 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\" \"pickUpAddress\" : { \"name\": \"Company Megashop Sarpsborg\", \"streetAddress\": \"Hundskinnveien 92\", \"coAddress\": \"\", \"city\": \"Sarpsborg\", \"zipCode\": \"1711\", \"countryCode\": \"NO\" } } } Field Type Description riskIndicator object This object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for a 3-D Secure authentication of the payer when they are authenticating the purchase. deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping). preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD. preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability). shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in the riskIndicator.pickUpAddress and payer.shippingAddress fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service). giftCardPurchase bool true if this is a purchase of a gift card. reOrderPurchaseIndicator string Indicates if the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered). pickUpAddress object If the shipIndicator is set to 04, you can prefill these fields with the payer’s pickUpAddress of the purchase to decrease the risk factor of the purchase. name string If the shipIndicator is set to 04, prefill this with the payer’s name. streetAddress string If the shipIndicator is set to 04, prefill this with the payer’s streetAddress. Maximum 50 characters long. coAddress string If the shipIndicator is set to 04, prefill this with the payer’s coAddress. city string If the shipIndicator is set to 04, prefill this with the payer’s city. zipCode string If the shipIndicator is set to 04, prefill this with the payer’s zipCode. countryCode string If the shipIndicator is set to 04, prefill this with the payer’s countryCode.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/frictionless-payments.html"
  },{
    "title": "Frictionless Payments",
    "text": "Frictionless Payments When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. 3-D Secure 2 is an improved version of the old protocol, now allowing frictionless payments where transactions can be completed without input from the cardholder. To increase the chances of this, there are certain fields that should be included in your request. The more information you add, the better. Payer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 { \"payer\": { \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"workPhoneNumber\" : \"+4787654321\", \"homePhoneNumber\" : \"+4776543210\", \"shippingAddress\": { \"addressee\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, } Field Type Description payer object The payer object. email string Payer’s registered email address. msisdn string Payer’s registered mobile phone number. homePhoneNumber string Payer’s registered home phone number. workPhoneNumber string Payer’s registered work phone number. shippingAddress object The shipping address object related to the payer. addressee string The name of the addressee – the receiver of the shipped goods. coAddress string Payer’ s c/o address, if applicable. streetAddress string Payer’s street address. Maximum 50 characters long. zipCode string Payer’s zip code. city string Payer’s city of residence. countryCode string Country Code for the country of residence. Risk Indicator 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\" \"pickUpAddress\" : { \"name\": \"Company Megashop Sarpsborg\", \"streetAddress\": \"Hundskinnveien 92\", \"coAddress\": \"\", \"city\": \"Sarpsborg\", \"zipCode\": \"1711\", \"countryCode\": \"NO\" } } } Field Type Description riskIndicator object This object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for a 3-D Secure authentication of the payer when they are authenticating the purchase. deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping). preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD. preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability). shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in the riskIndicator.pickUpAddress and payer.shippingAddress fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service). giftCardPurchase bool true if this is a purchase of a gift card. reOrderPurchaseIndicator string Indicates if the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered). pickUpAddress object If the shipIndicator is set to 04, you can prefill these fields with the payer’s pickUpAddress of the purchase to decrease the risk factor of the purchase. name string If the shipIndicator is set to 04, prefill this with the payer’s name. streetAddress string If the shipIndicator is set to 04, prefill this with the payer’s streetAddress. Maximum 50 characters long. coAddress string If the shipIndicator is set to 04, prefill this with the payer’s coAddress. city string If the shipIndicator is set to 04, prefill this with the payer’s city. zipCode string If the shipIndicator is set to 04, prefill this with the payer’s zipCode. countryCode string If the shipIndicator is set to 04, prefill this with the payer’s countryCode.",
    "tags": "",
    "url": "/checkout-v3/features/core/frictionless-payments.html"
  },{
    "title": "Frictionless Payments",
    "text": "Frictionless Payments When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. 3-D Secure 2 is an improved version of the old protocol, now allowing frictionless payments where transactions can be completed without input from the cardholder. To increase the chances of this, there are certain fields that should be included in your request. The more information you add, the better. Cardholder 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 { \"cardholder\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"homePhoneNumber\": \"+4787654321\", \"workPhoneNumber\": \"+4776543210\", \"shippingAddress\": { \"addressee\": \"Olivia Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\", }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, } Field Type Description   cardholder object Cardholder object that can hold information about a payer (private or company). The information added increases the chance for a frictionless 3-D Secure 2 flow.   firstname string Cardholder’s first name.   lastname string Cardholder’s last name.   email string Cardholder’s registered email address.   msisdn string Cardholder’s registered mobile phone number.   homePhoneNumber string Cardholder’s registered home phone number.   workPhoneNumber string Cardholder’s registered work phone number.   shippingAddress object The shipping address object related to the cardholder.   addressee string The name of the addressee – the receiver of the shipped goods.   coAddress string Cardholder’s c/o address, if applicable.   streetAddress string Cardholder’s street address. Maximum 50 characters long.   zipCode string Cardholder’s zip code.   city string Cardholder’s city of residence.   countryCode string Country Code for the country of residence.     billingAddress object The billing address object containing information about the payer’s billing address.   firstName string The first name of the payer.   lastName string The last name of the payer. ︎ streetAddress string The street address of the payer. Maximum 50 characters long.   coAddress string The CO-address (if used)   zipCode string The postal number (ZIP code) of the payer.   city string The city of the payer.   countryCode string SE, NO, or FI.   accountInfo object Object related to the payer containing info about the payer’s account.   accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)   accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)   shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)   suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed) Risk Indicator 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\" \"pickUpAddress\" : { \"name\": \"Company Megashop Sarpsborg\", \"streetAddress\": \"Hundskinnveien 92\", \"coAddress\": \"\", \"city\": \"Sarpsborg\", \"zipCode\": \"1711\", \"countryCode\": \"NO\" } } } Field Type Description riskIndicator object This object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for a 3-D Secure authentication of the payer when they are authenticating the purchase. deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping). preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD. preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability). shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in the riskIndicator.pickUpAddress and payer.shippingAddress fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service). giftCardPurchase bool true if this is a purchase of a gift card. reOrderPurchaseIndicator string Indicates if the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered). pickUpAddress object If the shipIndicator is set to 04, you can prefill these fields with the payer’s pickUpAddress of the purchase to decrease the risk factor of the purchase. name string If the shipIndicator is set to 04, prefill this with the payer’s name. streetAddress string If the shipIndicator is set to 04, prefill this with the payer’s streetAddress. Maximum 50 characters long. coAddress string If the shipIndicator is set to 04, prefill this with the payer’s coAddress. city string If the shipIndicator is set to 04, prefill this with the payer’s city. zipCode string If the shipIndicator is set to 04, prefill this with the payer’s zipCode. countryCode string If the shipIndicator is set to 04, prefill this with the payer’s countryCode.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/frictionless-payments.html"
  },{
    "title": "Frictionless Payments",
    "text": "Frictionless Payments When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. 3-D Secure 2 is an improved version of the old protocol, now allowing frictionless payments where transactions can be completed without input from the cardholder. To increase the chances of this, there are certain fields that should be included in your request. The more information you add, the better. Payer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 { \"payer\": { \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"workPhoneNumber\" : \"+4787654321\", \"homePhoneNumber\" : \"+4776543210\", \"shippingAddress\": { \"addressee\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, } Field Type Description payer object The payer object. email string Payer’s registered email address. msisdn string Payer’s registered mobile phone number. homePhoneNumber string Payer’s registered home phone number. workPhoneNumber string Payer’s registered work phone number. shippingAddress object The shipping address object related to the payer. addressee string The name of the addressee – the receiver of the shipped goods. coAddress string Payer’ s c/o address, if applicable. streetAddress string Payer’s street address. Maximum 50 characters long. zipCode string Payer’s zip code. city string Payer’s city of residence. countryCode string Country Code for the country of residence. Risk Indicator 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\" \"pickUpAddress\" : { \"name\": \"Company Megashop Sarpsborg\", \"streetAddress\": \"Hundskinnveien 92\", \"coAddress\": \"\", \"city\": \"Sarpsborg\", \"zipCode\": \"1711\", \"countryCode\": \"NO\" } } } Field Type Description riskIndicator object This object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for a 3-D Secure authentication of the payer when they are authenticating the purchase. deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping). preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD. preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability). shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in the riskIndicator.pickUpAddress and payer.shippingAddress fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service). giftCardPurchase bool true if this is a purchase of a gift card. reOrderPurchaseIndicator string Indicates if the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered). pickUpAddress object If the shipIndicator is set to 04, you can prefill these fields with the payer’s pickUpAddress of the purchase to decrease the risk factor of the purchase. name string If the shipIndicator is set to 04, prefill this with the payer’s name. streetAddress string If the shipIndicator is set to 04, prefill this with the payer’s streetAddress. Maximum 50 characters long. coAddress string If the shipIndicator is set to 04, prefill this with the payer’s coAddress. city string If the shipIndicator is set to 04, prefill this with the payer’s city. zipCode string If the shipIndicator is set to 04, prefill this with the payer’s zipCode. countryCode string If the shipIndicator is set to 04, prefill this with the payer’s countryCode.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/frictionless-payments.html"
  },{
    "title": "Frictionless Payments",
    "text": "Frictionless Payments When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. 3-D Secure 2 is an improved version of the old protocol, now allowing frictionless payments where transactions can be completed without input from the cardholder. To increase the chances of this, there are certain fields that should be included in your request. The more information you add, the better. Payer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 { \"payer\": { \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"workPhoneNumber\" : \"+4787654321\", \"homePhoneNumber\" : \"+4776543210\", \"shippingAddress\": { \"addressee\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, } Field Type Description payer object The payer object. email string Payer’s registered email address. msisdn string Payer’s registered mobile phone number. homePhoneNumber string Payer’s registered home phone number. workPhoneNumber string Payer’s registered work phone number. shippingAddress object The shipping address object related to the payer. addressee string The name of the addressee – the receiver of the shipped goods. coAddress string Payer’ s c/o address, if applicable. streetAddress string Payer’s street address. Maximum 50 characters long. zipCode string Payer’s zip code. city string Payer’s city of residence. countryCode string Country Code for the country of residence. Risk Indicator 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\" \"pickUpAddress\" : { \"name\": \"Company Megashop Sarpsborg\", \"streetAddress\": \"Hundskinnveien 92\", \"coAddress\": \"\", \"city\": \"Sarpsborg\", \"zipCode\": \"1711\", \"countryCode\": \"NO\" } } } Field Type Description riskIndicator object This object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for a 3-D Secure authentication of the payer when they are authenticating the purchase. deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping). preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD. preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability). shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in the riskIndicator.pickUpAddress and payer.shippingAddress fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service). giftCardPurchase bool true if this is a purchase of a gift card. reOrderPurchaseIndicator string Indicates if the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered). pickUpAddress object If the shipIndicator is set to 04, you can prefill these fields with the payer’s pickUpAddress of the purchase to decrease the risk factor of the purchase. name string If the shipIndicator is set to 04, prefill this with the payer’s name. streetAddress string If the shipIndicator is set to 04, prefill this with the payer’s streetAddress. Maximum 50 characters long. coAddress string If the shipIndicator is set to 04, prefill this with the payer’s coAddress. city string If the shipIndicator is set to 04, prefill this with the payer’s city. zipCode string If the shipIndicator is set to 04, prefill this with the payer’s zipCode. countryCode string If the shipIndicator is set to 04, prefill this with the payer’s countryCode.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/frictionless-payments.html"
  },{
    "title": "Fundamental Principles",
    "text": "Foundation The Swedbank Pay API Platform is built using the REST architectural style and the request and responses come in the JSON format. The API has predictable, resource-oriented URLs and use default HTTP features, like HTTP authentication (using OAuth 2), HTTP methods and headers. These techniques are widely used and understood by most HTTP client libraries. Connection and Protocol All requests towards Swedbank Pay API Platform are made with HTTP/1.1 over a secure TLS 1.2 (or higher) connection. Older HTTP clients running on older operating systems and frameworks might receive connection errors when connecting to Swedbank Pay’s APIs. This is most likely due to the connection being made from the client with TLS 1.0 or even SSL, which are all insecure and deprecated. If such is the case, ensure that you are able to connect over a TLS 1.2 connection by reading information regarding your programming languages and environments (Java, PHP Curl, PHP Zend, Ruby, Python, Node.js Request). You can inspect Swedbank Pay’s TLS and cipher suite support at SSL Labs. Support for HTTP/2 in our APIs is being investigated. Postel’s Robustness Principle We encourage you to keep Postel’s robustness principle in mind. Build your integration in a way that is resilient to change, wherever it may come. Don’t confine yourself to the limits of our current documentation examples. A string looking like a guid must still be handled and stored like a string, not as a guid, as it could be a URL in the future. The day our transactionNumber ticks past 1,000,000, make sure your integration can handle number 1,000,001. If some fields, operations or headers can’t be understood, you must be able to ignore them. We have built our requests in a way which allows the payeeInfo field to be placed before metadata, or vice versa if you want. We don’t expect a specific order of elements, so we ask that you shouldn’t either. Headers All requests against the API Platform should have a few common headers: HTTP request 1 2 3 4 5 6 7 POST /some/resource HTTP/1.1 Content-Type: application/json; charset=utf-8 Authorization: \"Bearer 123456781234123412341234567890AB\" User-Agent: swedbankpay-sdk-dotnet/3.0.1 Accept: application/problem+json; q=1.0, application/json; q=0.9 Session-Id: 779da454399742248f2942bb064c4707 Forwarded: for=82.115.151.177; host=example.com; proto=https Required Header Description check︎ Content-Type The content type of the body of the HTTP request. Usually set to application/json. check︎ Authorization The OAuth 2 Access Token is generated in the Merchant Portal.   User-Agent The user agent of the HTTP client making the HTTP request. Should be set to identify the system performing requests towards Swedbank Pay. The value submitted here will be returned in the response field initiatingSystemUserAgent. check︎ Accept The content type accepted by the client. Usually set to application/json and application/problem+json so both regular responses as well as errors can be received properly.   Session-Id A trace identifier used to trace calls through the API Platform (ref RFC 7329). Each request must mint a new GUID/UUID. If no Session-Id is provided, Swedbank Pay will generate one for the request.   Forwarded The IP address of the payer as well as the host and protocol of the payer-facing web page. When the header is present, only the for parameter containing the payer’s IP address is required, the other parameters are optional. See RFC 7239 for details. URL Usage The base URLs of the API Platform are: Environment Base URL Test https://api.externalintegration.payex.com/ Production https://api.payex.com/ An important part of REST is its use of hypermedia. Instead of having to perform complex state management and hard coding URLs and the availability of different operations in the client, this task is moved to the server. The client simply follows links and performs operations provided by the API, given the current state of the resource. The server controls the state and lets the client know through hypermedia what’s possible in the current state of the resource. To get an introduction to hypermedia, please watch this 20 minute video. warning Don’t build URLs: It is very important that only the base URLs of Swedbank Pay’s APIs are stored in your system. All other URLs are returned dynamically in the response. Swedbank Pay cannot guarantee that your implementation will remain working if you store any other URLs in your system. When performing requests, please make sure to use the complete URLs that are returned in the response. Do not attempt to parse or build upon the returned data – you should not put any special significance to the information you might glean from an URL. URLs should be treated as opaque identifiers you can use to retrieve the identified resource – nothing more, nothing less. If you don’t follow this advice, your integration most assuredly will break when Swedbank Pay makes updates in the future. Storing URLs link Storing URLs: In general, URLs should be discovered in responses to previous requests, not stored. However, URLs that are used to create new resources can be stored or hard coded. Also, the URL of the generated resource can be stored on your end to GET it at a later point. Note that the URLs should be stored as opaque identifiers and should not be parsed or interpreted in any way. warning Operation URLs: URLs that are returned as part of the operations in each response should not be stored. See the abbreviated example below where psp/creditcard/payments from the POST header is an example of the URL that can be stored, as it is used to create a new resource. Also, the /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 URL can be stored in order to retrieve the created payment with an HTTP GET request later. The URLs found within operations such as the href of update-payment-abort, https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1 should not be stored. In order to find which operations you can perform on a resource and the URL of the operation to perform, you need to retrieve the resource with an HTTP GET request first and then find the operation in question within the operations field. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 POST /psp/creditcard/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"generatePaymentToken\": false, \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", } } Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"CreditCard\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", }, \"operations\": [ { \"rel\": \"update-payment-abort\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"rel\": \"redirect-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"text/html\" }, { \"rel\": \"view-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } Uniform Responses When a POST or PATCH request is performed, the whole target resource representation is returned in the response, as when performing a GET request on the resource URL. This is an economic approach that limits the number of necessary GET requests. Expansion The payment resource contain the ID of related sub-resources in its response properties. These sub-resources can be expanded inline by using the request parameter expand. This is an effective way to limit the number of necessary calls to the API, as you return several properties related to a Payment resource in a single request. Note that the expand parameter is available to all API requests but only applies to the request response. This means that you can use the expand parameter on a POST or PATCHrequest to get a response containing the target resource including expanded properties. This example below add the urls and authorizations field inlines to the response, enabling you to access information from these sub-resources. HTTP request with expansion 1 2 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1?$expand=urls,authorizations HTTP/1.1 Host: api.externalintegration.payex.com To avoid unnecessary overhead, you should only expand the fields you need info about. Data Types Some datatypes, like currency, dates and amounts, are managed in a coherent manner across the entire API Platform. Currency All currencies are expressed according to the ISO 4217 standard, e.g SEK, EUR, NOK. Dates All dates are expressed according to the ISO 8601 standard that combine dates, time and timezone data into a string, e.g. 2018-09-14T13:21:57.6627579Z. Locale When defining locale, we use the combination of language and country codes, e.g. nb-NO, sv-SE, en-US. Monetary Amounts All monetary amounts are entered in the lowest momentary units of the selected currency. The amount of SEK and NOK are in ören/ører, and EUR is in cents. Another way to put it is that the code amount is expressed as if the true amount is multiplied by 100. True amount Code amount NOK 100.00 10000 SEK 50.00 5000 € 10.00 1000",
    "tags": "",
    "url": "/checkout-v3/resources/fundamental-principles.html"
  },{
    "title": "GetPaymentIntrumentAsync",
    "text": "Use GetPaymentInstrumentAsync to read a card before the amount is known. The call starts a payment transaction, and the card read will be held by the terminal until PaymentAsync or RefundAsync is called. When you have the response, a new card may be read. The last payment card read is the one that gets charged. Returns 1 2 3 4 5 6 7 8 9 10 11 public class GetPaymentInstrumentResult { public NexoResponseResult Result { get; set; } public string ErrorCondition { get; set; } public string Text { get; set; } public CardTypes Type { get; set; } public string Brand { get; set; } public string PAN { get; set; } public string CNA { get; set; } } Example of usage CardTypes 1 public enum CardTypes { Payment=1, Combined=2,Loyalty=3,Unspecified=4 }; Example nexo response The actual Nexo message response looks as follows. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 &lt;SaleToPOIResponse&gt; &lt;MessageHeader MessageClass=\"Service\" MessageCategory=\"CardAcquisition\" MessageType=\"Response\" ServiceID=\"2010\" SaleID=\"2\" POIID=\"A-TEST-POIID\"/&gt; &lt;CardAcquisitionResponse&gt; &lt;Response Result=\"Success\"/&gt; &lt;SaleData&gt; &lt;SaleTransactionID TransactionID=\"28151231\" TimeStamp=\"2023-03-20T09:01:56+01:00\"/&gt; &lt;/SaleData&gt; &lt;POIData&gt; &lt;POITransactionID TransactionID=\"024195\" TimeStamp=\"2023-03-20T08:01:56.357Z\"/&gt; &lt;/POIData&gt; &lt;PaymentInstrumentData PaymentInstrumentType=\"Card\"&gt; &lt;CardData PaymentBrand=\"01,Visa\" MaskedPAN=\"453903******8373\" EntryMode=\"Contactless\"&gt; &lt;AllowedProduct ProductCode=\"1\"&gt; &lt;ProductLabel&gt;card:cashback&lt;/ProductLabel&gt; &lt;AdditionalProductInfo&gt;maxAmount:100000&lt;/AdditionalProductInfo&gt; &lt;/AllowedProduct&gt; &lt;PaymentToken TokenRequestedType=\"Customer\" TokenValue=\"E2648A1822580C93B79BDE7B22A134E85415F94DD6AF2325E1735E0722FDCB3BF8EA20\"/&gt; &lt;/CardData&gt; &lt;/PaymentInstrumentData&gt; &lt;/CardAcquisitionResponse&gt; &lt;/SaleToPOIResponse&gt;",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/getpaymentinstrumentasync.html"
  },{
    "title": "Good Commit Practice",
    "text": "The following document is a fork of OpenStack’s Git Commit Good Practice, rewritten to suit Swedbank Pay needs. It is based on experience doing code development, bug troubleshooting and code review across a number of projects using Git. Examination of other open source projects suggested they all follow a fairly common practice. It is motivated by a desire to improve the quality of the Git history in any repository. Quality is a hard term to define in computing; one person’s “Thing of Beauty” is another’s “Evil Hack”. We can, however, come up with some general guidelines for what to do, or conversely what not to do, when publishing Git commits for merge with a project. This topic can be split into two areas of concern: The structured set/split of the code changes The information provided in the commit message Executive Summary The points and examples that will be raised in this document ought to clearly demonstrate the value in splitting up changes into a sequence of individual commits, and the importance in writing good commit messages to go along with them. If these guidelines were widely applied it would result in a significant improvement in the quality of the Git history. Both a carrot and a stick will be required to effect changes. This document intends to be the carrot by alerting people to the benefits, while for anyone doing code reviews, it can act as the stick. In other words, when reviewing a change, do not simply look at the correctness of the code. Review the commit message itself and request improvements to its content. Look out for commits which are mixing multiple logical changes and require the submitter to split them into separate commits. Ensure space changes are not mixed in with functional changes. Ensure no-op code refactoring is done separately from functional changes. And so on. Software source code is “read mostly, write occasionally” and thus the most important criteria is to improve the long term maintainability by the large pool of developers in the community, and not to sacrifice too much for the sake of the single author who may never touch the code again. And now the long detailed guidelines and examples of good and bad practice. Structural split of changes The cardinal rule for creating good commits is to ensure there is only one “logical change” per commit. There are many reasons why this is an important rule: The smaller the amount of code being changed, the quicker and easier it is to review and identify potential flaws. If a change is found to be flawed later, it may be necessary to revert the broken commit. This is much easier to do if there are not other unrelated code changes entangled with the original commit. When troubleshooting problems using Git’s bisect capability, small well defined changes will aid in isolating exactly where the code problem was introduced. When browsing history using Git annotate/blame, small well defined changes also aid in isolating exactly where &amp; why a piece of code came from. Things to avoid when creating commits With that in mind, there are some commonly encountered examples of bad things to avoid: Mixing formatting changes with functional code changes The formatting (code style, space, etc.) changes will obscure the important functional changes, making it harder for a reviewer to correctly determine whether the change is correct. Solution: Create 2 commits, one with the formatting changes and one with the functional changes. Typically the formatting change would be done first, but that need not be a hard rule. Mixing two unrelated functional changes Again the reviewer will find it harder to identify flaws if two unrelated changes are mixed together. If it becomes necessary to later revert a broken commit, the two unrelated changes will need to be untangled, with further risk of bug creation. Sending large new features in a single giant commit It may well be the case that the code for a new feature is only useful when all of it is present. This does not, however, imply that the entire feature should be provided in a single commit. To group related code changes that for the reasons explained here are split up into several separate commits, intuitively named branches should be used instead. New features often entail refactoring existing code. It is highly desirable that any refactoring is done in commits which are separate from those implementing the new feature. This helps reviewers and test suites validate that the refactoring has no unintentional functional changes. Even the newly written code can often be split up into multiple pieces that can be independently reviewed. For example, changes which add new internal APIs/classes, can be in self-contained commits. Again this leads to easier code review. It also allows other developers to cherry-pick small parts of the work, if the entire new feature is not immediately ready for merge. Addition of new public HTTP APIs or RPC interfaces should be done in commits separate from the actual internal implementation. This will encourage the author &amp; reviewers to think about the generic API/RPC design, and not simply pick a design that is easier for their currently chosen internal implementation. If patch impacts a public HTTP, use the APIImpact flag (see including external references). The basic rule to follow is: If a code change can be split into a sequence of patches/commits, then it should be split. Less is not more. More is more. Examples of bad practice Now for some illustrations from Nova history. NB, although commit hashes are quoted for reference, author names are removed, since no single person needs to be blamed/picked on. Almost everybody is guilty of violating these good practice rules at some time or another. In addition the people who reviewed and approved these commits are just as guilty as the person who wrote/submitted them. Example 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 commit ae878fc8b9761d099a4145617e4a48cbeb390623 Author: [removed] Date: Fri Jun 1 01:44:02 2012 +0000 Refactor libvirt create calls * minimizes duplicated code for create * makes wait_for_destroy happen on shutdown instead of undefine * allows for destruction of an instance while leaving the domain * uses reset for hard reboot instead of create/destroy * makes resume_host_state use new methods instead of hard_reboot * makes rescue/unrescue not use hard reboot to recreate domain Change-Id: I2072f93ad6c889d534b04009671147af653048e7 There are at least two independent changes made in this commit. The switch to use the new reset API for the hard_reboot method. The adjustment to internal driver methods to not use hard_reboot. What is the problem with this? First there is no compelling reason why these changes needed to be made at the same time. A first commit could have included the changes to stop calling hard_reboot in various places. A second commit could have re-written the hard_reboot impl. Second, as the switch to using the libvirt ##reset## method was buried in the large code refactoring, reviewers missed the fact that this was introducing a dependency on a newer libvirt API version. This commit was identified as the culprit reasonably quickly, but a trivial revert is not possible, due to the wide variety of unrelated changes included. Example 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 commit e0540dfed1c1276106105aea8d5765356961ef3d Author: [removed] Date: Wed May 16 15:17:53 2012 +0400 blueprint lvm-disk-images Add ability to use LVM volumes for VM disks. Implements LVM disks support for libvirt driver. VM disks will be stored on LVM volumes in volume group specified by `libvirt_images_volume_group` option. Another option `libvirt_local_images_type` specify which storage type will be used. Supported values are `raw`, `lvm`, `qcow2`, `default`. If `libvirt_local_images_type` = `default`, usual logic with `use_cow_images` flag is used. Boolean option `libvirt_sparse_logical_volumes` controls which type of logical volumes will be created (sparsed with virtualsize or usual logical volumes with full space allocation). Default value for this option is `False`. Commit introduce three classes: `Raw`, `Qcow2` and `Lvm`. They contain image creation logic, that was stored in `LibvirtConnection._cache_image` and `libvirt_info` methods, that produce right `LibvirtGuestConfigDisk` configurations for libvirt. `Backend` class choose which image type to use. Change-Id: I0d01cb7d2fd67de2565b8d45d34f7846ad4112c2 This is introducing one major new feature, so on the surface it seems reasonable to use a single commit, but looking at the patch, it clearly has entangled a significant amount of code refactoring with the new LVM feature code. This makes it hard to identify likely regressions in support for QCow2/Raw images. This should have been split into at least four separate commits: Replace the use_cow_images config FLAG with the new FLAG libvirt_local_images_type, with back-compat code for support of legacy use_cow_images FLAG 2. Creation of internal “Image” class and subclasses for Raw &amp; QCow2 image type impls. Refactor libvirt driver to replace raw/qcow2 image management code, with calls to the new Image class APIs. Introduce the new “LVM” Image class implementation. Examples of good practice Example 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 commit 3114a97ba188895daff4a3d337b2c73855d4632d Author: [removed] Date: Mon Jun 11 17:16:10 2012 +0100 Update default policies for KVM guest PIT &amp; RTC timers commit 573ada525b8a7384398a8d7d5f094f343555df56 Author: [removed] Date: Tue May 1 17:09:32 2012 +0100 Add support for configuring libvirt VM clock and timers ```http Together these two changes provide support for configuring the KVM guest timers. The introduction of the new APIs for creating libvirt XML configuration have been clearly separated from the change to the KVM guest creation policy, which uses the new APIs. {:.code-view-header} **Example 2** ```http commit 62bea64940cf629829e2945255cc34903f310115 Author: [removed] Date: Fri Jun 1 14:49:42 2012 -0400 Add a comment to rpc.queue_get_for(). Change-Id: Ifa7d648e9b33ad2416236dc6966527c257baaf88 commit cf2b87347cd801112f89552a78efabb92a63bac6 Author: [removed] Date: Wed May 30 14:57:03 2012 -0400 Add shared_storage_test methods to compute rpcapi. ...snip... Add get_instance_disk_info to the compute rpcapi. ...snip... Add remove_volume_connection to the compute rpcapi. ...snip... Add compare_cpu to the compute rpcapi. ...snip... Add get_console_topic() to the compute rpcapi. ...snip... Add refresh_provider_fw_rules() to compute rpcapi. ...many more commits... This sequence of commits refactored the entire RPC API layer inside nova to allow pluggable messaging implementations. With such a major change in a core piece of functionality, splitting up the work into a large sequence of commits was key to be able to do meaningful code review, and track / identify possible regressions at each step of the process. Information in commit messages As important as the content of the change, is the content of the commit message describing it. When writing a commit message there are some important things to remember: Do not assume the reviewer understands what the original problem was When reading bug reports, after a number of back &amp; forth comments, it is often as clear as mud, what the root cause problem is. The commit message should have a clear statement as to what the original problem is. The bug is merely interesting historical background on how the problem was identified. It should be possible to review a proposed patch for correctness without needing to read the bug ticket. Do not assume the reviewer has access to external web services/site In 6 months time when someone is on a train/plane/coach/beach/pub troubleshooting a problem &amp; browsing Git history, there is no guarantee they will have access to the online bug tracker, or online blueprint documents. The great step forward with distributed SCM is that you no longer need to be “online” to have access to all information about the code repository. The commit message should be totally self-contained, to maintain that benefit. Do not assume the code is self-evident/self-documenting What is self-evident to one person, might be clear as mud to another person. Always document what the original problem was and how it is being fixed, for any change except the most obvious typos, or space only commits. Describe why a change is being made A common mistake is to just document how the code has been written, without describing why the developer chose to do it that way. By all means describe the overall code structure, particularly for large changes, but more importantly describe the intent/motivation behind the changes. Read the commit message to see if it hints at improved code structure Often when describing a large commit message, it becomes obvious that a commit should have in fact been split into 2 or more parts. Don’t be afraid to go back and rebase the change to split it up into separate commits. Ensure sufficient information to decide whether to review When Gerrit sends out email alerts for new patch submissions there is minimal information included, principally the commit message and the list of files changes. Given the high volume of patches, it is not reasonable to expect all reviewers to examine the patches in detail. The commit message must thus contain sufficient information to alert the potential reviewers to the fact that this is a patch they need to look at. The first commit line is the most important In Git commits the first line of the commit message has special significance. It is used as email subject line, git annotate messages, gitk viewer annotations, merge commit messages and many more places where space is at a premium. As well as summarizing the change itself, it should take care to detail what part of the code is affected. eg if it affects the libvirt driver, mention ‘libvirt’ somewhere in the first line. Describe any limitations of the current code If the code being changed still has future scope for improvements, or any known limitations then mention these in the commit message. This demonstrates to the reviewer that the broader picture has been considered and what tradeoffs have been done in terms of short term goals vs. long term wishes. Do not include patch set-specific comments In other words, if you rebase your change please don’t add “Patch set 2: rebased” to your commit message. That isn’t going to be relevant once your change has merged. Please do make a note of that in Gerrit as a comment on your change, however. It helps reviewers know what changed between patch sets. This also applies to comments such as “Added unit tests”, “Fixed localization problems”, or any other such patch set to patch set changes that don’t affect the overall intent of your commit. The main rule to follow is: The commit message must contain all the information required to fully understand &amp; review the patch for correctness. Less is not more. More is more. Including external references The commit message is primarily targeted towards human interpretation, but there is always some metadata provided for machine use. For source code hosted on GitHub, a reference to an issue can be made by simply writing #&lt;issue-number&gt;. All machine targeted metadata is of secondary consequence to humans and thus it should preferably be grouped together at the end of the commit message. For simple references like GitHub issues, this is not required. Note: Although it is common practice across many open source projects using Git to include a Signed-off-by tag (generated by ‘git commit -s’), this is not required. Prior to gaining the ability to submit code, it should rather be required that all contributors sign a CLA, which serves an equivalent purpose. We encourage the use of Co-Authored-By: name &lt;name@example.com&gt; in commit messages to indicate people who worked on a particular patch. It’s a convention for recognizing multiple authors, and our projects would encourage the stats tools to observe it when collecting statistics. Summary of Git commit message structure Provide a brief description of the change in the first line. Insert a single blank line after the first line. Provide a detailed description of the change in the following lines, breaking paragraphs where needed. The first line should be limited to 50 characters and should not end with a period. Subsequent lines should be wrapped at 72 characters. vim (the default $EDITOR on most distros) can wrap automatically lines for you. In most cases you just need to copy the example vimrc file (which can be found somewhere like /usr/share/vim/vim74/vimrc_example.vim) to /.vimrc if you don’t have one already. After editing a paragraph, you can re-wrap it by pressing escape, ensuring the cursor is within the paragraph and typing gqip. Put external references at the very end of the commit message. For example: 1 2 3 4 5 6 7 8 9 10 11 12 Switch libvirt get_cpu_info method over to use config APIs The get_cpu_info method in the libvirt driver currently uses XPath queries to extract information from the capabilities XML document. Switch this over to use the new config class LibvirtConfigCaps. Also provide a test case to validate the data being returned. DocImpact Closes-Bug: #1003373 Implements: blueprint libvirt-xml-cpu-model Change-Id: I4946a16d27f712ae2adf8441ce78e6c0bb0bb657 Some examples of bad practice Now for some illustrations from Nova history, again with authors names removed since no one person is to blame for these. Example 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 commit 468e64d019f51d364afb30b0eed2ad09483e0b98 Author: [removed] Date: Mon Jun 18 16:07:37 2012 -0400 Fix missing import in compute/utils.py Fixes bug 1014829 Problem: this does not mention what imports where missing and why they were needed. This info was actually in the bug tracker, and should have been copied into the commit message, so that it would provide a self-contained description. e.g.: Add missing import of 'exception' in compute/utils.py nova/compute/utils.py makes a reference to exception.NotFound, however exception has not been imported. Example 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 commit 2020fba6731634319a0d541168fbf45138825357 Author: [removed] Date: Fri Jun 15 11:12:45 2012 -0600 Present correct ec2id format for volumes and snaps Fixes bug 1013765 * Add template argument to ec2utils.id_to_ec2_id() calls Change-Id: I5e574f8e60d091ef8862ad814e2c8ab993daa366 Problem: this does not mention what the current (broken) format is, nor what the new fixed format is. Again this info was available in the bug tracker and should have been included in the commit message. Furthermore, this bug was fixing a regression caused by an earlier change, but there is no mention of what the earlier change was. e.g.: Present correct ec2id format for volumes and snaps During the volume uuid migration, done by changeset XXXXXXX, ec2 id formats for volumes and snapshots was dropped and is now using the default instance format (i-xxxxx). These need to be changed back to vol-xxx and snap-xxxx. Adds a template argument to ec2utils.id_to_ec2_id() calls Fixes bug 1013765 Example 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 commit f28731c1941e57b776b519783b0337e52e1484ab Author: [removed] Date: Wed Jun 13 10:11:04 2012 -0400 Add libvirt min version check. Fixes LP Bug #1012689. Change-Id: I91c0b7c41804b2b25026cbe672b9210c305dc29b Problem: This commit message is merely documenting what was done, and not why it was done. It should have mentioned what earlier changeset introduced the new min libvirt version. It should also have mentioned what behavior is when the check fails. e.g.: Add libvirt version check, min 0.9.7 The commit XXXXXXXX introduced use of the 'reset' API which is only available in libvirt 0.9.7 or newer. Add a check performed at startup of the compute server against the libvirt connection version. If the version check fails the compute service will shutdown. Fixes LP Bug #1012689. Change-Id: I91c0b7c41804b2b25026cbe672b9210c305dc29b Examples of good practice Example 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 commit 3114a97ba188895daff4a3d337b2c73855d4632d Author: [removed] Date: Mon Jun 11 17:16:10 2012 +0100 Update default policies for KVM guest PIT &amp; RTC timers The default policies for the KVM guest PIT and RTC timers are not very good at maintaining reliable time in guest operating systems. In particular Windows 7 guests will often crash with the default KVM timer policies, and old Linux guests will have very bad time drift Set the PIT such that missed ticks are injected at the normal rate, ie they are delayed Set the RTC such that missed ticks are injected at a higher rate to \"catch up\" This corresponds to the following libvirt XML &lt;clock offset='utc'&gt; &lt;timer name='pit' tickpolicy='delay'/&gt; &lt;timer name='rtc' tickpolicy='catchup'/&gt; &lt;/clock&gt; And the following KVM options -no-kvm-pit-reinjection -rtc base=utc,driftfix=slew This should provide a default configuration that works acceptably for most OS types. In the future this will likely need to be made configurable per-guest OS type. Closes-Bug: #1011848 Change-Id: Iafb0e2192b5f3c05b6395ffdfa14f86a98ce3d1f Some things to note about this example commit message It describes what the original problem is (bad KVM defaults) It describes the functional change being made (the new PIT/RTC policies) It describes what the result of the change is (new the XML/QEMU args) It describes scope for future improvement (the possible per-OS type config) It uses the Closes-Bug notation Example 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 commit 31336b35b4604f70150d0073d77dbf63b9bf7598 Author: [removed] Date: Wed Jun 6 22:45:25 2012 -0400 Add CPU arch filter scheduler support In a mixed environment of running different CPU architecutres, one would not want to run an ARM instance on a X86_64 host and vice versa. This scheduler filter option will prevent instances running on a host that it is not intended for. The libvirt driver queries the guest capabilities of the host and stores the guest arches in the permitted_instances_types list in the cpu_info dict of the host. The Xen equivalent will be done later in another commit. The arch filter will compare the instance arch against the permitted_instances_types of a host and filter out invalid hosts. Also adds ARM as a valid arch to the filter. The ArchFilter is not turned on by default. Change-Id: I17bd103f00c25d6006a421252c9c8dcfd2d2c49b Some things to note about this example commit message It describes what the problem scenario is (mixed arch deployments) It describes the intent of the fix (make the schedular filter on arch) It describes the rough architecture of the fix (how libvirt returns arch) It notes the limitations of the fix (work needed on Xen)",
    "tags": "",
    "url": "/checkout-v3/resources/development-guidelines/good-commit-practice.html"
  },{
    "title": "Core Features",
    "text": "Core Features shopping_basket Payment Orders Initiating the payment order arrow_forward shopping_basket Purchase Payments Setting the purchase operation arrow_forward",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference phone_android Android Default UI Controlling the default UI arrow_forward vpn_key Android View Model Provider Key Communicating with the payment fragment arrow_forward video_camera_back Observing The Payment Process Helping your app react to different payment states arrow_forward report Problems Information when something goes wrong arrow_forward",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features bug_report Debugging Features Helping you investigate when a bug appears arrow_forward looks_one Instrument Mode The Payment Menu with one payment instrument arrow_forward event Payer Aware Payment Menu A payment menu tailored to the payer arrow_forward event Payer Tokens Using the SDK to create recur or unscheduled tokens for later use arrow_forward verified_user Verify Verify purchase using the SDK arrow_forward",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/"
  },{
    "title": "Introduction",
    "text": "The mobile libraries provide standard UI components (a Fragment on Android, a UIViewController on iOS) that you can integrate in your mobile application in the usual fashion. To work, these components need data from the Swedbank Pay APIs, which you must retrieve through your own servers. At the core, the libraries are agnostic as to how the communication between your app and your servers happens, but an implementation is provided for a server that implements what we call the Merchant Backend API. The Merchant Backend API is designed to transparently reflect the Swedbank Pay API, and the data types used to configure the mobile libraries allow you to organically discover the capabilities of the system. The SDK is designed to integrate the Swedbank Pay UI inside your application’s native UI. It generates any html pages required to show the Swedbank Pay UI internally; it does not support using a Checkout or Payments web page that you host yourself. If doing the latter fits your case better, you can show your web page in a Web View instead. In that case, you may benefit from the collection of information about showing Checkout or Payments in a Web View. Prerequisites To start integrating the Swedbank Pay Mobile SDK, you need the following: An HTTPS enabled web server. An agreement that includes Swedbank Pay Digital Payments, specifically Enterprise or Payments Only. Obtained credentials (merchant Access Token) from Swedbank Pay through the Merchant Portal. Please observe that the Swedbank Pay Digital Payments implementations currently available encompasses the paymentmenu scope. It is important to secure all communication between your app and your servers. If you wish to use the Merchant Backend API to communicate between your app and your server, an example implementation is provided for Node.js and for Java. Introduction As the Mobile SDK is built on top of Digital Payments. It is a good idea to familiarize yourself with it first, as the rest of this document will assume some familiarity with Checkout concepts. Note, however, that you need not build a working Digital Payments example with web technologies to use the Mobile SDK. The Mobile SDK currently provides a mobile component to show Digital Payments Enterprise or Payments Only in a mobile application. The integrating application must set a Configuration, which is responsible for making the necessary calls to your backend. A Configuration for a server implementing the Merchant Backend API is bundled with the SDK, but it is simple to implement a Configuration for your custom server. The Post-Purchase part is the same as when using Checkout on a web page, and is thus intentionally left out of the scope of the SDK. See below for a sequence diagram of a payment made using the Mobile SDK. This is a high-level diagram. More detailed views highlighting platform differences will follow for each step. Next: Configuration",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/"
  },{
    "title": "Introduction",
    "text": "Swedbank Pay offers APIs, SDKs, libraries, modules, extensions and plugins as different ways to integrate and use our products and services. It might not be obvious to everyone what these are, so to describe them we use the analogy of baking a cake. APIs APIs (Application Programming Interface) are the lowest level building block of our offering and can be compared to raw ingredients. They give you a whole lot of flexibility, but also requires you to have more knowledge in how to use them correctly and you need to know which recipe to cook in order to get a workable cake out in the other end. To efficiently use an API, you need to be a trained baker. SDKs SDKs (Software Development Kit), also known as libraries, can be compared to a cake mix. It requires less knowledge of the ingredients and how to use them and a recipe is provided for you. Because of this, you also have less flexibility because you can’t bake any cake, you can only bake the one the mix is for. You still have to mix everything together, so you need some experience in the kitchen is required, but less than using the “raw” API. Modules Modules, also known as extensions or plugins, can be compared to a readily baked cake purchased at a bakery. You don’t need any baking skills to have one, but you also have very little flexibility in what goes into the cake or how it tastes. Official Modules Modules, extensions and plugins are typically used as a way to extend webshop platforms such as WooCommerce and Magento with functionality that isn’t provided in the core platform. Such functionality may be to allow visitors of your website to pay with a payment provider such as Swedbank Pay. warning Unsupported: These modules are at an early stage of development and are not supported as of yet by Swedbank Pay. They are provided as a convenience to speed up your development, so please feel free to play around. However, if you need support, please wait for a future, stable release. Platform Module Repository Swedbank Pay Checkout for Episerver …episerver-checkout Swedbank Pay Checkout for WooCommerce …woocommerce-checkout Swedbank Pay Payments for WooCommerce …woocommerce-payments Official SDKs Software Development Kits allow developers to integrate with Swedbank Pay’s APIs without having to write a lot of low-level code dealing with HTTP, status codes, problem messages, parsing, serializaiton, etc. Developers can use their language of choice and write against a set of typed objects native to their programming language and environment. SDKs are often used as a building block to construct a Module. warning Unsupported: These SDKs are at an early stage of development and are not supported as of yet by Swedbank Pay. They are provided as a convenience to speed up your development, so please feel free to play around. However, if you need support, please wait for a future, stable release. Platform SDK Repository Swedbank Pay SDK for Android …sdk-android Swedbank Pay SDK for iOS …sdk-ios Swedbank Pay SDK for .NET …sdk-dotnet Swedbank Pay SDK for PHP …sdk-php Swedban k Pay SDK for JavaScript …sdk-js Official Libraries Software libraries are bundles of code often used by an SDK or in a Module to solve one or a set of specific problems. warning Unsupported: These libraries are at an early stage of development and are not supported as of yet by Swedbank Pay. They are provided as a convenience to speed up your development, so please feel free to play around. However, if you need support, please wait for a future, stable release. Platform Library Repository Swedbank Pay Core plugin for Magento 2 …magento2-core Swedbank Pay Core plugin for WooCommerce …woocommerce-core Swedbank Pay SDK Extensions for .NET …sdk-dotnet",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward 3d_rotation Frictionless Payments Authenticating the cardholder. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward compare_arrows Capture Capturing the authorized funds. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward cached Update Payment Order Updating the payment order arrow_forward",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference link CompleteUrl Where you go when the payment is completed. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward code Metadata Store payment associated data for later use. arrow_forward settings Operations Possible operations for a payment order. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward report Problems Information when something goes wrong. arrow_forward send_time_extension Resource Models GET responses for the payment order resources. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward rule Status Response Models Payment order responses with different payment statuses. arrow_forward public Urls The urls associated with the payment arrow_forward devices User Agent An introduction to user agents arrow_forward download_done Status The status of a payment order. arrow_forward",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features local_gas_station Automated Fuel Dispenser Payments Payments for automated fuel dispensers. arrow_forward lock Age Restrictions Restricting payments to an age limit arrow_forward document_scanner Cross Channel Payments A printable, scannable reference code for payment tracking. arrow_forward copyright Custom Logo How to add your own logo. arrow_forward delete_sweep Delete Token How to delete tokens. arrow_forward assignment_ind Enterprise PayerReference The Enterprise option when you don’t have a secure login or SSN. arrow_forward discount Fees And Discounts How to add fees and discounts to payment orders. arrow_forward looks_one Instrument Mode The Payment Menu with one payment instrument arrow_forward verified Enterprise The Checkin alternative. arrow_forward article Order Items Information about the order items arrow_forward euro_symbol Payout Paying out funds to the consumer’s account. arrow_forward lock Restricted To SSN Restricting payments to a specific Social Security Number (SSN) arrow_forward cached Recur Setting up subscriptions and recurring payments. arrow_forward local_shipping Request Delivery Information Request that payment instruments return delivery information. arrow_forward public Terms of Service URL Displaying the merchant’s terms of service. arrow_forward verified TRA Exemption Transaction Risk Analysis Exemption arrow_forward report_problem Unscheduled Purchase Setting up subscriptions and merchant initiated payments. arrow_forward verified_user Verify Validating the payer’s payment details. arrow_forward",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/"
  },{
    "title": "Set Up",
    "text": "Step 1: Sign Up For A Test Account A test account gives you access to our unified dashboard for managing your account across different platforms. We call this dashboard the Merchant Portal. Your test account request should be sent to: testaccount@swedbankpay.com in order to create an account for you, we need some specific information from your side: Company name: Your company name. The service you prefer: Full Checkout (Enterprise) or Payments Only (Payments). Email address: To a developer or the CTO. Organization number: Your organization number. Step 2: Wait For Response Within 8 working hours we will have created your account and sent you an email containing the following information: Merchant name: This represents your core business entity with us. Payee ID: This is how we identify you. Services: The payment options which are activated and ready for testing. Login credentials: You will receive a temporary password in a separate email. warning Please check your spam folder if you haven’t received this email. Step 3: Get Your Access Tokens To submit payments to us, you will be making API requests that are authenticated with an access token. How to generate your access token: Log in to: https://merchantportal.externalintegration.swedbankpay.com - For testing environment. Merchant details: Here you will find information about your account. An access token is necessary since it will be used together with Payee ID to validate transactions. The Payee ID will serve as the door and, your token is the key. Navigate to “Access Tokens” at the top of the page. Choose “Add” and name the token. We suggest you name it according to what environment it is created in. Your token will only be fully visible upon creation. For security purposes, we will mask it like this: 12a3**********bc4de56f when it is displayed later. If you need to keep track of it, please copy and save it externally in a safe place. The token will not be visible unmasked in any of our systems, so a lost token must be replaced by a new one. warning Please note that the production and staging environment need separate tokens. Back to Get Started Start Integration",
    "tags": "",
    "url": "/checkout-v3/enterprise/"
  },{
    "title": "Introduction",
    "text": "Swedbank Pay is committed to creating a vibrant community around its open source initiative on GitHub and will alongside its partners expose the Swedbank Pay Payment APIs in high quality client modules and libraries. The development of these modules and libraries should be as transparent and accessible to the public as possible. The consequence and meaning of this will be explained in the following chapters of this guideline. Having the source code, tests, documentation, issues and such all in one place makes the projects governing the modules and libraries easier to grasp and understand for new users. GitHub is the world’s most popular developer and source code hosting platform and offers everything we need in an easy to use package. It is therefore a great choice for hosting the source code for the open source modules and all of their related resources. Principles For an open source project to become successful, it should follow a few core principles: Transparency Being transparent is one of the most important virtues of an open source project. Being able to inspect the source code, read the documentation, view potentially reported bugs and understand the development process in an accessible and easy to understand way is critical to be able to assert the quality of the project. Being transparent also makes it apparent that we don’t have anything to hide, underlining our confidence in the quality of what we publish, which of course should be top notch. Quality An important factor to ensure the quality of any given piece of code is to test it. The test should preferably be automated and be run on every code check-in. The automation can be done through a language-native test framework like NUnit, JUnit or PHPUnit and then have a continuous integration system like Travis or TeamCity execute these tests every time code is pushed to the repository on GitHub. Code quality of course depends on a lot of other factors too, such as: Following best practice of the language and environment the code is being written in. Adhering to established style guides. Good understanding of The Principles of Object Oriented Design. A good domain architecture, modeled after Domain Driven Design. Accessibility The perhaps most important measure of success for an open source project is whether people outside of the project’s core development group contribute to it or not. The contributions can be everything from reported issues to correcting typographic errors in documentation to pull requests for minor or major code contributions. To be able to attract outside contributors, the project needs to be accessible. While accessibility is an abstract term, it can be broken down into smaller and more concrete parts that are easier to measure and understand. Is the development process for the project easy to understand? Where are outstanding features listed, who are the developers working on which features and where do they reside? How easy is it to fork the project and make a pull request that has a high chance of being merged? These are questions that should be asked and that can be answered confidently if the project is managed in a good and orderly fashion. The following list enumerates the most important aspects that a project should be governed by to be perceived as accessible: Outstanding features and bugs should be easy to find in the list of “issues” in the project’s repository. The project’s documentation should be easily accessible in or linked to from the project’s README file. The README file and associated documentation should be written in simple Markdown markup so it is easy to correct by anyone simply by using GitHub’s online Markdown editing features. How to contribute should be clearly explained in a CONTRIBUTING file. The process of contributing should be as simple as possible. The project should follow the norm and best practice of the language and environment it is written in. There should be tests in the project that are easy to get up and running on a developer machine without installing any external services, tools or libraries, unless they are handled by a package manager like NuGet. Contributed code should be checked by a continuous integration server that labels the status of pull request accordingly. If a test fails, the contributor should be alerted of its failure through GitHub’s interface. All code contributions should be run through a public continuous integration server so build failures are visible to the contributor such that it can be fixed without any project manager’s involvement. The development and branching process should preferably be based on an existing scheme such as GitFlow or GitHub Flow. All development should be done in public. Code should be pushed to GitHub regularly, so it’s possible to see progress. For incomplete features and bugfixes, GitFlow with branch prefixes such as feature/ and hotfix/ should be used All code in development should be pushed as often as possible. Security All source code should be written in a secure way so it avoids the problems enumerated in OWASP Top 10 and SANS 25. It should preferably exist a test for each of these problems such that it is continually verified that the code does not contain any of these problems now or in the future. No source code should contain secrets, passwords or otherwise sensitive information. If such code is committed by accident, history should be rewritten through interactive rebasing as soon as possible and force-pushed. Licensing All of Swedbank Pay’ open source software should be licensed under a liberal and enterprise, closed source-compatible software license. Copyright The copyright for code written in Swedbank Pay’s open source projects is shared between Swedbank Pay and the individual authors of the source code. This should be stated in the above mentioned LICENSE file as well as in each individual source code file and other metadata (such as .NET assembly information, etc.): Copyright © Swedbank Pay and Project Contributors How to Contribute Contributing details how we ensure that contributors to a project adheres to the rules and principles defined by the project. Code of Conduct Every project governed by Swedbank Pay or in its name should have a Code of Conduct. Release Management An essential part of any software project is having it released in one form or another so other people can use it. To be able to release software efficiently, several different strategies and methodologies need to exist and be followed. They will be described in the following chapters. Versioning To release software, it needs to be versioned. Swedbank Pay’s open source packages should be versioned according to semantic versioning. This means that whenever backward compatibility is broken, the major version should be incremented. When a new feature is added, the minor version should be incremented and when bug fixes and other minor changes are introduced, the revision number should be incremented. A version of the software should correspond to a commit in the Git repository. This commit should be tagged with the version number it represents and the commit should be in the branch corresponding with what’s being released; stable code should be in the master branch, while pre-release, alpha or beta code should be in the develop branch or in a release/ prefixed branch. If a stable version 1.2.5 of a project is to be released, the commit representing that version should be tagged in Git with the value 1.2.5 and the commit should exist in the master branch. To help with automating versioning in .NET based projects, GitVersion can be used. For most uses, GitVersionTask performs the job perfectly. It understands GitFlow and increments the version number automatically based on which branch the code being built exists on. Branching strategy To make versioning easier, the Git repository should follow GitFlow, GitHub Flow or derivates, so released and stable code is kept in the master branch, while unstable and pre-released code — if such is required — is kept in the develop branch. While they can be considered optional since all ongoing development can be done directly in the develop branch; features, hotfixes and such should preferably be done in separate branches using the GitFlow-standard branch prefixes feature, hotfix/, etc. Releases Software written for an environment that has a marketplace or other official storefront for applications (or “modules”, “extensions” and what have you) such as Apple’s App Store or Google Play, should try to publish the released software in these marketplaces. Releases should correspond to a tagged version number and a Release for the version should be created on GitHub. The GitHub Release should summarize all changes made since the last release and highlight new features, possibly by referring to blog entries or similar that describes them in more detail. To help with writing release notes, projects can use the tool GitReleaseNotes.",
    "tags": "",
    "url": "/checkout-v3/resources/development-guidelines/"
  },{
    "title": "Introduction",
    "text": "A small library of tools that might come in handy on your journey through our Developer Portal, from test data, developer guidelines, public migration key to terminology and a list of our partners.",
    "tags": "",
    "url": "/checkout-v3/resources/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward 3d_rotation Frictionless Payments Authenticating the cardholder. arrow_forward compare_arrows Capture Capturing the authorized funds. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward cached Update Payment Order Updating the payment order arrow_forward",
    "tags": "",
    "url": "/checkout-v3/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference link CompleteUrl Where you go when the payment is completed. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward code Metadata Store payment associated data for later use. arrow_forward settings Operations Possible operations for a payment order. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward report Problems Information when something goes wrong. arrow_forward send_time_extension Resource Models GET responses for the payment order resources. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward rule Status Response Models Payment order responses with different payment statuses. arrow_forward download_done Status The status of a payment order. arrow_forward public Urls The urls associated with the payment arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features local_gas_station Automated Fuel Dispenser Payments Payments for automated fuel dispensers. arrow_forward lock Age Restrictions Restricting payments to an age limit arrow_forward link Corporate Limited Menu Limit the selectable instruments to those that support corporate payment methods. arrow_forward document_scanner Cross Channel Payments A printable, scannable reference code for payment tracking. arrow_forward copyright Custom Logo How to add your own logo. arrow_forward delete_sweep Delete Token How to delete tokens. arrow_forward discount Fees And Discounts How to add fees and discounts to payment orders. arrow_forward looks_one Instrument Mode The Payment Menu with one payment instrument arrow_forward dns MOTO Mail Order / Telephone Order transactions. arrow_forward touch_app One-Click Payments Prefilling the payment details using payment tokens. arrow_forward article Order Items Information about the order items arrow_forward event Payer Aware Payment Menu A payment menu tailored to the payer. arrow_forward euro_symbol Payout Paying out funds to the consumer’s account. arrow_forward lock Restricted To SSN Restricting payments to a specific Social Security Number (SSN) arrow_forward cached Recur Setting up subscriptions and recurring payments. arrow_forward local_shipping Request Delivery Information Request that payment instruments return delivery information. arrow_forward call_split Split Settlement For merchants with several sub-merchants. arrow_forward public Terms of Service URL Displaying the merchant’s terms of service. arrow_forward report_problem Unscheduled Purchase Setting up subscriptions and merchant initiated payments. arrow_forward verified_user Verify Validating the payer’s payment details. arrow_forward",
    "tags": "",
    "url": "/checkout-v3/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/checkout-v3/features/"
  },{
    "title": "Display Payment UI",
    "text": "Step 2: Display Payment UI There are a couple of decisions to be made when you are presenting your payment UI. You have the choice between a payment menu with all the payment instruments you want to offer, or to present the paymentOrder with a single available payment instrument using instrument mode. Regardless of the number of instruments available to the payer, you also need to choose between the display options Redirect and Seamless View. Read more about these by following the corresponding link. Integrate Redirect Integrate Seamless View",
    "tags": "",
    "url": "/checkout-v3/display-payment-ui/"
  },{
    "title": "Introduction",
    "text": "With Digital Payments, you need to be able to collect, verify and store the payer data, including delivery address, and build your own checkout flow. We’ll store the card data for you, but you own it. This means that you have to remove data in compliance with GDPR, but you won’t have to worry about handling sensitive card info. Our PSP lets you choose whether to offer a single payment instrument or a payment menu consisting of all the instruments you wish to include. We offer a variety of payment instruments and features designed to meet your business needs. You can choose from the following payment instruments, somewhat depending on which countries you are operating in. The Checkout is available in Danish da-DK, English (US) en-US, Finnish fi-FI, Norwegian nb-NO, and Swedish sv-SE. info Digital Wallets: Some of the digital wallets we offer require you to take additional steps before we can activate them for you. Please follow the link(s) in the table below to read more.   Payment Instrument Region Apple Pay Card Click to Pay Google Pay™ MobilePay Swedbank Pay Installment Account Swedbank Pay Invoice Swedbank Pay Monthly Payments Swish Trustly Vipps Start Integrating Set Up A Test Account",
    "tags": "",
    "url": "/checkout-v3/"
  },{
    "title": "C# Code Examples",
    "text": "As Client Only The following is an example of the simplest form of making a program that actually makes a payment. It is a windows form with one button making a payment for 10 SEK and printing the receipt to a TextBox. The only methods used are Create, Start, OpenAsync and PaymentAsync. warning Warning: The IP address to terminal needs to be changed info Heads up: The first attempt will fail, since OpenAsync is successful but the terminal starts communicating with its host. Click the button again to start the payment. Simplest form of implementation - Happy Flow 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using SwpTrmLib; using SwpTrmLib.NexoTypes; namespace WindowsFormsApp1 { public partial class Form1 : Form, ISwpTrmCallbackInterface { ISwPTrmIf_1 PAX; public Form1() { InitializeComponent(); } private async void button1_Click(object sender, EventArgs e) { if (PAX == null) { LoginToTerminal(); } var result = await PAX.PaymentAsync(10); if (result.ResponseResult == NexoResponseResult.Success) { textBox1.AppendText(\"APPROVED TRANSACTION\" + Environment.NewLine); } else { textBox1.AppendText(\"REJECTED TRANSACTION\" + Environment.NewLine); textBox1.AppendText(result.ResponseText + Environment.NewLine); } // The result contains the receipt information textBox1.AppendText(result.ReceiptBlob + Environment.NewLine); } private void CreatePAXInstance() { PAX = PAXTrmImp_1.Create(new SwpIfConfig(), this); PAX.Start(new SaleApplInfo() { ApplicationName = \"Quick Demo-Client Only\", ProviderIdentification = \"SwP\", SoftwareVersion = \"0.1\", POIID = \"A-TEST-POIID\", SaleCapabilities = SaleCapabilitiesEnum.PrinterReceipt.ToString() // Client only mode! }); } private async void LoginToTerminal() { if (PAX == null) { CreatePAXInstance(); } PAX.TerminalAddress = \"192.168.1.34:11000\"; var res = await PAX.OpenAsync(); if (res.Result == ResponseResult.Success) { textBox1.AppendText(\"Terminal connected \" + Environment.NewLine); textBox1.AppendText(\"Terminal: \" + res.SerialNumber + Environment.NewLine); textBox1.AppendText(\"Terminal version: \" + res.SoftwareVersion + Environment.NewLine); } else { textBox1.AppendText(\"Failed to connect terminal \" + Environment.NewLine); textBox1.AppendText(res.Text + Environment.NewLine); } } public void ConfirmationHandler(string text, IConfirmationResult callback) { throw new NotImplementedException(); } public void EventNotificationHandler(EventToNotifyEnumeration type, string text) { throw new NotImplementedException(); } private async void Form1_FormClosing(object sender, FormClosingEventArgs e) { await PAX.CloseAsync(); PAX.Stop(); } } } As Client and Server Based on Simplest Client only the following runs as a server too. The difference is: Removed SalesCapabilites in call to Start Subscribed to the OnTerminalDisplay event Added code to the callback EventNotificationHandler info Heads up: When running as a server the program needs elevated privileges. It may be avoided by entering the following command as administrator: 1 netsh http add urlacl url=http://*:11000/EPASSaleToPOI/3.1/ user=Everyone 1 where :11000 is the default port. If listening to another port the command must be changed. Simplest Client And Server form of implementation - Happy Flow 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using SwpTrmLib; using SwpTrmLib.NexoTypes; namespace WindowsFormsApp1 { public partial class Form1 : Form, ISwpTrmCallbackInterface { ISwPTrmIf_1 PAX; public Form1() { InitializeComponent(); } private async void button1_Click(object sender, EventArgs e) { if (PAX == null) { LoginToTerminal(); } var res = await PAX.PaymentAsync(10); if (res.ResponseResult == NexoResponseResult.Success) { textBox1.AppendText(\"APPROVED TRANSACTION\" + Environment.NewLine); } else { textBox1.AppendText(\"REJECTED TRANSACTION\" + Environment.NewLine); textBox1.AppendText(res.ResponseText + Environment.NewLine); } // The result contains the receipt information textBox1.AppendText(res.ReceiptBlob + Environment.NewLine); } private void CreatePAXInstance() { PAX = PAXTrmImp_1.Create(new SwpIfConfig(), this); PAX.Start(new SaleApplInfo() { ApplicationName = \"Quick Demo\", ProviderIdentification = \"SwP\", SoftwareVersion = \"0.1\", POIID = \"A-TEST-POIID\", //SaleCapabilities = SaleCapabilitiesEnum.PrinterReceipt.ToString() }); PAX.OnTerminalDisplay += PAX_OnTerminalDisplay; } // A DisplayRequest from the terminal private void PAX_OnTerminalDisplay(string message) { textBox1.AppendText(message + Environment.NewLine); } private async void LoginToTerminal() { if (PAX == null) { CreatePAXInstance(); } PAX.TerminalAddress = \"192.168.1.34:11000\"; var res = await PAX.OpenAsync(); if (res.Result == ResponseResult.Success) { textBox1.AppendText(\"Terminal connected \" + Environment.NewLine); textBox1.AppendText(\"Terminal: \" + res.SerialNumber + Environment.NewLine); textBox1.AppendText(\"Terminal version: \" + res.SoftwareVersion + Environment.NewLine); } else { textBox1.AppendText(\"Failed to connect terminal \" + Environment.NewLine); textBox1.AppendText(res.Text + Environment.NewLine); } } public void ConfirmationHandler(string text, IConfirmationResult callback) { throw new NotImplementedException(); } public void EventNotificationHandler(EventToNotifyEnumeration type, string text) { textBox1.AppendText($\"Event: {type} - {text}\" + Environment.NewLine); } private async void Form1_FormClosing(object sender, FormClosingEventArgs e) { if (PAX != null) { await PAX.CloseAsync(); PAX.Stop(); } } } } Changes From Client Only 1 2 3 4 5 6 7 8 9 10 PAX.Start(new SaleApplInfo() { ApplicationName = \"Quick Demo\", ProviderIdentification = \"SwP\", SoftwareVersion = \"0.1\", POIID = \"AJACQH28\", //SaleCapabilities = SaleCapabilitiesEnum.PrinterReceipt.ToString() }); PAX.OnTerminalDisplay += PAX_OnTerminalDisplay; and 1 2 3 4 public void EventNotificationHandler(EventToNotifyEnumeration type, string text) { textBox1.AppendText($\"Event: {type} - {text}\" + Environment.NewLine); } Get CNA For Customer Based on either Simplest Client or Client And Server, let’s take it a bit further and find out who the customer is before starting the actual purchase transaction. The only change is in the button1_click where GetPaymentInstrumentAsync is called. The result contains among others masked PAN and CNA - CardNumberAlias. This is a very simple way to handle members. The CNA will be the same in all our PAX terminals. Get to know the customer before deciding amount - Happy Flow 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 private async void button1_Click(object sender, EventArgs e) { if (PAX == null) { LoginToTerminal(); } var cardres = await PAX.GetPaymentInstrumentAsync(); if (cardres.Result == NexoResponseResult.Success) { textBox1.AppendText($\"CNA: {cardres.CNA}\" + Environment.NewLine); textBox1.AppendText($\"for card: {cardres.PAN}\" + Environment.NewLine); var res = await PAX.PaymentAsync(10); if (res.ResponseResult == NexoResponseResult.Success) { textBox1.AppendText(\"APPROVED TRANSACTION\" + Environment.NewLine); } else { textBox1.AppendText(\"REJECTED TRANSACTION\" + Environment.NewLine); textBox1.AppendText(res.ResponseText + Environment.NewLine); } // The result contains the receipt information textBox1.AppendText(res.ReceiptBlob + Environment.NewLine); } } Handle Loyalty - Ask For Membership Based on the version Get CNA For Customer, let’s see if CNA exists in the database and if so, give the customer a better price. If the costumer is not a member, ask them to join so they can get a better price next time. The only change is to create a list of members and add CNA to that list if the customer wants to join. Other that creating the Members which is a list of strings, there are only changes in the button1_click. The important addition is the call to RequestCustomerConfirmationAsync. It requests the terminal to show a message and asks for a yes/no response. The member CustomerConfirmation of the result is true or false. warning Note!: The delay before a new request after a finished transaction is needed. If the delay is not added, the request will get a failure due to terminal being busy info Remember: to add List&lt;string&gt; Member; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 private async void button1_Click(object sender, EventArgs e) { decimal priceofproduct = 10; bool asktojoin = false; if (PAX == null) { LoginToTerminal(); if (Members == null) { Members = new List&lt;string&gt;(); } } var cardres = await PAX.GetPaymentInstrumentAsync(); if (cardres.Result == NexoResponseResult.Success) { textBox1.AppendText($\"CNA: {cardres.CNA}\" + Environment.NewLine); textBox1.AppendText($\"for card: {cardres.PAN}\" + Environment.NewLine); if (Members.Contains(cardres.CNA)) { priceofproduct = 8; } else { asktojoin = true; } var res = await PAX.PaymentAsync(priceofproduct); if (res.ResponseResult == NexoResponseResult.Success) { textBox1.AppendText(\"APPROVED TRANSACTION\" + Environment.NewLine); } else { textBox1.AppendText(\"REJECTED TRANSACTION\" + Environment.NewLine); textBox1.AppendText(res.ResponseText + Environment.NewLine); } // The result contains the receipt information textBox1.AppendText(res.ReceiptBlob + Environment.NewLine); if (asktojoin) { await Task.Delay(3000); var confirmres = await PAX.RequestCustomerConfirmationAsync(\"Would you like to join?\"); if (confirmres.ResponseResult == NexoResponseResult.Success &amp;&amp; confirmres.Confirmation == true) { Members.Add(cardres.CNA); } } } }",
    "tags": "",
    "url": "/pax-terminal/NET/CodeExamples/"
  },{
    "title": "Events of ISwpTrmIf_1",
    "text": "OnTerminalDisplay OnTerminalDisplay occurs when the terminal sends a display request to the sale system. The event is only relevant if running as a server. A DisplayRequest is simply the message indicating what is shown in the terminal display, with the purpose of helping the operator to understand what is happening. delegate void TerminalDisplayEventHandler(string message) OnNewStatus OnNewStatus occurs when status changes according to TrmStatus shown below or if a CardInsterted or CardRemoved event notification is sent from terminal. When using Async calls these statuses are not really needed. Event notifications from terminal are only relevant if running as a server. delegate void NewStatusEventHandler(**TrmStatus** status) 1 enum TrmStatus { Initialized, Open, WaitForPaymentInstrument, CustomerKnown, PaymentStarted, CardInserted, CardRemoved, Closed }; OnTerminalAddressObtained OnTerminalAddressObtained occurs when the save button has been pressed in the terminal’s admin menu. The purpose is to inform the sale system of the terminal’s IP address and port. This way it is possible to configure the address to the terminal without logging in to the sale system. The event is only relevant when running as a server. delegate void TerminalAddressEventHandler(string ip4, int port)",
    "tags": "",
    "url": "/pax-terminal/NET/Events/"
  },{
    "title": "ISwpTrmIf_1 Methods",
    "text": "Create The Create method is the first method to be called. Start The Start method initializes the created instance. OpenAsync The OpenAsync method call is the first method call that actually communicates with the terminal. CloseAsync The CloseAsync call is used to terminate a login session and allow for maintenance. The terminal will be shown as closed. PaymentAsync Call PaymentAsync to make a purchase transaction when the amount is known. To read the card before the amount is known, use GetPaymentInstrumentAsync instead. RefundAsync Call RefundAsync to make a refund transaction when the amount is known. To read the card before the amount is known, use GetPaymentInstrumentAsync instead. RefundAsync has the exact same results as PaymentAsync. AbortAsync A call to AbortAsync aborts an ongoing request. The AbortRequest itself is not responded to by the terminal, and the response of the aborted request ends up as a result of the aborted request. ReverseLastAsync Call ReverseLastAsync to reverse the last transaction. The reversal is only possible for the last transaction made, given that it was successful. GetPaymentInstrumentAsync Call GetPaymentInstrumentAsync to initiate a purchase before the amount is known. SetPaymentInstrument With SetPaymentInstrument, it is possible to send a NON PCI regulated card number or similar to the terminal.",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/"
  },{
    "title": "ISwpTrmCallbackInterface",
    "text": "The callbacks are only used if running as a server. However the Create method requires a ISwpTrmCallbackInterface, so only implement them without code if you are not running server mode. Sample code running client only. ConfirmationHandler 1 void ConfirmationHandler(string text,IConfirmationResult callback); EventNotificationHandler 1 void EventNotificationHandler(NexoTypes.EventToNotifyEnumeration type, string text); EventTiNotifyEnumeration 1 2 3 4 5 public enum EventToNotifyEnumeration { BeginMaintenance, EndMaintenance, Shutdown, Initialised, OutOfOrder, Completed, Abort, SaleWakeUp, SaleAdmin, CustomerLanguage, KeyPressed, SecurityAlarm, StopAssistance, CardInserted, CardRemoved, Reject };",
    "tags": "",
    "url": "/pax-terminal/NET/ISwpTrmCallbackInterface/"
  },{
    "title": "Introduction and Overview",
    "text": "Introduction SwpTrmLib is a Net Standard 2.0 nuget package that may be used when integrating Swedbank Pay terminal to a sale system. The package makes it simple and easy to get started. It has high abstraction and even if the actual protocol to the terminal changes this interface can stay the same. It offers asynchronous methods and for the simplest form of implementation it just takes a few calls to make a transaction. As of now the terminal is not prepared for a cloud connection, but by using this SDK it is possible to quickly make a small proxy service that makes whichever cloud connection that is desired. In the future there may be other variants of the interface and usage within the SDK, but this version will stay the same and once an implementation has been made, it should not have to be changed unless new requirements or new functionality is desired. The aim of the SDK is to minimize the total work effort for both users and Swedbank Pay. Usage The SwpTrmLib only contains one implementation for using a PAX terminal from Swedbank Pay at the moment, but makes it possible to vary the style of use by configuration. There are two major styles that is decided by the SalesCapabilities string sent in a LoginRequest: Act as both server and client - see code example for default style Act as client only - see code example for client only The intended default style requires the consumer of the SwpTrmLib to act as both a server and a client. The server handles requests from the terminal, such as display information, events, and possible input request from the terminal, such as a request to confirm that a receipt has been signed if needed. The second style is to act as a client only and then loose information from terminal such as events informing that a card has been inserted or removed or display information helping the operator to see what is going on. Transactions that need signing is not possible. Such transactions regard cards from outside EU for which PIN may not be required. Essential Methods Making a transaction from scratch only takes a few method calls. Create - Creates an instance and returns an interface Start - Initializes the instance and starts a listener for terminal if that mode is chosen OpenAsync - Starts a Login Session with the terminal. The session remains until Close or a new Open call PaymentAsync - Starts a payment transaction for supplied amount. RefundAsync - Starts a refund transaction for supplied amount. CloseAsync - Finishes the terminal session and allows for terminal maintenance. At least once a day. Handy Methods To get more than just payments and refunds GetPaymentInstrumentAsync - Opens card readers to read card before amount is known SetPaymentInstrument - Sends a payment instrument (card number) to the terminal. Note! Only non PCI regulated cards. RequestToDisplayAsync - Sends a message to be displayed on terminal RequestCustomerConfirmationAsync - Displays a yes/no question on the terminal and receive the result. Other Available Methods AbortAsync - Aborts something ongoing ReverseLastAsync - Reverses the last transaction if it was approved AdminAsync - Ask terminal to see if is any parameter update pending Events The events are only used if running as a server. OnTerminalDisplay OnNewStatus OnTerminalAddressObtained Callbacks ISwpTrmCallbackInterface The callbacks are only used if running as a server. ConfirmationHandler EventNotificationHandler",
    "tags": "",
    "url": "/pax-terminal/NET/"
  },{
    "title": "Introduction",
    "text": "Swedbank Pay have designed the Swedbank Pay Payment Application solution using the nexo Retailer protocol for its API interface to integrated parties. The Swedbank Pay Payment Application implementation of nexo Retailer allows the integrated application to initiate the relevant functions within Swedbank Pay Payment Application. The Swedbank Pay SDK contains one implementation for using PAX A30 terminal but makes it possible to vary the style of use by configuration. There are two major styles that is decided by the SalesCapabilities string sent in as a LoginRequest: Act as both server and client Act as client only The intended default style requires the consumer of the SwpTrmLib to act as both a server and a client. The server handles requests from the terminal, such as display information, events, and possible input request from the terminal, such as a request to confirm that a receipt has been signed if needed. The second style is to act as a client only and then lose information from terminal such as events informing that a card has been inserted or removed or display information helping the operator to see what is going on. Transactions that need signing is not possible. Such transactions regard cards from outside EU for which PIN may not be required. Configure the terminal In order for the terminal to communicate with the ECR the IP address need to be set in the admin menu. To enter the admin menu tap 6 times on the Swedbank Pay logo located at the top of the screen. Then enter the pin-code. Set the ECR IP address and then press the save button.",
    "tags": "",
    "url": "/pax-terminal/"
  },{
    "title": "Core Features",
    "text": "Core Features highlight_off Abort Reference Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference link CompleteUrl Where you go when the payment is completed. arrow_forward credit_card Create Payment When initiating a payment process. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward code Metadata Store payment associated data for later use. arrow_forward shopping_basket Operations The operations of the payments. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward credit_card Payment Resource When initiating a payment process. arrow_forward credit_card Payment State Different states in the payment process. arrow_forward hdr_weak Transactions states Possible states of the payments and transactions. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features link Payment Link Sending the payment via mail or SMS. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/"
  },{
    "title": "Introduction",
    "text": "Swish is the main Swedish payment app for mobile phones supported by all Swedish banks, making it one of the essential payment instruments for merchants operating in Sweden. According to Kantar Sifo, it is the preferred online payment method in the age group 18-40, and the payment method with the best conversion rates. We offer both desktop and mobile phone payment flows in our Redirect and Seamless View integrations, in addition to Direct API and Payment Link. Three flexible ways of integrating, two conversion optimized payment flows. Using the Direct API integration will put you in charge of determining which device is being used, and whether the e- or m-commerce flow is the most suitable. We will do this for you in Redirect and Seamless view. Payment Flow The following is a quick presentation of the purchase flow when using the Redirect or Seamless view. You can find in-depth descriptions of the separate flows in the corresponding sections. In the desktop intended e-commerce flow, the payer enters a Swish connected mobile phone number on Swedbank Pay’s payment page (Redirect) or in the iframe (Seamless View) after the payment is created. After pushing the pay button, the payer needs to open the Swish app and confirm the payment. If you are using the Redirect option, the payer will be Redirected back to the merchant’s site. In the mobile phone intended m-commerce flow, the payment page or iframe will only have a pay button, and no mobile phone number input is needed. The Swish app will be launched automatically when you push the pay button. Good To Know Intent The intent of the payment identifies how and when the charge will be effectuated. This determines the type of transaction used during the payment process. Sale (one-phase): The sale intent is used by the payment instruments like Swish, where the funds are reserved and drawn from the payer’s account immediately. This means you don’t need to do any more financial operations to fulfill the transaction. The only available after payment operation is reversal. Payment Type Swish is one of the instruments using one-phase payments. The sale is done when the payer successfully confirms in the app, capturing the funds instantly. The abort operation is still available, but the cancel and capture operations are not. The reversal, if needed, is done by the merchant at a later time. Read more about the different operations and the payment resource. Certificate We recommend that you apply for Swish as part of our Settlement Service and utilize our Technical Supplier Certificate. A Swedbank Pay sales representative can assist you with this. The Settlement Service will provide you with aggregated and reconciled reports and payments. The Technical Supplier Certificate means setup will be quicker and you will not have to assign a point of contact to monitor and renew a certificate. You could also contact one of the following banks offering Swish Handel: Danske Bank, SEB, lansforsakringar, Sparbanken Syd, Sparbanken Öresund, Nordea, Handelsbanken, in order to get an acquiring agreement, a Swish alias and access to Swish Certificate Management system (several banks do however support Technical Supplier Certificate setups so you can ask them for that). Demoshop You can give Swish a go in our demoshop if you like. For Redirect payments, you need to toggle paymentUrl off, if you want to try Seamless View, paymentUrl must be toggled on. The external integration demoshop used for testing is set up with the Merchant Swish Simulator, which enables you to test without using the Swish App. This payment instrument supports English (US) en-US, Norwegian nb-NO and Swedish sv-SE. Direct",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/"
  },{
    "title": "Core Features",
    "text": "Core Features highlight_off Abort Reference Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference link CompleteUrl Where you go when the payment is completed. arrow_forward credit_card Create Payment When initiating a payment process. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward code Metadata Store payment associated data for later use. arrow_forward shopping_basket Operations The operations of the payments. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward credit_card Payment Resource When initiating a payment process. arrow_forward credit_card Payment State Different states in the payment process. arrow_forward hdr_weak Transactions states Possible states of the payments and transactions. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features link Payment Link Sending the payment via mail or SMS. arrow_forward cached Recur Setting up subscriptions and recurring payments. arrow_forward report_problem Unscheduled Purchase Merchant initiated transactions. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/"
  },{
    "title": "Introduction",
    "text": "cached Redirect is the easiest way to do Direct Bank payments. Redirect will take the payer to a Swedbank Pay hosted payment page where they can perform a secure transaction. The payer will be redirected back to your website after the completion of the payment. branding_watermark Seamless View is our solution for a payment experience that is integrated directly on your website. The payment process will be executed in an iframe on your page. Important Steps Before You Launch Trustly At Your Website Prior to launching Trustly Payments at your site, make sure that the payment option is displayed with a Trustly logo, corresponding to Trustly’s guidelines. Payment Type Trustly is one of the instruments using one-phase payments. The sale is done when the payer successfully confirms in the app, capturing the funds instantly. The abort operation is still available, but the cancel and capture operations are not. The reversal, if needed, is done by the merchant at a later time. Read more about the different operations and the payment resource. Languages The languages we currently support are English (en-us), Norwegian (nb-no), Swedish (sv-se), and Finish (fi-fi). Redirect",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Reference Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward compare_arrows Capture Capturing the authorized funds. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference verified_user Authorizations Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward link CompleteUrl Where you go when the payment is completed. arrow_forward credit_card Create Payment When initiating a payment process. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward credit_card Financing Consumer The Payment request and the country options arrow_forward check_circle_outline Invoice Authorization Transaction Information about the payment’s authorization(s). arrow_forward code Metadata Store payment associated data for later use. arrow_forward shopping_basket Operations The operations of the payments. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward credit_card Payment Resource When initiating a payment process. arrow_forward credit_card Payment State Different states in the payment process. arrow_forward hdr_weak Transactions states Possible states of the payments and transactions. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features assignment Delete Token How to delete tokens. arrow_forward touch_app One-Click Payments Prefilling the payment details using payment tokens. arrow_forward link Payment Link Sending the payment via mail or SMS. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/"
  },{
    "title": "Introduction",
    "text": "open_in_browser The Direct integration puts the control in your hands. You control the collection of the purchase information and personal information before sending them to us. Swedbank Pay receives invoice data, which is used to produce and distribute invoices to the payer. cached Redirect is the easiest way to implement Invoice Payments. Redirect will take your payer to a Swedbank Pay hosted payment page where they can perform a secure transaction. The payer will be redirected back to your website after the completion of the payment. branding_watermark Seamless View is our solution for a payment experience that is integrated directly on your website. The payment process will be executed in an iframe on your page. Important Steps Before You Launch Invoice At Your Website Prior to launching Swedbank Pay Invoice Payments at your site, make sure that you have done the following: Sent a merchant logo in .JPG format to the Norwegian setup. The logo will be displayed on all your invoices. Minimum accepted size is 600x200 pixels, and at least 300 DPI. Included a link to “Terms and Conditions” for Invoice. API Requests You can create an invoice payment with the following operation options: Financing Consumer This payment instrument supports English (US) en-US, Norwegian nb-NO and Swedish sv-SE. Invoice Flow This is an example of the Redirect scenario. For other integrations, take a look at the respective sections. The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The diagram also shows the steps in a purchase process. sequenceDiagram Payer-&gt;&gt;Merchant: Start purchase activate Merchant note left of Merchant: First API request Merchant-&gt;&gt;-Swedbank Pay: POST &lt;Invoice Payment&gt; (operation=FinancingConsumer) activate Swedbank Pay Swedbank Pay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: authorization page activate Payer note left of Payer: redirect to Swedbank Pay Payer-&gt;&gt;-Swedbank Pay: enter payer details activate Swedbank Pay Swedbank Pay--&gt;&gt;-Payer: redirect to merchant activate Payer note left of Payer: redirect back to Merchant Payer-&gt;&gt;Merchant: access merchant page activate Merchant note left of Merchant: Second API request Merchant-&gt;&gt;+Swedbank Pay: GET &lt;Invoice payment&gt; Swedbank Pay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Redirect",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward 3d_rotation Frictionless Payments Authenticating the cardholder. arrow_forward compare_arrows Capture Capturing the authorized funds. arrow_forward shopping_basket Purchase The bread and butter of the payments. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference check_circle_outline Card Authorization Transaction Information about the payment’s authorization(s). arrow_forward link CompleteUrl Where you go when the payment is completed. arrow_forward credit_card Create Payment When initiating a payment process. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward code Metadata Store payment associated data for later use. arrow_forward shopping_basket Operations The operations of the payments. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward credit_card Payment Resource The overall payment process. arrow_forward credit_card Payment State Different states in the payment process. arrow_forward hdr_weak Transactions states Possible states of the payments and transactions. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features credit_card Co-badge Dankort Choose between the brands when using Visa/Dankort. arrow_forward assignment Delete Token How to delete tokens. arrow_forward dns MOTO Mail Order / Telephone Order transactions. arrow_forward touch_app One-Click Payments Prefilling the payment details using payment tokens. arrow_forward link Payment Link Sending the payment via mail or SMS. arrow_forward cached Recur Setting up subscriptions and recurring payments. arrow_forward call_split Split Settlement For merchants with several sub-merchants. arrow_forward cached Transaction On File Submitting subsequent transactions via file. arrow_forward report_problem Unscheduled Purchase Merchant initiated transactions with absent cardholders. arrow_forward verified_user Verify Validating the payer’s payment details. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/"
  },{
    "title": "Introduction",
    "text": "branding_watermark Seamless View is our solution for a payment experience that is integrated directly on your website. The payment process will be executed in an iframe on your page. cached Redirect will take the payer to a Swedbank Pay hosted payment page where they can perform a safe transaction. The payer will be redirected back to your website after the completion of the payment. When properly set up in your merchant/webshop site and the payer starts the purchase process, you need to make a POST request towards Swedbank Pay with your Purchase information. This will generate a payment object with a unique paymentID. You either receive a Redirect URL to a Swedbank Pay hosted page (Redirect integration) or a JavaScript source in response (Seamless View integration). You need to redirect the payer’s browser to that specified URL, or embed the script source on your site to create a Seamless View in an iframe; so that the payer can enter the credit card details in a secure Swedbank Pay hosted environment. Swedbank Pay will handle 3-D Secure authentication when this is required. Swedbank Pay will redirect the payer’s browser to - or display directly in the iframe - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. When you detect that the payer reach your completeUrl , you need to do a GET request, containing the id of the payment generated in the first step, to receive the state of the transaction. You will redirect the payer to Swedbank Pay hosted pages to collect the credit card information. When shopping in SEK, the page will look like this. Operations The API requests are displayed in the purchase flow. You can create a card payment with following operation options: Purchase Recur Verify Unscheduled Purchase Our payment example below uses the Purchase operation. Intent Intent The intent of the payment identifies how and when the charge will be effectuated. This determines the type of transaction used during the payment process. AutoCapture (one-phase): If you want the credit card to be charged (without additional operations), you will have to specify that the intent of the Purchase is AutoCapture. This is normally only allowed if the payer purchases digital products with instant delivery/shipment. Check with your acquirer before using this feature. The amount will be reserved via the authorization and the credit card will be charged automatically. You don’t need to do any more financial operations to fulfill the transaction. This payment instrument supports Danish da-DK, German de-DE, Estonian ee-EE, English (US) en-US, Spanish es-ES, Finnish fi-FI, French fr-FR, Lithuanian lt-LT, Latvian lv-LV, Norwegian nb-NO, Russian ru-RU and Swedish sv-SE. Sequence Diagram The sequence diagram below shows a high level description of a complete purchase, and the requests you have to send to Swedbank Pay. The links will take you directly to the corresponding API description. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. By default, 3-D Secure should be enabled. Depending on the card issuer, Swedbank Pay will check if the card is enrolled with 3-D Secure. This process has two alternative outcomes: If the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay activate Payer Payer-&gt;&gt;-Merchant: start purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST /psp/creditcard/payments activate SwedbankPay note left of Merchant: First API Request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: authorization page activate Payer note left of Payer: redirect to SwedbankPay&lt;br&gt;(If Redirect scenario) Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: rel: redirect-authorization activate Merchant Merchant--&gt;&gt;-Payer: display purchase result activate Payer sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay activate Payer Payer-&gt;&gt;-Merchant: start purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST /psp/creditcard/payments activate SwedbankPay note left of Payer: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: authorization page activate Payer Payer-&gt;&gt;-SwedbankPay: access authorization page activate SwedbankPay note left of Payer: redirect to SwedbankPay&lt;br&gt;(If Redirect scenario) SwedbankPay--&gt;&gt;-Payer: display purchase information activate Payer Payer-&gt;&gt;Payer: input creditcard information Payer-&gt;&gt;-SwedbankPay: submit creditcard information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process activate IssuingBank Payer-&gt;&gt;-SwedbankPay: access authentication page end SwedbankPay--&gt;&gt;-Payer: redirect to merchant activate Payer note left of Payer: redirect back to merchant&lt;br&gt;(If Redirect scenario) Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: rel: redirect-authorization activate Merchant Merchant--&gt;&gt;-Payer: display purchase result opt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;-Merchant: POST Payment Callback end Redirect",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Reference Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward compare_arrows Capture Capturing the authorized funds. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference link CompleteUrl Where you go when the payment is completed. arrow_forward credit_card Create Payment When initiating a payment process. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward code Metadata Store payment associated data for later use. arrow_forward shopping_basket Operations The operations of the payments. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward credit_card Payment Resource When initiating a payment process. arrow_forward credit_card Payment State Different states in the payment process. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features link Payment Link Sending the payment via mail or SMS. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/"
  },{
    "title": "Introduction",
    "text": "MobilePay is the main payment app in Denmark and one of the leading apps in Finland, making it one of the essential payment instruments for merchants operating in these Nordic countries. More than 4.2 million Danes and Finns use the app and 140,000 stores are accepting payments. We offer it on our redirect and seamless view platforms. How It Looks When the payment is created, the payer is redirected to a Swedbank Pay landing page where they can proceed with the payment by pressing the pay button. This takes the payer to MobilePay’s own payment page where the phone number is entered, and a push message is sent to the phone. A countdown is shown in the browser and the payment request will appear in the app, waiting to be confirmed by the payer. If you are using the redirect option, the payer will be redirected back to the merchant’s site. Intent Authorization (two-phase): The intent of a MobilePay Online purchase is always Authorization. The amount will be reserved but not charged. You will later (i.e. if a physical product, when you are ready to ship the purchased products) have to make a Capture or Cancel request. Payment Type MobilePay Online is one of the instruments using two-phase payments. The authorization is done when the payer successfully confirms in the app, and the abort, cancel, capture or reversal is done by the merchant at a later time. Read more about the different operations and the payment resource. warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Settlement MobilePay Online transactions are handled, processed and settled as card transactions in our system. They are, however, tagged as MobilePay Online transactions and have their own acquirer agreement, so the two payment instruments are settled separately. 3-D Secure As MobilePay Online transactions are processed as card transactions, a 3-D Secure agreement is needed to complete the payment instrument setup. This information is provided to you by your acquirer when you set up your agreement with them. If you offer both Card Payments and MobilePay Online, you will need two separate 3-D Secure agreements, one for each payment instrument. Apart from the agreement with the acquirer, no further 3-D Secure compliance is required from you as a merchant in this regard. Languages supported by this instrument are Danish da-DK, English (US) en-US and Finnish fi-FI. Payment Availability Even though MobilePay Online supports several currencies, the payment instrument itself is only available for payers in Denmark and Finland. This allows a shop in Norway to receive payments in NOK from a Danish payer if the shop supports shipping to Denmark, for instance. Redirect",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Reference Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward compare_arrows Capture Capturing the authorized funds. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference link CompleteUrl Where you go when the payment is completed. arrow_forward credit_card Create Payment When initiating a payment process. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward code Metadata Store payment associated data for later use. arrow_forward shopping_basket Operations The operations of the payments. arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward credit_card Payment Resource When initiating a payment process. arrow_forward credit_card Payment State Different states in the payment process. arrow_forward link Payment and Transactions States Possible states of the payments and transactions. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features link Payment Link Sending the payment via mail or SMS. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/"
  },{
    "title": "Introduction",
    "text": "Vipps is the main Norwegian payment app for mobile phones supported by the major Norwegian banks, making it one of the essential payment instruments for merchants operating in Norway. We offer it on our redirect and seamless view platforms. Purchase Flow After the payment is created, the payer pushes the payment button on Swedbank Pay’s payment page (redirect) or in the iframe (seamless view). The payer is then redirected to Vipps’ own payment page where the phone number is entered, and a push message is sent to the phone. The payment request will appear in the app and can be confirmed by the payer. If you are using the redirect option, the payer will be redirected back to the merchant’s site. Good To Know Payment Type Vipps is one of the instruments using two-phase payments. The authorization is done when the payer successfully confirms in the app, and the abort, cancel, capture or reversal is done by the merchant at a later time. Read more about the different operations and the payment resource. warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Settlement Vipps transactions are handled, processed and settled as card transactions in our system. They are, however, tagged as Vipps transactions and have their own acquirer agreement, so the two payment instruments are settled separately. 3-D Secure As Vipps transactions are processed as card transactions, a 3-D Secure agreement is needed to complete the payment instrument setup. This information is provided to you by your acquirer when you set up your agreement with them. If you offer both Card Payments and Vipps, you will need two separate 3-D Secure agreements, one for each payment instrument. Apart from the agreement with the acquirer, no further 3-D Secure compliance is required from you as a merchant in this regard. Demoshop Vipps is unfortunately not available in our demoshop at the moment, but it will be shortly. The demoshop will use a fakeservice which enables you to test a successful purchase without using the Vipps app. This payment instrument supports English (US) en-US, Norwegian nb-NO and Swedish sv-SE. Redirect",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/"
  },{
    "title": "Introduction",
    "text": "Is Card the only payment instrument you need? Go for Card only. Do you want Card and Invoice? Implement Card and Invoice. Want them all? Have them all. Each payment instrument is set up with a separate contract and integration. Choose between our easy-to-use PCI compliant platforms Redirect or Seamless View. Our payment instruments and their platform availability are listed in the table below.   Payment instrument Seamless View Redirect Direct API Region credit_card Card Payments check check   insert_drive_file Swedbank Pay Invoice check check   Vipps check check   Swish check check check ︎ Mobile Pay   check   Trustly check check   Prerequisites To start integrating Swedbank Pay Payments, you need the following: An HTTPS enabled web server. An agreement which includes Swedbank Pay Payments. Credentials (Merchant Access Token) from Swedbank Pay retrieved from the Merchant Portal. Platform Options Here are our three platform options at a glance. You can read more about the integration process by visiting the sections for each payment instrument. Seamless View With Seamless Views you can initiate the payment process directly in an iframe on your site. If you prefer that the payer isn’t redirected away from you, this option enables you to embed our payment page seamlessly into your shopping experience. Redirect The Redirect platform redirects the payer to a Swedbank Pay hosted payment page, and back to your page when the payment is completed. The Fundamentals info All Payments APIs in the Swedbank Pay API Platform share a common foundation with a similar payment process for all payment instruments, reducing complexity and enabling a more straightforward integration. There are two main payment types, two-phase and one-phase payments. The two seem very similar from a payer’s point of view, but there are key differences you should know about. Two-Phase Payments A two-phase payment is performed in two steps – an authorization which reserves the payer’s funds, and a capture of the funds at a later time, usually when the goods are shipped. This is the most common payment type, and it is used by Card Payments, Vipps Payments, MobilePay payments and Invoice Payments. A capture of an invoice will not capture any funds, but trigger the invoice distribution and send it to the payer. The payment instruments that support two-phase payments are: Card Invoice MobilePay Online Vipps One-Phase Payments There are two types of one-phase payments – sale and autoCapture. sale is used by payment instruments such as Swish. These payments will have a sale transaction instead of the authorization and capture. The funds will be captured from the payer straight away. autoCapture is only available for Card Payments. The mechanics work the same way as a two-phase payment, with two separate transactions – one for the authorization and one for the capture. As the name implies, the capture transaction is performed automatically when the authorization is successful. Because of this, autoCapture should only be used when dealing with digital products, since they are shipped instantly. As the funds are captured instantly, cancel is not available for either of the one-phase payments. abort and reversal can be performed the same way as with two-phase payments. The payment instruments that support one-phase payments are: Swish Card Trustly The Payment Object The payment is the container object that holds all transactions created during the payment process. When Swedbank Pay receives the payment request body (in JSON format), a payment is created and you will be given a unique payment ID in return. The response also includes (in a true RESTful way) the URLs and operations for further actions, given the state of the payment. After creating a payment, you can: Authorize funds. An authorization transaction reserves the funds. It is possible to abort a payment before the payer has completed the payment process. And either: Capture funds. Before delivering the merchandise you need to create a capture transaction to ensure that the money is charged from the payer’s card or properly billed by invoice. One-phase payments will combine these two in a sale or autoCapture transaction as described in the section above. Or: Cancel the authorized amount. Funds that are authorized but not yet captured, can be released back to the payer. This is done by creating a cancel transaction. This is not available for one-phase payments. Reverse captured funds. In some cases you may need to make a reversal of captured funds. This is achieved by creating a reversal transaction. All actions after creating the payment can be done by using our APIs, or from our Merchant Portal tool. abort is only available when using APIs. Please visit our demoshop to see Payment Menu v2 and Payment Instruments v1 in action.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Aborting a created payment. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward compare_arrows Capture Capturing the authorized funds. arrow_forward 3d_rotation Frictionless Payments Authenticating the cardholder. arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books. arrow_forward cached Update Payment Order Updating the payment order arrow_forward",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference event Checkin Events Possible events during Checkin. arrow_forward link CompleteUrl Where you go when the payment is completed. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward article Items Information about the items field arrow_forward code Metadata Store payment associated data for later use. arrow_forward settings Operations Possible operations for a payment order. arrow_forward article Order Items Information about the order items arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward event Payment Menu Events Possible events during Payment Menu payments. arrow_forward credit_card Payment Order Creating the payment order arrow_forward credit_card Payment State Different states in the payment process. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward send_time_extension Resource Models GET responses for the payment order resources. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward rule Status Response Models Payment order responses with different payment statuses. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward public Urls The urls associated with the payment arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features copyright Custom Logo How to add your own logo. arrow_forward assignment Delete Token How to delete tokens. arrow_forward discount Fees And Discounts How to add fees and discounts to payment orders. arrow_forward verified Enterprise The Checkin alternative. arrow_forward cached Recur Setting up subscriptions and recurring payments. arrow_forward verified TRA Exemption Transaction Risk Analysis Exemption arrow_forward report_problem Unscheduled Purchase Setting up subscriptions and merchant initiated payments. arrow_forward verified_user Verify Validating the payer’s payment details. arrow_forward",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/"
  },{
    "title": "Introduction",
    "text": "Swedbank Pay Checkout allows your customers to be identified by Swedbank Pay, enabling existing Swedbank Pay Checkout users to pay with their favorite payment methods in just a few simple steps. Prerequisites To start integrating Swedbank Pay Checkout, you need the following: HTTPS enabled web server. Agreement that includes Swedbank Pay Checkout. Obtained credentials (merchant Access Token) from Swedbank Pay through the Merchant Portal. Please observe that Swedbank Pay Checkout encompass both the consumer and paymentmenu scope. Introduction To get started with Swedbank Pay Checkout, you should learn about its different components and how they work together. Swedbank Pay Checkout consists of two related, but disconnected concepts: Checkin and Payment Menu. Checkin identifies the consumer in our Consumer API and Payment Menu authorizes the payment with our Payment Menu API. The next step is to Capture the payment. You can either capture the total amount, or do a part-capture (as described under After Payment). Connect these steps and you have Swedbank Pay Checkout. While Checkin is a necessary component to store personal information and access features like storing cards, it is not a mandatory step for the Checkout process to work. If the payer is from a country where we currently don’t support Checkin, or if they opt not to store their data, that’s fine. The Payment Menu can still be used as a guest. Sequence Below, you will find sequence diagrams visualizing the sequence of Swedbank Pay Checkout. The parties involved in the sequences are: Payer refers to the front-end code that runs in the web browser (JavaScript events as well as user interaction). Merchant refers to the merchant back-end server. Swedbank Pay refers to the Swedbank Pay API. Checkin The first operation in the Checkout process is to identify the payer. This step is called Checkin and is visualized in the below diagram.  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayStart CheckinPOST /psp/consumersrel:view-consumer-identification ①rel:view-consumer-identification ②&lt;script src=rel:view-consumer-identification.href /&gt;payex.hostedView.consumer()Consumer identification③onConsumerIdentified(consumerProfileRef) ④POST { consumerProfileRef } ⑤StoreconsumerProfileRef rel:view-consumer-identification is a value in one of the operations, sent as a response from Swedbank Pay to the Merchant. Show Checkin creates and displays the Checkin Seamless View. Consumer identification is a simplified view of what happens inside the Checkin Seamless View in order to identify the payer. onConsumerIdentified(consumerProfileRef) is an event that triggers when the consumer has been identified, and delivers the field consumerProfileRef as a reference to be used when creating the Payment Order that will be used to display the Payment Menu. POST { consumerProfileRef } ensures that the consumerProfileRef is persisted in storage (a database, for example). Payment Menu When Checkin is completed successfully and the consumerProfileRef is secured, the next operation is to display the Payment Menu and have the payer complete a payment, which is visualized in the sequence diagram below.  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayPayPOST /psp/paymentorders { consumerProfileRef }rel:view-paymentorderrel:view-paymentorder&lt;script src=rel:view-paymentorder.href /&gt;payex.hostedView.paymentMenu()Perform paymentalt[completed payment]onPaymentCompleted(paymentorder)Check payment statusGET paymentorder.idrel:paid-paymentorderGET rel:paid-paymentorder.hrefCompleted Payment OrderShow receipt[failed payment]onPaymentFailed(paymentorder)Check payment statusGET paymentorder.idrel:failed-paymentorderGET rel:failed-paymentorder.hrefFailed Payment OrderShow failure page Callback For every change to the Payment Order after its creation, a callback will be made from Swedbank Pay towards the callbackUrl specified in the Payment Order. It is important to listen to these callbacks so in the event that the payer closes the browser window, there are network problems or anything else unexpected happens during the payment process, the status is updated in the merchant system.  Merchant Merchant Swedbank Pay Swedbank PayPOST { payment activity }GET paymentorder.idPayment OrderUpdate order status Capture After the payment is completed, you can Capture the payment. Capture should be done after the goods are shipped or if the purchased goods don’t require shipping. Only payment instruments that support authorizations will expose the create-paymentorder-capture operation when they can be captured.  Merchant Merchant Swedbank Pay Swedbank PayCaptureGET paymentorder.idrel:create-paymentorder-capturePOST rel:create-paymentorder-capture.hrefCapture statusUpdate order status This product supports Danish da-DK, English (US) en-US, Finnish fi-FI, Norwegian nb-NO and Swedish sv-SE. Implement Checkin",
    "tags": "",
    "url": "/old-implementations/checkout-v2/"
  },{
    "title": "Core Features",
    "text": "Core Features pan_tool Abort Aborting a created payment order. arrow_forward low_priority Callback Receive asynchronous, server-to-server updates from Swedbank Pay when transactions are performed on a payment. arrow_forward pan_tool Cancel Canceling the authorization and releasing the funds. arrow_forward 3d_rotation Frictionless Payments Authenticating the cardholder. arrow_forward compare_arrows Capture Capturing the authorized funds arrow_forward keyboard_return Reversal How to reverse a payment. arrow_forward description Settlement &amp; Reconciliation Balancing the books arrow_forward cached Update Payment Order Updating the payment order arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/"
  },{
    "title": "Technical Reference",
    "text": "Technical Reference link CompleteUrl Where you go when the payment is completed. arrow_forward assignment Description The purchase summed up in a few words. arrow_forward article Items Information about the items field arrow_forward code Metadata Store payment associated data for later use. arrow_forward settings Operations Possible operations for a payment order. arrow_forward article Order Items Information about the order items arrow_forward account_box PayeeInfo Payment specific merchant information. arrow_forward assignment_ind PayeeReference The merchant’s reference for a specific payment. arrow_forward event Payment Menu v2 Events Possible events during Payment Menu v2 payments arrow_forward credit_card Payment Order Creating the payment order arrow_forward credit_card Payment State Different states in the payment process. arrow_forward link PaymentUrl Redirecting the payer back to your site. arrow_forward attach_money Prices The payment’s prices resource. arrow_forward report Problems Information when something goes wrong. arrow_forward send_time_extension Resource Models GET responses for the payment order resources. arrow_forward event Seamless View Events Possible events during Seamless View payments. arrow_forward rule Status Response Models Payment order responses with different payment statuses. arrow_forward done_all Transactions The transactions making up a specific payment. arrow_forward devices User Agent An introduction to user agents arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/"
  },{
    "title": "Optional Features",
    "text": "Optional Features link Corporate Limited Menu Limit the selectable instruments to those that support corporate payment methods. arrow_forward copyright Custom Logo How to add your own logo arrow_forward assignment Delete Token How to delete tokens. arrow_forward discount Fees And Discounts How to add fees and discounts to payment orders. arrow_forward looks_one Instrument Mode The Payment Menu v2 with one payment instrument arrow_forward dns MOTO Mail Order / Telephone Order transactions. arrow_forward touch_app One-Click Payments Prefilling the payment details using payment tokens. arrow_forward event Payer Aware Payment Menu A payment menu tailored to the payer. arrow_forward link Payment Link Sending the payment via mail or SMS. arrow_forward cached Recur Setting up subscriptions and recurring payments. arrow_forward cached Transaction On File Submitting subsequent transactions via file. arrow_forward report_problem Unscheduled Purchase Setting up subscriptions and merchant-initiated payments. arrow_forward verified_user Verify Validating the payer’s payment details. arrow_forward",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/"
  },{
    "title": "Features",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/"
  },{
    "title": "",
    "text": "Swedbank Pay Payment Menu v2 allows your customers to pay with their favorite payment instruments in just a few simple steps. Prerequisites To start integrating Swedbank Pay Payment Menu v2, you need the following: HTTPS enabled web server. Agreement that includes Swedbank Pay Payment Menu v2. Obtained credentials (merchant Access Token) from Swedbank Pay through the Merchant Portal. Introduction To get started with Swedbank Pay Payment Menu v2, you should learn about its different components and how they work together. Payment Menu v2 authorizes the payment with our Payment Menu API. The next step is to Capture the payment. You can either capture the total amount, or do a part-capture (as described under After Payment). Connect these steps and you have Swedbank Pay Payment Menu v2. Payment Order",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/"
  },{
    "title": "Introduction",
    "text": "If you are a new merchant getting started with your implementation, Digital Payments is everything you need. The implementations in this section will be maintained, but our focus area going forward, where new features are going to be added, is Digital Payments. If you are an existing merchant already using the Checkout v2, Payment Menu v2 or Payment Instruments v1, we recommend switching to Digital Payments for an even better payment experience. A migration guide is coming shortly. Even though we rearranged our menu, the implementation sections remain the same, and no documentation has been deleted. Follow the links below or in the sidebar to find your section. Checkout v2 Payment Instruments v1 Payment Menu v2",
    "tags": "",
    "url": "/old-implementations/"
  },{
    "title": "Developer Portal",
    "text": "",
    "tags": "",
    "url": "/"
  },{
    "title": "Instrument Mode",
    "text": "Instrument Mode In “Instrument Mode” the Payment Menu will display only one specific payment instrument instead of all configured on your merchant account. Please refer to the Payment Menu documentation for more information on when you should use this feature. To use Instrument Mode with a Merchant Backend, set the instrument field of your payment order to a non-null value. On Android, instrument is a String, but some common instruments are available int the PaymentInstruments class: Android 1 2 3 4 5 6 7 8 9 val paymentOrder = PaymentOrder( ..., instrument = PaymentInstruments.CREDIT_CARD, ... ) val otherPaymentOrder = paymentOrder.copy( instrument = \"SomeInstrument\" ) On iOS, instrument is an struct that wraps a String, and provides common instruments as static constants: iOS 1 2 paymentOrder.instrument = .creditCard paymentOrder.instrument = Instrument(rawValue: \"SomeInstrument\") Changing The Instrument If a payment order is created in instrument mode, the Merchant Backend Configuration will populate the instrument and availableInstruments fields of the ViewPaymentOrderInfo. This is also recommended to do if using instrument mode with a custom Configuration. This way, the containing application can observe the payment process and determine if it is in instrument mode, and display additional UI accordingly. Android 1 2 3 4 5 6 7 // paymentViewModel is a property of FragmentActivity // lifecycleOwner should usually be viewLifecycleOwner if we are in a Fragment paymentViewModel.richState.observe(this) { richState -&gt; if (richState?.viewPaymentOrderInfo?.instrument != null) { // show instrument mode UI } } iOS 1 2 3 4 5 6 // paymentOrderDidShow is a part of the protocol SwedbankPaySDKDelegate func paymentOrderDidShow(info: SwedbankPaySDK.ViewPaymentOrderInfo) { if info.instrument != nil { // show instrument mode UI } } To change the instrument of an ongoing payment order, call the updatePaymentOrder method. Its argument is passed to your Configuration, which must know how to interpret it. If using the Merchant Backend Configuration, the argument should be the new instrument to set. Your Configuration should report the valid instruments for the ongoing payment order in the ViewPaymentOrderInfo.availableInstruments property. Your UI can observe this property to show only valid options to the user. The Merchant Backend Configuration populates this field when. Android 1 2 // On Android, updatePaymentOrder is part of PaymentViewModel paymentViewModel.updatePaymentOrder(PaymentInstruments.INVOICE) iOS 1 2 // On iOS, updatePaymentOrder is part of SwedbankPaySDKController swedbankPaySDKController.updatePaymentOrder(SwedbankPaySDK.Instrument.invoice) You should, of course, then observe when the update completes, and update your UI accordingly. Android 1 2 3 4 5 6 paymentViewModel.state.observe(this) { when (it) { UPDATING_PAYMENT_ORDER -&gt; showUpdatingUI() else -&gt; hideUpdatingUI() } } iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 showUpdatingUI() swedbankPaySDKController.updatePaymentOrder(SwedbankPaySDK.Instrument.invoice) // ... elsewhere ... // paymentOrderDidShow is a part of the protocol SwedbankPaySDKDelegate func paymentOrderDidShow(info: SwedbankPaySDK.ViewPaymentOrderInfo) { // ...code... hideUpdatingUI() } func updatePaymentOrderFailed(updateInfo: Any, error: Error) { hideUpdatingUI() }",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/optional/instrument-mode.html"
  },{
    "title": "Instrument Mode",
    "text": "Instrument Mode warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. With “Instrument Mode”, the Payment Menu will display only one specific payment instrument instead of all those configured on your merchant account. The PaymentOrder resource works just like it otherwise would, allowing you to remain largely indifferent to the payment instrument in use. To use the feature you need to add the instrument field in the request as shown in the example below. It is important to only create one paymentOrder for each purchase, even if the payer changes their mind and wants to use another payment instrument. This is because we don’t allow creating multiple paymentOrders with the same payeeReference. If this happens, you should use the PATCH request below to reflect what the payer has chosen instead of creating a new paymentOrder. This way, you can still use the same payeeReference. If you don’t want to use Swedbank Pay’s Payment Menu (e.g. building your own payment menu), or have multiple payment providers on your site, we strongly recommend that you implement this functionality. In this case you should use the instrument field to enforce which payment instrument to show. If you have an agreement with Swedbank Pay for both Card and Swish/Vipps processing, and the payer chooses either of these instruments, you should add the instrument parameter with the specific payment instrument. Eligibility Check If you want to build your own menu and display at least one wallet like Apple Pay, Click to Pay or Google Pay™, you need to do an eligibility check. This is to ensure that the wallet is supported on the payer’s device or browser. The check helps you streamline the process, removing instruments that would give the payer an error message or not be displayed in the menu. Using The Script Swedbank Pay provides a script to do this check, with the URL ecom.&lt;environment&gt;.payex.com/checkout/core/integration. Environments available for you are externalintegration and production, and you can switch integration between checkout and paymentmenu. Follow these links for test environment and production environment Checkout scripts. Add the script tag to your website and perform the javascript call await payex.getAcceptedWallets(). We will return a string array with the wallets eligible for that purchase. The format will e.g. be [\"applepay\", \"googlepay\"]. The check should be done as close as possible to the moment the payer wants to open the payment UI. If the payer is in a situation where they may change their browser and/or device between the check is done to the payment UI is opened, the eligibility check may not be accurate to what the UI is displaying. Additional Details We strongly advice against using your own script to perform eligibility checks. Using our check will ensure that what we will display in the menu matches what you offer to the payer. If you do use your own, make sure that it is stricter than the one we provide. If you are not building your own menu or don’t offer these wallets, there is no need to run the script to do the check. Instrument Mode Request An example with invoice as the instrument of choice. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"instrument\": \"Invoice-PayExFinancingSe\", \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"urls\": \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"requireConsumerInfo\": true, \"digitalProducts\": false, \"shippingAddressRestrictedToCountryCodes\": [ \"NO\", \"US\" ] }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Instrument Mode Response Note the implementation options Seamless View and Redirect (HostedView or Redirect in the response’s implementation field). Depending on which it is, either view-checkout (Seamless View) or redirect-checkout will appear in the response. Never both at the same time. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd\", \"created\": \"2022-01-24T10:54:05.6243371Z\", \"updated\": \"2022-01-24T10:54:19.2679591Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"Invoice-PayExFinancingSe\" ], \"implementation\": \"Enterprise\", \"integration\": \"HostedView|Redirect\", \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/metadata\" } }, \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/menu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/core/js/px.payment.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"set-instrument\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } PATCH Instrument Selection Note the rel named set-instrument, which appears among the available operations in the paymentOrder response when instrument mode is applied. To switch instrument after the paymentOrder has been created, you can use the following PATCH request, here with Swish as an example. 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp//paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"SetInstrument\", \"instrument\": \"Swish\" } } Available Instruments The valid instruments for the paymentOrder can be retrieved from the availableInstruments parameter in the paymentOrder response. Using a merchant set up with contracts for Creditcard, Swish and Invoice, availableInstruments will look like this: 1 2 3 4 5 \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Swish\" ]",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/instrument-mode.html"
  },{
    "title": "Instrument Mode",
    "text": "Instrument Mode warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. With “Instrument Mode”, the Payment Menu will display only one specific payment instrument instead of all those configured on your merchant account. The PaymentOrder resource works just like it otherwise would, allowing you to remain largely indifferent to the payment instrument in use. To use the feature you need to add the instrument field in the request as shown in the example below. It is important to only create one paymentOrder for each purchase, even if the payer changes their mind and wants to use another payment instrument. This is because we don’t allow creating multiple paymentOrders with the same payeeReference. If this happens, you should use the PATCH request below to reflect what the payer has chosen instead of creating a new paymentOrder. This way, you can still use the same payeeReference. If you don’t want to use Swedbank Pay’s Payment Menu (e.g. building your own payment menu), or have multiple payment providers on your site, we strongly recommend that you implement this functionality. In this case you should use the instrument field to enforce which payment instrument to show. If you have an agreement with Swedbank Pay for both Card and Swish/Vipps processing, and the payer chooses either of these instruments, you should add the instrument parameter with the specific payment instrument. Eligibility Check If you want to build your own menu and display at least one wallet like Apple Pay, Click to Pay or Google Pay™, you need to do an eligibility check. This is to ensure that the wallet is supported on the payer’s device or browser. The check helps you streamline the process, removing instruments that would give the payer an error message or not be displayed in the menu. Using The Script Swedbank Pay provides a script to do this check, with the URL ecom.&lt;environment&gt;.payex.com/checkout/core/integration. Environments available for you are externalintegration and production, and you can switch integration between checkout and paymentmenu. Follow these links for test environment and production environment Checkout scripts. Add the script tag to your website and perform the javascript call await payex.getAcceptedWallets(). We will return a string array with the wallets eligible for that purchase. The format will e.g. be [\"applepay\", \"googlepay\"]. The check should be done as close as possible to the moment the payer wants to open the payment UI. If the payer is in a situation where they may change their browser and/or device between the check is done to the payment UI is opened, the eligibility check may not be accurate to what the UI is displaying. Additional Details We strongly advice against using your own script to perform eligibility checks. Using our check will ensure that what we will display in the menu matches what you offer to the payer. If you do use your own, make sure that it is stricter than the one we provide. If you are not building your own menu or don’t offer these wallets, there is no need to run the script to do the check. Instrument Mode Request An example with invoice as the instrument of choice. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"instrument\": \"Invoice-PayExFinancingSe\", \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\", \"urls\": \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"requireConsumerInfo\": true, \"digitalProducts\": false, \"shippingAddressRestrictedToCountryCodes\": [ \"NO\", \"US\" ] }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Instrument Mode Response Note the implementation options Seamless View and Redirect (HostedView or Redirect in the response’s implementation field). Depending on which it is, either view-checkout (Seamless View) or redirect-checkout will appear in the response. Never both at the same time. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd\", \"created\": \"2022-01-24T10:54:05.6243371Z\", \"updated\": \"2022-01-24T10:54:19.2679591Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"Invoice-PayExFinancingSe\" ], \"integration\": \"HostedView|Redirect\", \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/metadata\" } }, \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/menu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/core/js/px.payment.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"set-instrument\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } PATCH Instrument Selection Note the rel named set-instrument, which appears among the available operations in the paymentOrder response when instrument mode is applied. To switch instrument after the paymentOrder has been created, you can use the following PATCH request, here with Swish as an example. 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp//paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"SetInstrument\", \"instrument\": \"Swish\" } } Available Instruments The valid instruments for the paymentOrder can be retrieved from the availableInstruments parameter in the paymentOrder response. Using a merchant set up with contracts for Creditcard, Swish and Invoice, availableInstruments will look like this: 1 2 3 4 5 \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Swish\" ]",
    "tags": "",
    "url": "/checkout-v3/features/optional/instrument-mode.html"
  },{
    "title": "Instrument Mode",
    "text": "Instrument Mode warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. With “Instrument Mode”, the Payment Menu will display only one specific payment instrument instead of all those configured on your merchant account. The PaymentOrder resource works just like it otherwise would, allowing you to remain largely indifferent to the payment instrument in use. To use the feature you need to add the instrument field in the request as shown in the example below. It is important to only create one paymentOrder for each purchase, even if the payer changes their mind and wants to use another payment instrument. This is because we don’t allow creating multiple paymentOrders with the same payeeReference. If this happens, you should use the PATCH request below to reflect what the payer has chosen instead of creating a new paymentOrder. This way, you can still use the same payeeReference. If you don’t want to use Swedbank Pay’s Payment Menu (e.g. building your own payment menu), or have multiple payment providers on your site, we strongly recommend that you implement this functionality. In this case you should use the instrument field to enforce which payment instrument to show. If you have an agreement with Swedbank Pay for both Card and Swish/Vipps processing, and the payer chooses either of these instruments, you should add the instrument parameter with the specific payment instrument. Instrument Mode Request An example with invoice as the instrument of choice. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"instrument\": \"Invoice-PayExFinancingSe\", \"urls\": \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"requireConsumerInfo\": true, \"digitalProducts\": false, \"shippingAddressRestrictedToCountryCodes\": [ \"NO\", \"US\" ] }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Instrument Mode Response Depending on which implementation you are using, either view-paymentorder (Seamless View) or redirect-paymentorder will appear in the response. Never both at the same time. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8\", \"created\": \"2022-02-23T12:59:10.9600933Z\", \"updated\": \"2022-02-23T12:59:11.77654Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Testing - Stage\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"instrument\": \"CreditCard\", \"availableInstruments\": [ \"Invoice-PayExFinancingSe\", ], \"integration\": \"\", \"urls\": { \"id\": \"/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8/payeeInfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8/payers\" }, \"payments\": { \"id\": \"/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8/currentpayment\" }, \"items\": [{ \"creditCard\": { \"cardBrands\": [\"Visa\", \"MasterCard\", \"Amex\", \"Dankort\", \"Diners\", \"Finax\", \"Forbrugsforeningen\", \"Jcb\", \"IkanoFinansDk\", \"Lindex\", \"Maestro\", \"Ica\"] } }] }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/4dec0b0f-a385-452a-cc38-08d9f53bb7a8\", \"rel\": \"update-paymentorder-setinstrument\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/paymentmenu/23ef8b8f5088711f6f2cdbc55ad4dad673fee24a70c7788a5dc8f50c6c7ba835?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" } { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/paymentmenu/core/client/paymentmenu/23ef8b8f5088711f6f2cdbc55ad4dad673fee24a70c7788a5dc8f50c6c7ba835?culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } PATCH Instrument Selection Note the rel named update-paymentorder-setinstrument, which appears among the available operations in the paymentOrder response when instrument mode is applied. To switch instrument after the paymentOrder has been created, you can use the following PATCH request, here with Swish as an example. 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp//paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"SetInstrument\", \"instrument\": \"Swish\" } } Available Instruments The valid instruments for the paymentOrder can be retrieved from the availableInstruments parameter in the paymentOrder response. Using a merchant set up with contracts for Creditcard, Swish and Invoice, availableInstruments will look like this: 1 2 3 4 5 \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Swish\" ]",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/instrument-mode.html"
  },{
    "title": "Enterprise",
    "text": "Enterprise is the option if you have a strong customer authentication login and collect consumer information yourself, so you don’t need payer information from us to calculate shipping costs. We store the consumer information for you and offer the full range of available payment methods. There are two ways of integrating the Enterprise implementation. Redirect and Seamless View. With Redirect, the payer is sent to a Swedbank Pay page, where we handle the authentication and purchase process. The payer is redirected back to you when the purchase is completed or if the payer aborts the purchase. The purchase page will be styled by Swedbank Pay. With Seamless View, the payer stays at your site, and you initiate the Swedbank Pay purchase module in an iframe. The purchase component will be styled by Swedbank Pay. Read more about our two integration alternatives by clicking the links below. This product supports Danish da-DK, English (US) en-US, Finnish fi-FI, Norwegian nb-NO, and Swedish sv-SE. Back to Get Started Integrate Redirect Integrate Seamless View",
    "tags": "",
    "url": "/checkout-v3/enterprise/introduction.html"
  },{
    "title": "Invoice Authorization Transaction",
    "text": "Create Invoice Authorization Transaction The redirect-authorization operation redirects the payer to Swedbank Pay Payments where the payment is authorized. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 POST /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"activity\": \"FinancingConsumer\" }, \"consumer\": { \"socialSecurityNumber\": \"26026708248\", \"customerNumber\": \"123456\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"ip\": \"127.0.0.1\" }, \"legalAddress\": { \"addressee\": \"Olivia Nyhuus\", \"streetAddress\": \"SaltnesToppen 43\", \"zipCode\": \"1642\", \"city\": \"Saltnes\", \"countryCode\": \"no\" }, \"billingAddress\": { \"addressee\": \"Olivia Nyhuus\", \"streetAddress\": \"SaltnesToppen 43\", \"zipCode\": \"1642\", \"city\": \"Saltnes\", \"countryCode\": \"no\" } } Show fields Hide fields Required Field Type Description check transaction object The transaction object.   activity string Only the value \"FinancingConsumer\" or \"AccountsReceivableConsumer\"   consumer object The payer object.   socialSecurityNumber string The social security number of the payer.   customerNumber string Customer number of the payer.   email string The customer email address.   msisdn string The MSISDN of the payer.   ip string The IP address of the payer.   legalAddress object The Address object.   addressee string The full name of the addressee of this invoice   coAddress string The co Address of the addressee.   streetAddress string The street address of the addresse. Maximum 50 characters long.   zipCode string The zip code of the addresse.   city string The city name of the addresse.   countryCode string The country code of the addresse.   billingAddress object The BillingAddress object for the billing address of the addresse.   addressee string The full name of the billing address adressee.   coAddress string The co address of the billing address adressee.   streetAddress string The street address of the billing address adressee. Maximum 50 characters long.   zipCode string The zip code of the billing address adressee.   city string The city name of the billing address adressee.   countryCode string The country code of the billing address adressee. Invoice Authorization Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"authorization\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"consumer\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/consumer\" }, \"legalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/legaladdress\" }, \"billingAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/billingaddress\" }, \"transaction\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Authorization\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"ExternalResponseError\", \"failedActivityName\": \"Authorize\", \"failedErrorCode\": \"ThirdPartyErrorCode\", \"failedErrorDescription\": \"ThirdPartyErrorMessage\", \"isOperational\": \"TRUE\", \"activities\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177/activities\" }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"edit-authorization\", \"method\": \"PATCH\" } ] } } } Show fields Hide fields Field Type Description payment string The relative URL and unique identifier of the payment resource this authorization belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. authorization object The transaction object. id string The relative URL and unique identifier of the authorization resource this authorization belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. failedReason string The human readable explanation of why the payment failed. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. The authorization resource contains information about an authorization transaction made towards a payment, as previously described.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/invoice-authorization-transaction.html"
  },{
    "title": "iOS",
    "text": "This guide assumes that you are using the Merchant Backend Configuration and your backend implements the Merchant Backend API. If you are using a custom backend instead, the meaning of SwedbankPaySDKController arguments will be different, as well as any errors reported, but the basic process is the same. The differences will be highlighted in the chapter on custom backends. Installation The iOS component of the Swedbank Pay Mobile SDK is split into two libraries: SwedbankPaySDK contains the core SDK, while SwedbankPaySDKMerchantBackend contains utilities for interfacing with the Merchant Backend API. If you are using a custom backend, you to not need to install the SwedbankPaySDKMerchantBackend library. Swift Package Manager The SDK is available through the Swift Package Manager. This is the simplest way of adding the SDK to an Xcode project. Follow the Xcode documentation to add a SwiftPM dependency. The package repository URL for the SDK is https://github.com/SwedbankPay/swedbank-pay-sdk-ios.git. Add the SwedbankPaySDK library, and the SwedbankPaySDKMerchantBackend if needed. CocoaPods The SDK is also available through CocoaPods. There are two pods: SwedbankPaySDK for the core SDK, and SwedbankPaySDKMerchantBackend for the Merchant Backend utilities. Add the relevant dependencies in your Podfile: 1 pod 'SwedbankPaySDK', '~&gt; 3.0' 1 pod 'SwedbankPaySDKMerchantBackend', '~&gt; 3.0' Url Scheme and Associated Domain The Payment Url handling in the iOS SDK uses Universal Links, and additionally a custom url scheme as a fallback mechanism. You must therefore set these up in the app before using the SDK. The easiest way to add a url scheme to your app is to select the project file, go to the Info tab, scroll down to URL Types, and click the + button to add a new scheme. Insert a single unique url scheme to the URL Schemes field. You can choose the url Identifier freely, but remember that that too should be unique. The Role for the url type should be Editor. Finally, to mark this url type as the Swedbank Pay payment url scheme, open the Additional url type properties, and add a property with the key com.swedbank.SwedbankPaySDK.callback, type Boolean, and value YES. You can also edit the Info.plist file directly, if you wish. To set up universal links in your application, you first need to add the Associated Domains capability. Then, add your Merchant Backend’s domain as an applinks associated domain. Additionally, your merchant backend must have the appropriate Apple App Site Association file configured. Usage sequenceDiagram participant App participant SDK participant Merchant participant SwedbankPay as Swedbank Pay participant Ext as External App rect rgba(238, 112, 35, 0.05) note left of App: Configuration App -&gt;&gt; SDK: SwedbankPaySDK.MerchantBackendConfiguration(backendUrl: \"https://example.com/swedbank-pay-mobile/\", headers: [:]) SDK --&gt;&gt; App: configuration end opt Unless Guest Payment App -&gt;&gt; SDK: SwedbankPaySDK.Consumer(language = ..., shippingAddressRestrictedToCountryCodes = ...) SDK --&gt;&gt; App: consumer end rect rgba(138, 205, 195, 0.1) note left of App: Prepare Payment App -&gt;&gt; SDK: PaymentOrderUrls(configuration: configuration, language: ...) SDK --&gt;&gt; App: paymentOrderUrls App -&gt;&gt; SDK: PaymentOrder(urls: paymentOrderUrls, ...) SDK --&gt;&gt; App: paymentOrder end App -&gt;&gt; SDK: SwedbankPaySDKController(configuration: configuration, consumer: consumer, paymentOrder: paymentOrder) SDK --&gt;&gt; App: swedbankPaySdkController App -&gt;&gt; SDK: swedbankPaySdkController.delegate = ... App -&gt;&gt; App: Show swedbankPaySdkController rect rgba(138, 205, 195, 0.1) note left of App: Discover Endpoints SDK -&gt;&gt; Merchant: GET /swedbank-pay-mobile/ Merchant --&gt;&gt; SDK: { \"consumers\": \"/swedbank-pay-mobile/consumers\", \"paymentorders\": \"/swedbank-pay-mobile/paymentorders\" } end opt Unless Guest Payment SDK -&gt;&gt; Merchant: POST /swedbank-pay-mobile/consumers Merchant -&gt;&gt; SwedbankPay: POST /psp/consumers SwedbankPay --&gt;&gt; Merchant: rel: view-consumer-identification Merchant --&gt;&gt; SDK: rel: view-consumer-identification SDK -&gt;&gt; SDK: Show html page with view-consumer-identification SwedbankPay -&gt;&gt; SDK: Consumer identification process SDK -&gt;&gt; SwedbankPay: Consumer identification process SwedbankPay -&gt;&gt; SDK: consumerProfileRef SDK -&gt;&gt; SDK: paymentOrder.payer = { consumerProfileRef } end rect rgba(138, 205, 195, 0.1) note left of App: Payment Menu SDK -&gt;&gt; Merchant: POST /swedbank-pay-mobile/paymentorders Merchant -&gt;&gt; SwedbankPay: POST /psp/paymentorders SwedbankPay --&gt;&gt; Merchant: rel: view-paymentorder Merchant --&gt;&gt; SDK: rel: view-paymentorder SDK -&gt;&gt; SDK: Show html page with view-paymentorder SwedbankPay -&gt;&gt; SDK: Payment process SDK -&gt;&gt; SwedbankPay: Payment process opt Redirect to Third-Party Page inside SwedbankPaySDKController ① SDK -&gt;&gt; SDK: Show third-party page SDK -&gt;&gt; SDK: Intercept navigation to paymentUrl SDK -&gt;&gt; SDK: Reload html page with view-paymentorder end opt Redirect to Third-Party Page in Safari ② SDK -&gt;&gt; Ext: Launch Safari Ext -&gt;&gt; SDK: Return from Safari end opt Launch External Application SDK -&gt;&gt; Ext: Start external application Ext -&gt;&gt; SDK: Return from external application ③ end SDK -&gt;&gt; SDK: Intercept navigation to completeUrl SDK -&gt;&gt; SDK: delegate.paymentComplete() end App -&gt;&gt; App: Remove paymentFragment ① Only pages tested to work with WKWebView are opened inside SwedbankPaySDKController. This list is updated as new pages are verified. ② Other pages are opened in Safari. See the section on external applications for details on how the process returns to the SDK afterwards. ③ See the section on external applications for details. The iOS SDK is contained in the module SwedbankPaySDK. 1 import SwedbankPaySDK The Merchant Backend utilities are contained in the module SwedbankPaySDKMerchantBackend. 1 import SwedbankPaySDKMerchantBackend The main component of the SDK is SwedbankPaySDKController, a UIViewController that handles a single payment order. When initializing a SwedbankPaySDKController, you must provide a SwedbankPaySDKConfiguration that describes the server environment the SwedbankPaySDKController is working with, along with a SwedbankPaySDK.PaymentOrder, and, unless making a guest payment, a SwedbankPaySDK.Consumer. Providing a SwedbankPaySDK.Consumer makes future payments by the same payer easier. The SwedbankPaySDKConfiguration is, in most cases, static for a given server environment. Therefore, it makes sense to keep it in a convenient constant. The SwedbankPaySDK.MerchantBackendConfiguration initializer can determine your application’s custom scheme for payment urls automatically, if you have set it up as described above. 1 2 3 4 5 6 7 let swedbankPayConfig = SwedbankPaySDK.MerchantBackendConfiguration( backendUrl: \"https://example.com/swedbank-pay-mobile/\", headers: [:] ) // Make it the default for all SDKControllers SwedbankPaySDKController.defaultConfiguration = swedbankPayConfig The semantics of SwedbankPaySDK.PaymentOrder properties are the same as the fields of the POST /psp/paymentorders request. Sensible default values are provided for many of the properties. In a similar fashion to how the Android SDK works, while there is no default value for the urls property, there are convenience constructors for the SwedbankPaySDK.PaymentOrderUrls type, which are recommended for general use. Assuming you have the iOS Payment Url Helper endpoint set up with the specified static path relative to your backend url (i.e. sdk-callback/ios-universal-link), then using one of the convenience constructors taking a SwedbankPaySDK.MerchantBackendConfiguration argument will set the paymentUrl correctly. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 let paymentOrder = SwedbankPaySDK.PaymentOrder( currency = \"SEK\", amount = 1500, vatAmount = 375, description = \"Test Purchase\", language = .Swedish, urls = SwedbankPaySDK.PaymentOrderUrls( configuration: swedbankPayConfig, language: .Swedish ), payeeInfo = SwedbankPaySDK.PayeeInfo( // ① payeeName = \"Merchant1\", productCategory = \"A123\", orderReference = \"or-123456\", subsite = \"MySubsite\" ), orderItems = [ SwedbankPaySDK.OrderItem( reference = \"P1\", name = \"Product1\", type = .Product, class = \"ProductGroup1\", itemUrl = URL(string: \"https://example.com/products/123\"), imageUrl = URL(string: \"https://example.com/product123.jpg\"), description = \"Product 1 description\", discountDescription = \"Volume discount\", quantity = 4, quantityUnit = \"pcs\", unitPrice = 300, discountPrice = 200, vatPercent = 2500, amount = 1000, vatAmount = 250 ) ] ) ① payeeId and payeeReference are required fields, but default to the empty string. The assumption here is that your Merchant Backend will override the values set here. If your system works better with the Mobile Client setting them instead, they are available here also. To start a payment, create a SwedbankPaySDKController and call startPayment. You can add it to the view hierarchy any way you like, and here we are using the present function. Note that this function always uses the new Digital Payments. 1 2 3 4 let paymentController = SwedbankPaySDKController() paymentController.startPayment(paymentOrder: payment) present(paymentController, animated: true, completion: nil) To start a payment with consumer-checkin, you need to use CheckoutV2 and supply a consumer value. This function also allows merchants to remain on V2 while updating the SDK, and then to opt-in to V3 when ready. 1 2 3 4 5 6 7 8 9 10 let paymentController = SwedbankPaySDKController() paymentController.startPayment( withCheckin: true, consumer: consumer, paymentOrder: payment, userData: nil ) present(paymentController, animated: true, completion: nil) // There are, of course, many other ways of displaying a view controller The semantics of SwedbankPaySDK.Consumer properties are the same as the fields of the POST /psp/consumers. There are default values for the operation and language properties (.InitiateConsumerSession and .English, respectively). 1 2 3 4 let consumer = SwedbankPaySDK.Consumer( language = .Swedish, shippingAddressRestrictedToCountryCodes: = [\"NO\", \"SE\", \"DK\"] ) To observe the payment process, set a delegate to the SwedbankPaySDKController. When the delegate is informed that the payment process is finished, you should remove the SwedbankPaySDKController and inform the user of the result. 1 paymentController.delegate = self 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func paymentComplete() { dismiss(animated: true, completion: nil) // Check payment status from your backend // Notify user } func paymentcancelled() { dismiss(animated: true, completion: nil) // Notify user } func paymentFailed(error: Error) { dismiss(animated: true, completion: nil) // Notify user } Note that checking the payment status after completion is outside the scope of the Mobile SDK. Your backend should collect any information it needs to perform this check when it services the request to the Payment Orders endpoint made by the SwedbankPaySDKController. Problems If the payment fails for any reason, the cause will be made available as the argument of the paymentFailed(error:) delegate method. The error will be of any type thrown by your SwedbankPaySDKConfiguration. In the case of SwedbankPaySDK.MerchantBackendConfiguration this means SwedbankPaySDK.MerchantBackendError. If errors are encountered in the payment process, the Merchant Backend is expected to respond with a Problem Details for HTTP APIs (RFC 7807) message. If the payment fails because of a problem, the SwedbankPaySDK.MerchantBackendError will be .problem, the associated value being the problem as parsed from the response. The iOS SDK will parse any RFC 7807 problem, but it has specialized data types for known problem types, namely the Common Problems and the Merchand Backend Problems. Problems are expressed in Swift as enums with associated values, representing a hierarchy of problem types. At the root of the hierarchy is enum SwedbankPaySDK.Problem, with two cases: .Client and .Server. A .Client problem is one caused by client behavior, and is to be fixed by changing the request made to the server. Generally, a .Client problem is a programming error, with the possible exception of .Client(.MobileSDK(.Unauthorized)). A .Server problem is one caused by a malfunction or lack of service in the server evironment. A .Server problem is fixed by correcting the behavior of the malfunctioning server, or simply trying again later. Both .Client and .Server have an associated value, of type SwedbankPaySDK.ClientProblem and SwedbankPaySDK.ServerProblem respectively, that further classify the problems as .MobileSDK, .SwedbankPay, .Unknown or .UnexpectedContent. MobileSDK problems are ones with Merchant Backend problem types, while SwedbankPay problems have Swedbank Pay API problem types. Unknown problems are of types that the SDK has no knowledge of. .UnexpectedContent problems are not proper RFC 7807 problems, but are emitted when the SDK cannot make sense of the response it received from the backend. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 func paymentFailed(failureReason: SwedbankPaySDKController.FailureReason) { // remove SwedbankPaySDKController switch failureReason { case .Problem(.Client(.MobileSDK(.Unauthorized(let message, _)))): print(\"Credentials invalidated: \\(message)\") case .Problem(.Client(.MobileSDK)): print(\"Other client error at merchant backend\") case .Problem(.Client(.SwedbankPay(let problem))) where problem.type == .InputError: print(\"Payment rejected by Swedbank Pay: \\(problem.detail); Fix: \\(problem.action)\") case .Problem(.Client(.Unknown(let problem))): if problem.type == \"https://example.com/problems/special-problem\" { print(\"Special problem occurred: \\(problem.detail)\") } else { print(\"Unexpected problem: \\(problem.raw)\") } case .Problem(.Server(.MobileSDK(.BackendConnectionTimeout(let message, _)))): print(\"Swedbank Pay timeout: \\(message)\") case .Problem(.Server(.SwedbankPay(let problem))) where problem.type == .SystemError: print(\"Generic server error at Swedbank Pay: \\(problem.detail)\") default: break } } Payment URL And External Applications The payment process may involve navigating to third-party web pages, or even launching external applications. To resume processing the payment in the payment menu, each payment order must have a Payment Url. Let us now discuss how that payment url is used in the iOS environment. In any case, using the convenience constructors for SwedbankPaySDK.PaymentOrderUrls is recommended; they will generate a unique payment url, which will be routed to the application in all cases, assuming the application and the merchant backend are configured correctly. SwedbankPaySDKController internally uses a WKWebView, and in many cases third-party pages can be opened inside that web view. In these cases the SDK can intercept the navigation to the payment url and reload the payment menu without further setup. Unfortunately, our testing has revealed that some web pages used in confirmation flows are incompatible with being opened in a web view. Because of these cases, SwedbankPaySDKController will only open known-good pages internally, and will open other pages in Safari instead. The SDK contains a list of domain names of pages tested to work in the web view. You can also specify your own list of domains, and there are debugging features available for testin unknown pages in the web view. Pull requests updating the list of good domains in the SDK are welcome. sequenceDiagram participant SDK participant Web as Web View participant Safari Web -&gt;&gt; SDK: Navigate to third-party web page SDK -&gt;&gt; SDK: Check if page is in list of good domains alt Domain is good SDK -&gt;&gt; Web: Allow navigation Web -&gt;&gt; Web: Load third-party page else Domain is not good SDK -&gt;&gt; Web: Cancel navigation SDK -&gt;&gt; Safari: Open third-party page end Returning to the payment menu from inside the web view is simple: detect the navigation and override it to reload the payment menu instead. sequenceDiagram participant Page as 3rd Party Page participant Web as Web View participant SDK Page -&gt;&gt; Web: Navigate to payment url Web -&gt;&gt; SDK: Navigate to payment url SDK -&gt;&gt; Web: Cancel navigation SDK -&gt;&gt; SDK: Reload payment menu Returning to the payment menu from Safari is more involved. The merchant backend page explains the process from the backend perspective; let us now view it from the iOS side. When the third party page wants to return to the payment menu, it navigates to the payment url. As this navigation is happening inside Safari, the payment url must provide some meaningful respose when Safari makes the request. However, even before that happens, consider the case where the payment url is a universal link for the application using the SDK. Assuming the conditions for opening universal links in the registered application are met, then Safari will never actually request the payment url, but will instead open the application, giving it the universal link in its Application Delegate’s application(_:continue:restorationHandler:) method. Recall that we enabled universal links for the backend url’s domain in the installation instructions. Note that the merchant backend must also be properly configured to enable universal links. The application delegate is, of course, squarely in the domain of the application; the SDK cannot hook into it automatically. Therefore, you need to implement the application(_:continue:restorationHandler:) method, and pass control over to the SDK when a Swedbank Pay SDK Payment Url is passed into it. Do this by calling the SwedbankPaySDK.continue(userActivity:) method. 1 2 3 4 5 6 7 func application( _ application: UIApplication, continue userActivity: NSUserActivity, restorationHandler: @escaping ([UIUserActivityRestoring]?) -&gt; Void ) -&gt; Bool { return SwedbankPaySDK.continue(userActivity: userActivity) } sequenceDiagram participant Page as 3rd Party Page participant Safari participant App as Application participant SDK Page -&gt;&gt; Safari: Navigate to payment url Safari -&gt;&gt; Safari: Recognize universal link Safari -&gt;&gt; App: Bring to foreground Safari -&gt;&gt; App: application(application, continue: userActivity, restorationHandler: restorationHandler) App -&gt;&gt; SDK: SwedbankPaySDK.continue(userActivity: userActivity) SDK -&gt;&gt; SDK: Reload payment menu Testing has shown, however, that the navigation to the payment url is not always processed as a universal link, and is instead opened in Safari. A major reason for this happening are the conditions placed on routing a universal link to the registered application. A crucial condition to consider is that the navigation must have started from user interaction. It appears that many third party pages involved in verification flows will navigate to the payment url not from user interaction directly, but through e.g. timers. This will, unfortunately, prevent the link from being opened in the application. As it stands, we need a way to get back to the application even when the payment url is opened in Safari. The simplest way of accomplishing this is to respond with a redirect to a custom scheme url. Doing that will, however, always show an unattractive confirmation alert before the user is directed to the application. Therefore, let us first consider if there is a way to reattempt the universal link navigation, while attempting to maximize the chance of it being routed to the application. Reviewing the conditions for universal links opening in the registered application, we note two things: Firstly, the navigation must originate from user interaction. Thus, opening the payment url in Safari must produce a page with a control the user can interact with, which must trigger a navigation to the payment url. Secondly, the navigation must be to a domain different to the current page. This means that opening the payment url must redirect to a page on a different domain, so that a navigation back to the payment url from that page is given to the application to handle. As explained on the mechant backend page, we solve this by having the payment url respond with a redirect response to a page with a link to the payment url (but see below). sequenceDiagram participant User participant Page as 3rd Party Page participant Safari participant Merchant as Payment Url Host participant Trampoline as Payment Url Trampoline participant App as Application participant SDK Page -&gt;&gt; Safari: Navigate to payment url (at Merchant) Safari -&gt;&gt; Merchant: GET &lt;payment url&gt; Merchant -&gt;&gt; Safari: 301 Moved Permanently Location: &lt;redirect url&gt; Safari -&gt;&gt; Trampoline: GET &lt;redirect url&gt; Trampoline -&gt;&gt; Safari: &lt;http&gt;...&lt;a href=\"&lt;payment url&gt;\"&gt;...&lt;/http&gt; Safari -&gt;&gt; User: Page with \"Back to Application\" button User -&gt;&gt; Safari: Tap on button rect rgba(238, 112, 35, 0.05) note left of Safari: Same as direct path Safari -&gt;&gt; Safari: Recognize universal link Safari -&gt;&gt; App: Bring to foreground Safari -&gt;&gt; App: application(application, continue: userActivity, restorationHandler: restorationHandler) App -&gt;&gt; SDK: SwedbankPaySDK.continue(userActivity: userActivity) SDK -&gt;&gt; SDK: Reload payment menu end Finally, to prevent the user being stuck in a situation where universal links fail to work despite our efforts, and to help in the development phase where configurations may end up being broken from time to time, we also have a custom scheme fallback. The way this works is that the when the payment url link is tapped on the page where the payment url redirected to, then in that instance the payment url will redirect to a custom scheme url instead. Now this is, of course, more or less impossible to do, so we relax the requirements of the payment url slightly: In addition to the original payment url, the SDK accepts a payment url with any number of additional query parameters added (note that none may be removed or modified, though). This enables us to alter the behavior of the backend on the “same” payment url. To forward the custom-scheme payment urls to the SDK, implement the application(_:open:options:) method in your application delegate, and call SwedbankPaySDK.open(url: url) to let the SDK handle the url. 1 2 3 4 5 6 7 func application( _ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:] ) -&gt; Bool { return SwedbankPaySDK.open(url: url) } sequenceDiagram participant User participant Page as 3rd Party Page participant Safari participant Merchant as Payment Url Host participant Trampoline as Payment Url Trampoline participant App as Application participant SDK Page -&gt;&gt; Safari: Navigate to payment url (at Merchant) Safari -&gt;&gt; Merchant: GET &lt;payment url&gt; Merchant -&gt;&gt; Safari: 301 Moved Permanently Location: &lt;redirect url&gt; Safari -&gt;&gt; Trampoline: GET &lt;redirect url&gt; Trampoline -&gt;&gt; Safari: &lt;http&gt;...&lt;a href=\"&lt;payment url with fallback flag&gt;\"&gt;...&lt;/http&gt; Safari -&gt;&gt; User: Page with \"Back to Application\" button User -&gt;&gt; Safari: Tap on button Safari -&gt;&gt; Merchant: GET &lt;payment url with fallback flag&gt; Merchant -&gt;&gt; Safari: 301 Moved Permanently Location: &lt;custom scheme url&gt; Safari -&gt;&gt; User: Confirmation Dialog User -&gt;&gt; Safari: Accept App Launch Safari -&gt;&gt; App: Bring to foreground Safari -&gt;&gt; App: application(application, open: url) App -&gt;&gt; SDK: SwedbankPaySDK.open(url: url) SDK -&gt;&gt; SDK: Reload payment menu Back: Android Next: Custom Backend",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/ios.html"
  },{
    "title": "Items",
    "text": "Items The items field of the paymentOrder is an array containing items that will affect how the payment is performed. warning MobilePay: Please note that by adding the shoplogoUrl field, the default logo-url configured during contract setup will be overridden for this transaction. If logo-url is missing in the contract setup, it must be provided as an input parameter. Show fields Hide fields Required Field Type Description   creditCard object The card object.   rejectDebitCards bool true if debit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectDebitCards bool true if debit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectCreditCards bool true if credit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectConsumerCards bool true if consumer cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectCorporateCards bool true if corporate cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   swish object The Swish object.   enableEcomOnly bool true to enable Swish in e-commerce view only.   mobilePay object The MobilePay object.   shoplogoUrl string URI to the logo that will be visible at MobilePay Online. For it to be displayed correctly in the MobilePay app, the image must be 250x250 pixels, a png or jpg served over a secure connection using https, and be publicly available. This URI will override the value configured in the contract setup.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/items.html"
  },{
    "title": "Items",
    "text": "Items The items field of the paymentOrder is an array containing items that will affect how the payment is performed. warning MobilePay: Please note that by adding the shoplogoUrl field, the default logo-url configured during contract setup will be overridden for this transaction. If logo-url is missing in the contract setup, it must be provided as an input parameter. Show fields Hide fields Required Field Type Description   creditCard object The card object.   rejectDebitCards bool true if debit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectDebitCards bool true if debit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectCreditCards bool true if credit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectConsumerCards bool true if consumer cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectCorporateCards bool true if corporate cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   swish object The Swish object.   enableEcomOnly bool true to enable Swish in e-commerce view only.   mobilePay object The MobilePay object.   shoplogoUrl string URI to the logo that will be visible at MobilePay Online. For it to be displayed correctly in the MobilePay app, the image must be 250x250 pixels, a png or jpg served over a secure connection using https, and be publicly available. This URI will override the value configured in the contract setup.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/items.html"
  },{
    "title": "Java",
    "text": "Installation The SDK jar file is hosted on maven central. Look up the latest version. Add the following dependency to you application: 1 2 3 4 5 &lt;dependency&gt; &lt;groupId&gt;com.swedbankpay.pax&lt;/groupId&gt; &lt;artifactId&gt;swedbankpay-pax-sdk&lt;/artifactId&gt; &lt;version&gt;1.2.38&lt;/version&gt; &lt;/dependency&gt; How to use You need to implement the callback interface SwpTrmCallbackInterface to receive asynchronous callbacks from the terminal. This class then need to be provided when creating an instance of SwpTrmInterface. Once an instance is created call start. Supplied SaleApplInfo when calling Start method decides whether to implement a server or just run as a client. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 public class PaxController implements SwpTrmCallbackInterface { private SwpTrmInterface paxTerminal; public void initialize() { int port = 11000; SwpTrmCallbackInterface callbackInterface = this; Config config = new Config.ConfigBuilder(\"http://\" + ipTextField.getText(), port).build(); List&lt;SaleCapabilitiesEnumeration&gt; saleCapabilities = Arrays.asList(SaleCapabilitiesEnumeration.PRINTER_RECEIPT, ...); SwpTrmInterface paxTerminal = paxTerminal = PAXTrmImpl.create(config, callbackInterface); paxTerminal = paxTerminal.start(new SaleApplInfo(\"Demo\", \"Test SwpIf\", \"1.0\", \"poi-id\", saleCapabilities, TerminalEnvironmentEnumeration.ATTENDED)); } @Override void terminalDisplayEvent(int txtId, String text) {} @Override void terminalNotificationEvent(EventToNotifyEnumeration type, String eventDetails) {} @Override void terminalAddressObtainedEvent(String ipv4, int port) {} @Override boolean onPrintRequest(boolean transactionEnded, Receipt receipt) {} @Override void requestForConfirmationEvent(String message, ConfirmationResult cashierConfirmation) {} } There are two ways to call each method, synchronous and asynchronous. In the synchronous method call the program stops and waits until the response arrives. In the asynchronous method call the program continues to perform other tasks and when the response arrives the program handles it. The asynchronous call is especially useful for the PaymentRequest where the response arrives after the payment process is done. Open Call openAsync to send a login and wait for answer. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public void onOpenButtonClick() { //Asynchronous example CompletableFuture&lt;OpenResult&gt; openResult=paxTerminal.openAsync(); //Register method to call when the response arrives openResult.thenAccept(this::onOpenResult); } //When the response arrives display it private void onOpenResult(OpenResult result) { if (result.isSuccess()) { logOutput(String.format(\"Login successful. (Software version: %s, Environment: %s, Serial number: %s)\", result.getSoftwareVersion(), result.getEnvironment(), result.getSerialNumber())); } else { logOutput(String.format(\"Login failed with error: %s. (%s)\", result.getErrorCondition(), result.getResponseText())); } } Payment &amp; refund Call paymentAsync or refundAsync to start a transaction and wait for response. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public void onPayButtonClick() { try { CompletableFuture&lt;PaymentRequestResult&gt; payment = paxTerminal.paymentAsync(new BigDecimal(amountTextField.getText()), BigDecimal.ZERO, \"SEK\"); payment.thenAccept(this::showPaymentResultMessage); } catch (NumberFormatException e) { logOutput(\"Invalid amount!\"); } } private void showPaymentResultMessage(PaymentRequestResult paymentResult) { if (paymentResult.isSuccess()) { logOutput(\"Payment ok.\"); printReceipt(paymentResult.getReceipt()); } else { logOutput(\"Payment failed: \" + paymentResult.getErrorCondition() + \", (\" + paymentResult.getResponseText() + \")\"); } } public void onRefundButtonClick() { logOutput(\"Starting refund...\"); try { CompletableFuture&lt;PaymentRequestResult&gt; payment = paxTerminal.refundAsync(new BigDecimal(amountTextField.getText()), \"SEK\", referenceTextField.getText()); payment.thenAccept(this::showRefundResultMessage); } catch (NumberFormatException e) { logOutput(\"Invalid amount!\"); } } private void showRefundResultMessage(PaymentRequestResult refundResult) { if (refundResult.isSuccess()) { logOutput(\"Refund ok\"); printReceipt(refundResult.getReceipt()); } else { logOutput(\"Refund failed: \" + refundResult.getErrorCondition() + \", (\" + refundResult.getResponseText() + \")\"); } } Get payment instrument Call getPaymentInstrumentAsync to start a transaction when a card needs to be read before amount is known. Call either paymentAsync or refundAsync to proceed the actual payment. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 protected void onPaymentInstrumentButtonClick() { CompletableFuture&lt;PaymentInstrumentResult&gt; result = paxTerminal.getPaymentInstrumentAsync(); result.thenAccept(this::showPaymentInstrumentResultMessage); } private void showPaymentInstrumentResultMessage(PaymentInstrumentResult result) { if (result.isSuccess()) { logOutput(String.format(\"Payment instrument response successful: Type=%s, Brand=%s, CNA=%s, PAN=%s\" ,result.getCardType(), result.getBrand(), result.getCNA(), result.getPAN())); } else { logOutput(\"Payment instrument did not succeed: \" + result.getErrorCondition() + \". (\" + result.getResponseText() + \")\"); } } Close Call close to send logout. 1 2 3 4 5 6 7 8 9 10 11 protected void onCloseButtonClick() { logOutput(\"Closing terminal...\"); CompletableFuture&lt;NexoRequestResult&gt; result = paxTerminal.closeAsync(); result.thenAccept(r -&gt; { if (r.isSuccess()) { logOutput(\"Logout successful\"); } else { logOutput(\"Logout failed with the following error: \" + r.getErrorCondition()); } }); } Abort Call abort to abort a payment transaction. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public void onAbortButtonClick() { logOutput(\"Aborting payment...\"); CompletableFuture&lt;AbortRequestResult&gt; payment = paxTerminal.abortAsync(); payment.thenAccept(this::showAbortResultMessage); } private void showAbortResultMessage(AbortRequestResult result) { if (result.isSuccess()) { logOutput(\"Abort ok\"); } else { logOutput(\"Abort was not ok. Try to reverse payment.\"); } } Callbacks To receive event callbacks from the terminal the following methods need to be implemented in the interface SwpTrmCallbackInterface. Terminal Display Event Get status information and displays from the terminal. 1 2 3 4 @Override public void terminalDisplayEvent(int txtId, String text) { LOG.info(\"Terminal event: id {}, text: {}\", txtId, text); } Terminal Notification Event The event function is used by Swedbank Pay Payment Application to communicate an ‘out of sequence’ event - the beginning of maintenance for example. 1 2 3 4 @Override public void terminalNotificationEvent(EventToNotifyEnumeration type, String eventDetails) { LOG.info(\"Terminal notification event: type {}, event details {}\", type, eventDetails); } Terminal Address Obtained Event Called when a new terminal is installed. 1 2 3 4 @Override public void terminalAddressObtainedEvent(String ipv4, int port) { LOG.info(\"Terminal address obtained event: ipv4 {}, port {}\", ipv4, port); } Print Request Called when a receipt is to be printed. The print result needs to be confirmed from the ECR. 1 2 3 4 5 6 7 8 9 @Override public boolean onPrintRequest(boolean transactionEnded, Receipt receipt) { LOG.info(\"Print receipt: \" + receipt.getCustomerFormattedReceipt()); if (transactionEnded) { logOutput(\"Transaction ended\"); } return true; } Request For Confirmation Event Called when there is a confirmation needed by the cashier, i.e when a signature purchase needs to be confirmed. Will soon be deprecated when signature purchase is removed. 1 2 3 4 5 6 @Override public void requestForConfirmationEvent(String message, ConfirmationResult cashierConfirmation) { LOG.info(\"Message: \" + message) //Confirm with true if the signature matches cashierConfirmation.confirm(true); } Logging Logging is done through Slf4j. To see what is going on set DEBUG level for the following package com.swedbankpay. When running the application standalone it can be handy to see the communication between the ECR and the terminal. To log communication between the ECR and terminal to some text window in the application the following can be used. This can be enabled or disabled runtime. It is disabled by default. 1 2 3 4 5 6 paxTerminal.addLoggAppender(this::appender); paxTerminal.enableTraceLog(true); ... private void appender(String text) { Platform.runLater(() -&gt; outputTextArea.appendText(text)); } Error handling When an error occurs either in the terminal or within this codebase, the framework will handle it and always return a result object with the following three fields populated: 1 2 3 result = FAILURE statusCode = 500 errorCondition = \"The nature of the error\" There are five cases where the error can occur: Communication error with the terminal Ex connection timeout Terminal error response There was an error in the terminal resulting in a failure response. Parsing terminal response There was an error when parsing the response from the terminal. Creating result object There was an error when creating the result object. User error The user has provided faulty input. Receipts Receipts are created when a payment or reversal has been completed or on the request from the terminal. The receipt contains both the raw customer and/or merchant data in json format. It also contains a preformatted printable string for each of the two. The preformatted receipts are localized using the locale provided in the terminal config. In the future hopefully we can take the locale from the payment response if the customer chooses a different language during the payment process. There is also the possibility to create your own formatter by extending the class AbstractReceiptFormatter and then use the format(...) method on the Receipt object from the payment. 1 2 3 PaymentRequestResult payment = paxTerminal.paymentAsync(...).join(); Receipt receipt = payment.getReceipt().format(new MyCustomReceiptFormatter()); String customerReceipt = receipt.getCustomerFormattedReceipt(); You also have access to the receipt data object to extract the information you need. 1 JSONObject json = receitp.getCustomerReceiptData();",
    "tags": "",
    "url": "/pax-terminal/java.html"
  },{
    "title": "License",
    "text": "Licensing The licensing of Swedbank Pay’s open source software should be one approved by the Open Source Initiative and preferably one that is compatible with closed source, enterprise software. The Apache 2.0 License is therefore a good fit and should be chosen when possible: Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright 2023 Swedbank Pay and contributors Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. The license should be placed in a file called LICENSE in the root of the repository and preferably be included as a header in all source code files in the same repository.",
    "tags": "",
    "url": "/checkout-v3/resources/development-guidelines/license.html"
  },{
    "title": "Enterprise",
    "text": "Enterprise When the payer is identified and authenticated by the merchant, the payer’s identity can be included in the Payment Order request. Delegated Strong Customer Authentication (hereby abbreviated as “Delegated SCA”) is performed as an alternative to Checkin when creating the Payment Order upon the initialization of the Payment Menu. You can only use Delegated SCA if you have an agreement with Swedbank Pay. The additional nationalIdentifier field described below should be added to the paymentorder.payer object already in the Payment Order creation request, as an alternative to consumerProfileRef. warning Bank ID authentication required: In order to use the Enterprise feature, you need a legal agreement with Swedbank Pay which mandates that the payer identified by the nationalIdentifier is authenticated with Bank ID prior to the request. An abbreviated example of an Enterprise request looks like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"payer\": { \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" } } } } Required Field Type Description check paymentOrder object The payment order object.   payer object The payer object containing information about the payer relevant for the payment order.   nationalIdentifier string The national identifier object.   socialSecurityNumber string The payer’s social security number. Must be part of what you get from your authentication process.   countryCode string The country code of the payer. When the payer is authenticated by the merchant, some payment instruments will allow a more frictionless payment process. Invoice One-Click Payments does not require the last 4/5 digits of the payer’s social security number (SSN), for instance. Below you can see an example of the payment window with and without Enterprise. In the first image, the SSN is removed altogether because the payer is authenticated by the merchant. In the bottom image, the last 4/5 digits of the SSN are required.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/mac.html"
  },{
    "title": "Enterprise",
    "text": "Enterprise When the payer is identified and authenticated by the merchant, the payer’s identity can be included in the Payment Order request. Delegated Strong Customer Authentication (hereby abbreviated as “Delegated SCA”) is performed as an alternative to Checkin when creating the Payment Order upon the initialization of the Payment Menu. You can only use Delegated SCA if you have an agreement with Swedbank Pay. The additional nationalIdentifier field described below should be added to the paymentorder.payer object already in the Payment Order creation request, as an alternative to consumerProfileRef. warning Bank ID authentication required: In order to use the Enterprise feature, you need a legal agreement with Swedbank Pay which mandates that the payer identified by the nationalIdentifier is authenticated with Bank ID prior to the request. An abbreviated example of an Enterprise request looks like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"payer\": { \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" } } } } Required Field Type Description check paymentOrder object The payment order object.   payer object The payer object containing information about the payer relevant for the payment order.   nationalIdentifier string The national identifier object.   socialSecurityNumber string The payer’s social security number. Must be part of what you get from your authentication process.   countryCode string The country code of the payer. When the payer is authenticated by the merchant, some payment instruments will allow a more frictionless payment process. Invoice One-Click Payments does not require the last 4/5 digits of the payer’s social security number (SSN), for instance. Below you can see an example of the payment window with and without Enterprise. In the first image, the SSN is removed altogether because the payer is authenticated by the merchant. In the bottom image, the last 4/5 digits of the SSN are required.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/mac.html"
  },{
    "title": "Merchant Backend Sample Code",
    "text": "You can find sample implementations of the Merchant Backend at this Github repository. Currently there are available the following: node.js Java Please refer to the sample code documentation for instructions for running a local development server, and/or deploying to selected cloud services. Do note that if you are running a local server over http, you will need to allow insecure communications in the mobile application; otherwise any payments will immediately fail due to a security error. The samples provide a fully functioning API for the SDK, but the implementations are, of course, devoid of any business logic. They should, nevertheless, provide a good starting point toward integration with your business systems. Merchant Backend Android",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/merchant-backend-sample-code.html"
  },{
    "title": "Merchant Backend V2",
    "text": "The Merchant Backend API serves as a simple starting point, and an illustrative example of how to integrate the SDK to your backend systems. The SDK has a Configuration implementation for a backend implementing this API; in addition, there is both a Node.js and a Java sample implementation of this API available. Even if you plan to integrate the SDK using your own backend API, it is recommended to read through this chapter; especially the section Payment Url Helper Endpoints, which will illustrate how any paymentUrl created for the SDK should behave. The Mobile SDK Merchant Backend API contains a total of six endpoints, three of which have statically defined paths. An OpenAPI specification is available. (It may be easier to view it in the Swagger Editor.) The main part of the API is designed as a transparent wrapper around the Swedbank Pay API, which is the same one used in Checkout. Additionally, two “helper” endpoints are specified, which facilitate the proper routing of the Payment Url back to the originating app. Authentication And Authorization You should have some authorization and authentication measures in place to prevent misuse of your Merchant Backend API. The sample implementations have a very rudimentary API key header check. This may or may not be sufficient to your purposes. You should adapt the sample implementation or create your own according to your security needs. The mobile component of the SDK allows adding your own headers to the requests it makes. Therefore you can build your own authentication and authorization measures by adding custom headers in the app, and checking that they have the correct content in the backend. The Merchant Backend Configuration To use a backend implementing the Merchant Backend API, you can use the Merchant Backend Configuration provided with the SDK. This implementation is available as SwedbankPaySDK.MerchantBackendConfiguration on iOS and com.swedbankpay.mobilesdk.merchantbackend.MerchantBackendConfiguration on Android; on Android you create the MerchantBackendConfiguration object via a MerchantBackendConfiguration.Builder. At a minimum, you must supply the url of the Merchant Backend, i.e. the url of the Root Endpoint. On iOS, you must also have registered a URL type for the SDK: that URL type must have a single scheme, and an additional property with name com.swedbank.SwedbankPaySDK.callback, type Boolean, and value YES. Alternatively you may set the url scheme explicitly in the initializer. Refer to the class documentation for more options. Root Endpoint The root endpoint is used to discover the main API endpoints. The URL of the root endpoint is what is configured as the “Backend URL” in the mobile SDK component. The point of this is to not bind your service to any particular path or even domain. In most cases, however, you can serve a static response for the root endpoint, with the other endpoint urls being relative to the root endpoint. The sample implementations do this. Request 1 2 3 GET /swedbank-pay-mobile/ HTTP/1.1 Host: example.com Your-Api-Key: secretish Response 1 2 3 4 5 6 7 HTTP/1.1 200 OK Content-Type: application/json { \"consumers\": \"/swedbank-pay-mobile/consumers\", \"paymentorders\": \"/swedbank-pay-mobile/paymentorders\" } Field Type Description consumers string URL of the “consumers” endpoint. Resolved against the root endpoint URL. paymentorders string URL of the “paymentorders” endpoint. Resolved against the root endpoint URL. N.B! The API as specified allows assigning endpoints to hosts other that the root endpoint host. However, as this seen to be an uncommon use case, the mobile component of the SDK is, by default, configured to only accept links to the domain of the root endpoint, or its subdomains. If your configuration uses other hosts, you must manually allow them in your mobile app’s configuration. Consumers Endpoint The consumers endpoint is used to start a consumer identification session. It is specified as a transparent wrapper around the corresponding Swedbank Pay API. The sample implementations do superficial input validation, and forward the request to the Swedbank Pay API without further processing. You are free to override this default behavior as you see fit in your implementation, but the default should be fine for most use-cases. The expected response is the same as the expected response to the Swedbank Pay API. The default is to pass the response from Swedbank as-is; you should probably not modify this behavior. Specifically, the response must contain the view-consumer-identification operation. Request 1 2 3 4 5 6 7 8 9 10 POST /swedbank-pay-mobile/consumers HTTP/1.1 Host: example.com Your-Api-Key: secretish Content-Type: application/json { \"operation\": \"initiate-consumer-session\", \"language\": \"sv-SE\", \"shippingAddressRestrictedToCountryCodes\" : [\"NO\", \"SE\", \"DK\"] } Required Field Type Description check operation string initiate-consumer-session, the operation to perform. check language string Selected language to be used in Checkin. Supported values are sv-SE, nb-NO or en-US. check shippingAddressRestrictedToCountryCodes string List of supported shipping countries for merchant. Using ISO-3166 standard. At this point, the Merchant Backend will make a corresponding request to the Swedbank Pay API, using its secret access token. Forwarded Request 1 2 3 4 5 6 7 8 9 10 POST /psp/consumers HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"operation\": \"initiate-consumer-session\", \"language\": \"sv-SE\", \"shippingAddressRestrictedToCountryCodes\" : [\"NO\", \"SE\", \"DK\"] } The Merchant Backend will then forward the response it received back to the calling app. Response &amp; Forwarded Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"token\": \"7e380fbb3196ea76cc45814c1d99d59b66db918ce2131b61f585645eff364871\", \"operations\": [ { \"method\": \"GET\", \"rel\": \"redirect-consumer-identification\", \"href\": \"https://ecom.externalintegration.payex.com/consumers/sessions/7e380fbb3196ea76cc45814c1d99d59b66db918ce2131b61f585645eff364871\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"rel\": \"view-consumer-identification\", \"href\": \"https://ecom.externalintegration.payex.com/consumers/core/scripts/client/px.consumer.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"contentType\": \"application/javascript\" } ] } Field Type Description token string A session token used to initiate Checkout UI. operations array The array of operation objects to choose from, described in detail in the table below. rel string The relational name of the operation, used as a programmatic identifier to find the correct operation given the current state of the application. method string The HTTP method to use when performing the operation. contentType string The HTTP content type of the target URL. Indicates what sort of resource is to be found at the URL, how it is expected to be used and behave. href string The target URL of the operation. Payment Orders Endpoint The paymentorders endpoint is used to create a new Payment Order. It is specified as a transparent wrapper around the corresponding Swedbank Pay API. However, it is to be expected that your backend will need to process the payment order both before making the Swedbank Pay API call, and after receiving the response from Swedbank Pay. The sample implementations validate the input, then create an internal unique identitifer for the payment order, and set that as paymentorder.payeeInfo.payeeReference, before making the Swedbank Pay call. After receiving the response, the backend stores the id of the Payment Order for future use, and forwards the response to the SDK. Optionally, if your implementation uses instrument mode payments, your backend can return the list of valid instruments, along with an endpoint to change the instrument. If you do this, you must also implement the Change Instrument endpoint. The Merchant Backend Configuration on the client side can then use this endpoint to change the instrument of an ongoing payment order. A production implementation should validate the payment order also from a business logic perspective. This is, naturally, outside the scope of the SDK, as is any other processing you may wish to perform with the payment order. The SDK expects the same form of response as returned from the Swedbank Pay API. Specifically, the response must contain the view-paymentorder operation. Request 1 2 3 4 5 6 7 8 POST /swedbank-pay-mobile/paymentorders HTTP/1.1 Host: example.com Your-Api-Key: secretish Content-Type: application/json { \"paymentorder\": { \"①\": \"\" } } Required Field Type Description check paymentOrder object The payment order to create ① The contents of paymentorder are omitted here. See Checkout Documentation for details. At this point, the Merchant Backend will preform necessary processing, and make a corresponding request to the Swedbank Pay API, using its secret access token. Forwarded Request 1 2 3 4 5 6 7 8 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { } } Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 201 Created Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE\", \"rel\": \"view-paymentorder\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } The Merchant Backend will then forward the response it received back to the calling app. If instrument mode is used, an you wish to be able to change the instrument, you can provide the list of valid instruments, and an endpoint for changing the instrument. This additional data is placed in an object under the key “mobileSDK”. Forwarded Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 201 Created Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE\", \"rel\": \"view-paymentorder\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] \"mobileSDK\": { \"validInstruments\": [\"CreditCard\", \"Invoice-PayExFinancingSe\"], \"setInstrument\": \"/paymentorders/1234/setInstrument\" } } Set Instrument Endpoint You only need to implement this endpoint if you are using instrument mode payments. This endpoint is invoked when making a request to the mobileSDK.setInstrument url of a payment order created with the Payment Orders endpoint. This endpoint forwards the PATCH request made to it to the corresponding Swedbank Pay endpoint, as identified by the update-paymentorder-setinstrument operation of the payment order. It passes the response to that request back to the SDK. The sample implementation verifies the request body to contain exactly the operation SetInstrument and a string instrument. Request 1 2 3 4 5 6 7 8 9 10 11 POST /swedbank-pay-mobile/paymentorders HTTP/1.1 Host: example.com Your-Api-Key: secretish Content-Type: application/json { \"paymentorder\": { \"operation\": \"SetInstrument\", \"instrument\": \"CreditCard\" } } Required Field Type Description check paymentOrder object The changes to make to the payment order check operation string The operation to perform: SetInstrument check instrument string The instrument to set Merchant Backend will then make a corresponding request to the Swedbank Pay API. Forwarded Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"SetInstrument\", \"instrument\": \"CreditCard\" } } The Merchant Backend will then forward the response it received back to the calling app. If needed, you can append the mobileSDK object to this response as well. If it is missing, the SDK will assume the original values are still valid. Response &amp; Forwarded Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 201 Created Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE\", \"rel\": \"view-paymentorder\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } Payment Url Helper Endpoints The Payment Url helper endpoints do not interact directly with Swedbank Pay. Instead, they are used to route any navigations to the payment order’s payment url to the app using the SDK. The payment url allows navigations to third-party sites to happen as a part of the payment process. To continue the payment after any third-party processes, navigating to the payment url is expected to load the payment menu again. In the case of an app using the SDK, this means that the payment url must be routed to that app, and the app must react to that url by reloading the payment menu. Furthermore, for maximum compatibility, the payment url should be a regular https url. Since we want the payment urls to be https urls, they must be hosted somewhere. These helper endpoints facilitate that. Each platform has its own payment url helper, due to the platforms’ different requirements for url routing. The endpoints take query arguments to enable apps using the SDK to locally generate unique payment urls for each payment order. The endpoints have no side-effects, and will always return the same response for the same query arguments. The payment url helper endpoints are specified with static paths relative to the root endpoint url. This is done so that payment urls can be generated locally on the app, without needing to make a network round trip at that point. The SDK has no hard requirement for the helper endpoint urls to have such a relationship to the root endpoint url, but it does contain utility methods for easier integration when that is the case. If you wish to host the payment url helper endpoints elsewhere, or, indeed, replicate the behavior with some other schema for the payment urls, you must manually set paymentorder.urls.paymentUrl to the correct value when creating your payment orders. Importantly, the payment url helper endpoints must be accessible without any authentication headers. This is because the scenario where they will be used is when a third-party site wishes to navigate back to the payment order. Such a site will necessarily not have any authentication tokens related to your backend. Consequently, it is important to ensure that these endpoints do not inadvertently disclose information. The sample implementations serve these payment url helper endpoints at the specified static paths. N.B! The SDK generates unique payment urls by adding unique query arguments to the helper endpoint url. These payment urls only have meaning on the generating device, in the generating app. Opening them on another device will be unable to navigate the user to the originating payment menu. Android Payment Url Helper The Android payment url helper endpoint expects a query parameter named package: the package name of the Android application to redirect to. It has no requirements as to the existence or value of other query parameters. As the application using the SDK knows its own package name, it can use this endpoint to generate a payment url that is routed back to itself. The specified path for the Android payment url helper endpoint is sdk-callback/android-intent. The default constructors of the Android SDK form payment urls by appending sdk-callback/android-intent to the backend url, i.e. the root endpoint, and adding the package query parameter with the containing application’s package name, and an id query parameter with a random value. The endpoint responds with an html document that attempts to immediately redirect to an Intent-scheme Url. That url is constructed such that it uses the value of the package query parameter as the target package of the intent. The action of the intent shall be com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER; the SDK has an intent filter for this action. The uri (data) of the intent shall be the full url used in the request. The html document shall also contain a link to that same url. This is needed because in some cases the browser will block the redirect to an Intent-scheme url, and will instead require that the navigation to that url happen from a user interaction. Request 1 2 GET /swedbank-pay-mobile/sdk-callback/android-intent?package=your.ecom.app&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d HTTP/1.1 Host: example.com Required Field Type Description check package string The package name of the Android application to redirect to Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: text/html &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Payment&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"https://design.swedbankpay.com/v/4.3.0/styles/dg-style.css\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width\"&gt; &lt;meta http-equiv=\"refresh\" content=\"0;url=intent://example.com/swedbank-pay-mobile/sdk-callback/android-intent?package=your.ecom.app&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=your.ecom.app;end; ①\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"text-center\"&gt; &lt;img src=\"https://design.swedbankpay.com/v/4.3.0/img/swedbankpay-logo.svg\" alt=\"Swedbank Pay\" height=\"120\"&gt; &lt;p&gt;&lt;a class=\"btn btn-executive\" href=\"intent://example.com/swedbank-pay-mobile/sdk-callback/android-intent?package=your.ecom.app&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=your.ecom.app;end;\"&gt;Back to app&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; ① The intent url is transformed to an Android Intent using the data after the #Intent; token. The uri of that intent is the intent url up to that token, with the intent scheme replaced according to the scheme= parameter – in this case https. Using a payment url crafted this way causes an intent with the payment url to be delivered to the application when a third-party page navigates to the payment url. The SDK receives this intent, recognizes the payment url, and reloads the payment menu. N.B! It is possible to craft arbitrary com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER intents using this endpoint. However, further processing of such intents is dependent on local data, and thus this endpoint leaks no information. Indeed, it is conceptually possible for two different devices to use the same payment url to refer to different payments. Your implementation may restrict the requests it serves; e.g. you may only allow a specific package. iOS Payment Url Helper The iOS payment url helper endpoint is more involved than the Android one. While a similar mechanism could be used with custom url schemes, doing so will not provide optimal user experience: custom schemes will show a confirmation dialog before being routed to the handling application, and the content of that dialog is not under developer control. Instead, the best practice for assigning urls to applications is to use Universal Links. With the merchant backend host and the iOS application using the SDK configured correctly, the payment url becomes a universal link. Universal links function such that they are given directly to the handling application. This means that if the navigation to the payment url is handled as a unversal link, the actual payment url is never dereferenced before being handled by the application. In this scenario, is does not matter what kind of response would be received by making a GET request to the payment url. Unfortunately, this is not guaranteed to happen. As documented, universal links open the registered application “when [the user] tap[s] links to your website within Safari”, but “When a user browses your website in Safari and taps a universal link in the same domain, the system opens that link in Safari – If the user taps a universal link in a different domain, the system opens the link in your app.” This presents two preconditions: the navigation must originate from user interaction, and the domain of the universal link must be different to the domain of the current page. Also, practice has shown that universal links may still sometimes fail to work as intended, so we must have some way of escaping that situation. In order to have a foolproof system with optimal user experience, we must therefore work correctly in different scenarios: The initial navigation to the payment url is opened in the application: no requirements for the payment url The initial navigation to the payment url is opened in Safari: need a way to link back to the payment url such that it is opened in the application instead 2a: The second navigation to the payment url is opened in the application: no further requirements for the payment url 2b: The second navigation to the payment url is also opened in Safari: out of nice-UX options; need to redirect to a custom scheme url This state of matters necessitates an unintuitive and cumbersome system involving two hosts and a custom url scheme. The usage of two hosts is unavoidable if maximum compatibility combined with optimum user experience is desired. The custom url scheme is unavoidable if an escape hatch in badly behaving scenarios is desired. However, universal links need be configured only to one of the involved hosts, namely the one hosting the payment url. Thus, the page with a link back to the payment url can be on a generic server hosted by Swedbank Pay. [Development note: the Swedbank Pay server for this purpose is not yet available in the production environment.] iOS Payment Url System The iOS payment url helper endpoint expects the following query parameters: scheme: The custom scheme for Swedbank Pay SDK payment urls in the application language: The language to use in the back-link web page in the case 2 above The endpoint also accepts two optional query parameters: app: The name of the application to show in the back-link web page fallback: If true, redirects to a custom-scheme url instead of the back-link web page Like the Android payment url helper endpoint, the iOS payment url helper endpoint imposes no requirements on any other query parameters. The specified path for the iOS payment url helper endpoint is sdk-callback/ios-universal-link. The default constructors of the iOS SDK form payment urls by appending sdk-callback/ios-universal-link to the backend url, i.e. the root endpoint, and adding the scheme query parameter with the custom scheme registered in the app for handling Swedbank Pay SDK payment urls, the language parameter with the chosen language, the app parameter with the application name (if available), and an id query parameter with a random value. The fallback parameter is not set for the payment url. Let us consider the cases above, when a third-party page wants to navigate back to the payment menu. Case 1 requires no further analysis. The universal link system works as we intend, the payment url is opened in the app as-is. Case 2 causes the payment url to be opened in Safari. In this case we want to show a web page with a link back to the payment url, so the user can tap the link and it will be opened in the application, as provided by the conditions outlined above. Since this page must be served from a different domain, the payment url itself must respond with a redirect response. Request 1 2 GET /swedbank-pay-mobile/sdk-callback/ios-universal-link?scheme=yourecomapp&amp;language=en-US&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d&amp;app=Your%20Ecom%20App HTTP/1.1 Host: example.com Required Field Type Description check scheme string The custom scheme for handling Swedbank Pay payment urls in the app check language string The language to use in the back-link page   app string The application name to display in the back-link page   fallback boolean If true, redirect to custom scheme rather than back-link page Response 1 2 HTTP/1.1 301 Moved Permanently ① Location: https://ecom.stage.payex.com/externalresourcehost/trampoline?target=https%3A%2F%2Fexample.com%2Fswedbank-pay-mobile%2Fsdk-callback%2Fios-universal-link%3Fscheme%3Dyourecomapp%26language%3Den-US%26id%3Dabb50c53-53c1-4138-923f-59fcf0acd08d%26app%3DYour%2520Ecom%2520App%26fallback%3Dtrue&amp;language=en-US&amp;app=Your%20Ecom%20App This example uses the public server hosted by Swedbank Pay [Development note: The public server is not yet available in the production environment. The url will be updated when it is released.], but you can also host the back-link page yourself if desired. Safari will immediately follow the redirect: Request 1 2 GET /externalresourcehost/trampoline?target=https%3A%2F%2Fexample.com%2Fswedbank-pay-mobile%2Fsdk-callback%2Fios-universal-link%3Fscheme%3Dyourecomapp%26language%3Den-US%26id%3Dabb50c53-53c1-4138-923f-59fcf0acd08d%26app%3DYour%2520Ecom%2520App%26fallback%3Dtrue&amp;language=en-US&amp;app=Your%20Ecom%20App HTTP/1.1 Host: ecom.stage.payex.com Required Field Type Description check target string The link to open when the button on the page is tapped check language string The language to use in the page   app string The application name to display in the page Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: text/html &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt; &lt;title&gt;Swedbank Pay Redirect&lt;/title&gt; &lt;link rel=\"icon\" type=\"image/png\" href=\"/externalresourcehost/content/images/favicon.png\"&gt; &lt;link rel=\"stylesheet\" href=\"/externalresourcehost/content/css/style.css\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"trampoline-container\" onclick=\"redirect()\"&gt; &lt;img alt=\"Swedbank Pay Logo\" src=\"/externalresourcehost/content/images/swedbank-pay-logo-vertical.png\" /&gt; &lt;span class=\"trampoline-text\"&gt; &lt;a&gt;Back to Your Ecom App&lt;/a&gt; &lt;/span&gt; &lt;/div&gt; &lt;script&gt; function redirect() { window.location.href = decodeURLComponent(\"https%3A%2F%2Fexample.com%2Fswedbank-pay-mobile%2Fsdk-callback%2Fios-universal-link%3Fscheme%3Dyourecomapp%26language%3Den-US%26id%3Dabb50c53-53c1-4138-923f-59fcf0acd08d%26app%3DYour%2520Ecom%2520App%26fallback%3Dtrue\"); }; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; The back-link page contains a link to the payment url, but with an added with the fallback=true parameter. In case 2a the link will be opened in the application, and we are done. In case 2b, however, the link is again opened in Safari. Since the back-link page did not work, it makes no sense to redirect back to it again. Instead we will redirect to a custom scheme url, as those will always be opened in the registered application, albeit only after a confirmation dialog. Of course, this means that we need to know that the payment url is being opened from the back-link page. The fallback=true parameter signals to the iOS payment url helper endpoint to alter its behavior this way. You may note that in case 2a the application was not opened with the original payment url, but with one with an extra query parameter. The SDK handles this by considering the query part of the payment url separately, allowing additional parameters. Case 2b continues by making a request to the payment url with the added fallback=true parameter. The endpoint responds with a redirect similar to the Android one: the scheme is replaced with the custom scheme, and the rest of the request url is unmodified. Request 1 2 GET /swedbank-pay-mobile/sdk-callback/ios-universal-link?scheme=yourecomapp&amp;language=en-US&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d&amp;app=Your%20Ecom%20App&amp;fallback=true HTTP/1.1 Host: example.com Response 1 2 HTTP/1.1 301 Moved Permanently ① Location: yourecomapp://example.com/swedbank-pay-mobile/sdk-callback/ios-universal-link?scheme=yourecomapp&amp;language=en-US&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d&amp;app=Your%20Ecom%20App&amp;fallback=true Note that this custom-scheme link is otherwise equal to the universal link opened in case 2a; accordingly, the SDK handles this by allowing the scheme of the payment url to be either the original scheme, or the custom scheme registered to the application. ① 302 Found is perhaps a more appropriate status. This may be changed in the future, after testing that the routing works correctly with that status. Apple App Site Association The iOS payment url helper endpoint must be configured as a universal link to the application for it to work correctly. Doing this requires an Apple app site association file on the host of the iOS payment url. This file must be at a path relative to the host root (namely /.well-known/apple-app-site-association), and is thus outside the scope of, but linked to, the merchant backend API. The example implementations assume they are rooted at host root, and serve an Apple app site association using a configurable application ID. Request 1 2 GET /.well-known/apple-app-site-association HTTP/1.1 Host: example.com Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"applinks\": { \"apps\": [], \"details\": [ { \"appID\":\"YOURTEAMID.your.ecom.app\", \"paths\":[\"/swedbank-pay-mobile/sdk-callback/*\"] } ] } } Problems If there are any errors in servicing a request, they should be reported using Problem Details for HTTP APIs (RFC 7807) messages, like the Swedbank Pay APIs do. In particular, if the Swedbank Pay API response contains a problem, that problem should be forwarded to the client making the original request. Merchant Backend Problems The following problem types are defined for Merchant Backend specific errors. The mobile SDK components contain data types for easy processing of these error types. The sample implementations emit these errors in the specified circumstances; your own implementation is encouraged to do so as well. All these Merchant Backend problem types will have a URL in the format https://api.payex.com/psp/errordetail/mobilesdk/&lt;error-type&gt;. Type Status Description gatewaytimeout 504 The Swedbank Pay API did not respond in time. badgateway 502 The Merchant Backend did not understand the response from the Swedbank Pay API. unauthorized 401 The request did not have proper credentials to perform the operation. badrequest 400 The Merchant Backend did not undestand the request. Your implementation is encouraged to define its own problem types for any domain-specific errors; you should namespace those problem types under a domain name under your control – usually the host name of the Merchant Backend. Introduction Merchant Backend Sample Code",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/merchant-backend-v2.html"
  },{
    "title": "Merchant Backend V3",
    "text": "The Merchant Backend API serves as a simple starting point, and an illustrative example of how to integrate the SDK to your backend systems. The SDK has a Configuration implementation for a backend implementing this API; in addition, there is both a Node.js and a Java sample implementation of this API available. Even if you plan to integrate the SDK using your own backend API, it is recommended to read through this chapter; especially the section Payment Url Helper Endpoints, which will illustrate how any paymentUrl created for the SDK should behave. The Mobile SDK Merchant Backend API contains a total of six endpoints, three of which have statically defined paths. An OpenAPI specification is available. (It may be easier to view it in the Swagger Editor.) The main part of the API is designed as a transparent wrapper around the Swedbank Pay API, which is the same one used in Checkout. Additionally, two “helper” endpoints are specified, which facilitate the proper routing of the Payment Url back to the originating app. Authentication And Authorization You should have some authorization and authentication measures in place to prevent misuse of your Merchant Backend API. The sample implementations have a very rudimentary API key header check. This may or may not be sufficient to your purposes. You should adapt the sample implementation or create your own according to your security needs. The mobile component of the SDK allows adding your own headers to the requests it makes. Therefore you can build your own authentication and authorization measures by adding custom headers in the app, and checking that they have the correct content in the backend. The Merchant Backend Configuration To use a backend implementing the Merchant Backend API, you can use the Merchant Backend Configuration provided with the SDK. This implementation is available as SwedbankPaySDK.MerchantBackendConfiguration on iOS and com.swedbankpay.mobilesdk.merchantbackend.MerchantBackendConfiguration on Android; on Android you create the MerchantBackendConfiguration object via a MerchantBackendConfiguration.Builder. At a minimum, you must supply the url of the Merchant Backend, i.e. the url of the Root Endpoint. On iOS, you must also have registered a URL type for the SDK: that URL type must have a single scheme, and an additional property with name com.swedbank.SwedbankPaySDK.callback, type Boolean, and value YES. Alternatively you may set the url scheme explicitly in the initializer. Refer to the class documentation for more options. Root Endpoint The root endpoint is used to discover the main API endpoints. The URL of the root endpoint is what is configured as the “Backend URL” in the mobile SDK component. The point of this is to not bind your service to any particular path or even domain. In most cases, however, you can serve a static response for the root endpoint, with the other endpoint urls being relative to the root endpoint. The sample implementations do this. Request 1 2 3 GET /swedbank-pay-mobile/ HTTP/1.1 Host: example.com Your-Api-Key: secretish Response 1 2 3 4 5 6 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorders\": \"/swedbank-pay-mobile/paymentorders\" } Field Type Description paymentorders string URL of the “paymentorders” endpoint. Resolved against the root endpoint URL. N.B! The API as specified allows assigning endpoints to hosts other that the root endpoint host. However, as this seen to be an uncommon use case, the mobile component of the SDK is, by default, configured to only accept links to the domain of the root endpoint, or its subdomains. If your configuration uses other hosts, you must manually allow them in your mobile app’s configuration. Payment Orders Endpoint The paymentorders endpoint is used to create a new Payment Order. It is specified as a transparent wrapper around the corresponding Swedbank Pay API. However, it is to be expected that your backend will need to process the payment order both before making the Swedbank Pay API call, and after receiving the response from Swedbank Pay. The sample implementations validate the input, then create an internal unique identitifer for the payment order, and set that as paymentorder.payeeInfo.payeeReference, before making the Swedbank Pay call. After receiving the response, the backend stores the id of the Payment Order for future use, and forwards the response to the SDK. Optionally, if your implementation uses instrument mode payments, your backend can return the list of valid instruments, along with an endpoint to change the instrument. If you do this, you must also implement the Change Instrument endpoint. The Merchant Backend Configuration on the client side can then use this endpoint to change the instrument of an ongoing payment order. A production implementation should validate the payment order also from a business logic perspective. This is, naturally, outside the scope of the SDK, as is any other processing you may wish to perform with the payment order. The SDK expects the same form of response as returned from the Swedbank Pay API. Specifically, the response must contain the view-checkout operation. Request 1 2 3 4 5 6 7 8 POST /swedbank-pay-mobile/paymentorders HTTP/1.1 Host: example.com Your-Api-Key: secretish Content-Type: application/json { \"paymentorder\": { \"①\": \"\" } } Required Field Type Description check paymentOrder object The payment order to create ① The contents of paymentorder are omitted here. See Checkout Documentation for details. At this point, the Merchant Backend will preform necessary processing, and make a corresponding request to the Swedbank Pay API, using its secret access token. Forwarded Request 1 2 3 4 5 6 7 8 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { } } Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 201 Created Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } The Merchant Backend will then forward the response it received back to the calling app. If instrument mode is used, an you wish to be able to change the instrument, you can provide the list of valid instruments. Patching The Payment Order To modify the payment order you perform a patch operation. If instrument mode is used, you change the instrument by patching the payment with the SetInstrument operation. The SDK handles this by packaging the id of the PaymentOrder with the values needed to perform the operation, and sends it to the patch endpoint of the Merchant Backend. The Backend will then need to validate the request, and then passing it on to SwedbankPay as a PATCH request to execute the functionality. The response of that request is passed back to the SDK. This makes all operations behave the same and the backend does not need to communicate or setup special endpoints for each operation, e.g. the abort operation is handled the same way. This paves the way for future operations, which will also be handled like this. You only need to implement this endpoint if you are using instrument mode payments, or one of the other operations. Request 1 2 3 4 5 6 7 8 9 10 11 12 PATCH /swedbank-pay-mobile/patch HTTP/1.1 Host: example.com Your-Api-Key: secretish Content-Type: application/json { \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/6290caac-90f6-4f10-bb90-08da37ab87d7\" \"paymentorder\": { \"operation\": \"SetInstrument\", \"instrument\": \"CreditCard\" } } Required Field Type Description check href string The href of the Operation check paymentOrder object The changes to make to the payment order check operation string The operation to perform: SetInstrument check instrument string The instrument to set Merchant Backend will then make a corresponding request to the Swedbank Pay API. Forwarded Request 1 2 3 4 5 6 7 8 9 10 11 PATCH https://api.externalintegration.payex.com/psp/paymentorders/6290caac-90f6-4f10-bb90-08da37ab87d7 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"SetInstrument\", \"instrument\": \"CreditCard\" } } The Merchant Backend will then forward the response it received back to the calling app. Response &amp; Forwarded Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 201 Created Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } Payment Url Helper Endpoints The Payment Url helper endpoints do not interact directly with Swedbank Pay. Instead, they are used to route any navigations to the payment order’s payment url to the app using the SDK. The payment url allows navigations to third-party sites to happen as a part of the payment process. To continue the payment after any third-party processes, navigating to the payment url is expected to load the payment menu again. In the case of an app using the SDK, this means that the payment url must be routed to that app, and the app must react to that url by reloading the payment menu. Furthermore, for maximum compatibility, the payment url should be a regular https url. Since we want the payment urls to be https urls, they must be hosted somewhere. These helper endpoints facilitate that. Each platform has its own payment url helper, due to the platforms’ different requirements for url routing. The endpoints take query arguments to enable apps using the SDK to locally generate unique payment urls for each payment order. The endpoints have no side-effects, and will always return the same response for the same query arguments. The payment url helper endpoints are specified with static paths relative to the root endpoint url. This is done so that payment urls can be generated locally on the app, without needing to make a network round trip at that point. The SDK has no hard requirement for the helper endpoint urls to have such a relationship to the root endpoint url, but it does contain utility methods for easier integration when that is the case. If you wish to host the payment url helper endpoints elsewhere, or, indeed, replicate the behavior with some other schema for the payment urls, you must manually set paymentorder.urls.paymentUrl to the correct value when creating your payment orders. Importantly, the payment url helper endpoints must be accessible without any authentication headers. This is because the scenario where they will be used is when a third-party site wishes to navigate back to the payment order. Such a site will necessarily not have any authentication tokens related to your backend. Consequently, it is important to ensure that these endpoints do not inadvertently disclose information. The sample implementations serve these payment url helper endpoints at the specified static paths. N.B! The SDK generates unique payment urls by adding unique query arguments to the helper endpoint url. These payment urls only have meaning on the generating device, in the generating app. Opening them on another device will be unable to navigate the user to the originating payment menu. Android Payment Url Helper The Android payment url helper endpoint expects a query parameter named package: the package name of the Android application to redirect to. It has no requirements as to the existence or value of other query parameters. As the application using the SDK knows its own package name, it can use this endpoint to generate a payment url that is routed back to itself. The specified path for the Android payment url helper endpoint is sdk-callback/android-intent. The default constructors of the Android SDK form payment urls by appending sdk-callback/android-intent to the backend url, i.e. the root endpoint, and adding the package query parameter with the containing application’s package name, and an id query parameter with a random value. The endpoint responds with an html document that attempts to immediately redirect to an Intent-scheme Url. That url is constructed such that it uses the value of the package query parameter as the target package of the intent. The action of the intent shall be com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER; the SDK has an intent filter for this action. The uri (data) of the intent shall be the full url used in the request. The html document shall also contain a link to that same url. This is needed because in some cases the browser will block the redirect to an Intent-scheme url, and will instead require that the navigation to that url happen from a user interaction. Request 1 2 GET /swedbank-pay-mobile/sdk-callback/android-intent?package=your.ecom.app&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d HTTP/1.1 Host: example.com Required Field Type Description check package string The package name of the Android application to redirect to Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: text/html &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Payment&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"https://design.swedbankpay.com/v/4.3.0/styles/dg-style.css\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width\"&gt; &lt;meta http-equiv=\"refresh\" content=\"0;url=intent://example.com/swedbank-pay-mobile/sdk-callback/android-intent?package=your.ecom.app&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=your.ecom.app;end; ①\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"text-center\"&gt; &lt;img src=\"https://design.swedbankpay.com/v/4.3.0/img/swedbankpay-logo.svg\" alt=\"Swedbank Pay\" height=\"120\"&gt; &lt;p&gt;&lt;a class=\"btn btn-executive\" href=\"intent://example.com/swedbank-pay-mobile/sdk-callback/android-intent?package=your.ecom.app&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=your.ecom.app;end;\"&gt;Back to app&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; ① The intent url is transformed to an Android Intent using the data after the #Intent; token. The uri of that intent is the intent url up to that token, with the intent scheme replaced according to the scheme= parameter – in this case https. Using a payment url crafted this way causes an intent with the payment url to be delivered to the application when a third-party page navigates to the payment url. The SDK receives this intent, recognizes the payment url, and reloads the payment menu. N.B! It is possible to craft arbitrary com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER intents using this endpoint. However, further processing of such intents is dependent on local data, and thus this endpoint leaks no information. Indeed, it is conceptually possible for two different devices to use the same payment url to refer to different payments. Your implementation may restrict the requests it serves; e.g. you may only allow a specific package. iOS Payment Url Helper The iOS payment url helper endpoint is more involved than the Android one. While a similar mechanism could be used with custom url schemes, doing so will not provide optimal user experience: custom schemes will show a confirmation dialog before being routed to the handling application, and the content of that dialog is not under developer control. Instead, the best practice for assigning urls to applications is to use Universal Links. With the merchant backend host and the iOS application using the SDK configured correctly, the payment url becomes a universal link. Universal links function such that they are given directly to the handling application. This means that if the navigation to the payment url is handled as a unversal link, the actual payment url is never dereferenced before being handled by the application. In this scenario, is does not matter what kind of response would be received by making a GET request to the payment url. Unfortunately, this is not guaranteed to happen. As documented, universal links open the registered application “when [the user] tap[s] links to your website within Safari”, but “When a user browses your website in Safari and taps a universal link in the same domain, the system opens that link in Safari – If the user taps a universal link in a different domain, the system opens the link in your app.” This presents two preconditions: the navigation must originate from user interaction, and the domain of the universal link must be different to the domain of the current page. Also, practice has shown that universal links may still sometimes fail to work as intended, so we must have some way of escaping that situation. In order to have a foolproof system with optimal user experience, we must therefore work correctly in different scenarios: The initial navigation to the payment url is opened in the application: no requirements for the payment url The initial navigation to the payment url is opened in Safari: need a way to link back to the payment url such that it is opened in the application instead 2a: The second navigation to the payment url is opened in the application: no further requirements for the payment url 2b: The second navigation to the payment url is also opened in Safari: out of nice-UX options; need to redirect to a custom scheme url This state of matters necessitates an unintuitive and cumbersome system involving two hosts and a custom url scheme. The usage of two hosts is unavoidable if maximum compatibility combined with optimum user experience is desired. The custom url scheme is unavoidable if an escape hatch in badly behaving scenarios is desired. However, universal links need be configured only to one of the involved hosts, namely the one hosting the payment url. Thus, the page with a link back to the payment url can be on a generic server hosted by Swedbank Pay. [Development note: the Swedbank Pay server for this purpose is not yet available in the production environment.] iOS Payment Url System The iOS payment url helper endpoint expects the following query parameters: scheme: The custom scheme for Swedbank Pay SDK payment urls in the application language: The language to use in the back-link web page in the case 2 above The endpoint also accepts two optional query parameters: app: The name of the application to show in the back-link web page fallback: If true, redirects to a custom-scheme url instead of the back-link web page Like the Android payment url helper endpoint, the iOS payment url helper endpoint imposes no requirements on any other query parameters. The specified path for the iOS payment url helper endpoint is sdk-callback/ios-universal-link. The default constructors of the iOS SDK form payment urls by appending sdk-callback/ios-universal-link to the backend url, i.e. the root endpoint, and adding the scheme query parameter with the custom scheme registered in the app for handling Swedbank Pay SDK payment urls, the language parameter with the chosen language, the app parameter with the application name (if available), and an id query parameter with a random value. The fallback parameter is not set for the payment url. Let us consider the cases above, when a third-party page wants to navigate back to the payment menu. Case 1 requires no further analysis. The universal link system works as we intend, the payment url is opened in the app as-is. Case 2 causes the payment url to be opened in Safari. In this case we want to show a web page with a link back to the payment url, so the user can tap the link and it will be opened in the application, as provided by the conditions outlined above. Since this page must be served from a different domain, the payment url itself must respond with a redirect response. Request 1 2 GET /swedbank-pay-mobile/sdk-callback/ios-universal-link?scheme=yourecomapp&amp;language=en-US&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d&amp;app=Your%20Ecom%20App HTTP/1.1 Host: example.com Required Field Type Description check scheme string The custom scheme for handling Swedbank Pay payment urls in the app check language string The language to use in the back-link page   app string The application name to display in the back-link page   fallback boolean If true, redirect to custom scheme rather than back-link page Response 1 2 HTTP/1.1 301 Moved Permanently ① Location: https://ecom.stage.payex.com/externalresourcehost/trampoline?target=https%3A%2F%2Fexample.com%2Fswedbank-pay-mobile%2Fsdk-callback%2Fios-universal-link%3Fscheme%3Dyourecomapp%26language%3Den-US%26id%3Dabb50c53-53c1-4138-923f-59fcf0acd08d%26app%3DYour%2520Ecom%2520App%26fallback%3Dtrue&amp;language=en-US&amp;app=Your%20Ecom%20App This example uses the public server hosted by Swedbank Pay [Development note: The public server is not yet available in the production environment. The url will be updated when it is released.], but you can also host the back-link page yourself if desired. Safari will immediately follow the redirect: Request 1 2 GET /externalresourcehost/trampoline?target=https%3A%2F%2Fexample.com%2Fswedbank-pay-mobile%2Fsdk-callback%2Fios-universal-link%3Fscheme%3Dyourecomapp%26language%3Den-US%26id%3Dabb50c53-53c1-4138-923f-59fcf0acd08d%26app%3DYour%2520Ecom%2520App%26fallback%3Dtrue&amp;language=en-US&amp;app=Your%20Ecom%20App HTTP/1.1 Host: ecom.stage.payex.com Required Field Type Description check target string The link to open when the button on the page is tapped check language string The language to use in the page   app string The application name to display in the page Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: text/html &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt; &lt;title&gt;Swedbank Pay Redirect&lt;/title&gt; &lt;link rel=\"icon\" type=\"image/png\" href=\"/externalresourcehost/content/images/favicon.png\"&gt; &lt;link rel=\"stylesheet\" href=\"/externalresourcehost/content/css/style.css\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"trampoline-container\" onclick=\"redirect()\"&gt; &lt;img alt=\"Swedbank Pay Logo\" src=\"/externalresourcehost/content/images/swedbank-pay-logo-vertical.png\" /&gt; &lt;span class=\"trampoline-text\"&gt; &lt;a&gt;Back to Your Ecom App&lt;/a&gt; &lt;/span&gt; &lt;/div&gt; &lt;script&gt; function redirect() { window.location.href = decodeURLComponent(\"https%3A%2F%2Fexample.com%2Fswedbank-pay-mobile%2Fsdk-callback%2Fios-universal-link%3Fscheme%3Dyourecomapp%26language%3Den-US%26id%3Dabb50c53-53c1-4138-923f-59fcf0acd08d%26app%3DYour%2520Ecom%2520App%26fallback%3Dtrue\"); }; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; The back-link page contains a link to the payment url, but with an added with the fallback=true parameter. In case 2a the link will be opened in the application, and we are done. In case 2b, however, the link is again opened in Safari. Since the back-link page did not work, it makes no sense to redirect back to it again. Instead we will redirect to a custom scheme url, as those will always be opened in the registered application, albeit only after a confirmation dialog. Of course, this means that we need to know that the payment url is being opened from the back-link page. The fallback=true parameter signals to the iOS payment url helper endpoint to alter its behavior this way. You may note that in case 2a the application was not opened with the original payment url, but with one with an extra query parameter. The SDK handles this by considering the query part of the payment url separately, allowing additional parameters. Case 2b continues by making a request to the payment url with the added fallback=true parameter. The endpoint responds with a redirect similar to the Android one: the scheme is replaced with the custom scheme, and the rest of the request url is unmodified. Request 1 2 GET /swedbank-pay-mobile/sdk-callback/ios-universal-link?scheme=yourecomapp&amp;language=en-US&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d&amp;app=Your%20Ecom%20App&amp;fallback=true HTTP/1.1 Host: example.com Response 1 2 HTTP/1.1 301 Moved Permanently ① Location: yourecomapp://example.com/swedbank-pay-mobile/sdk-callback/ios-universal-link?scheme=yourecomapp&amp;language=en-US&amp;id=abb50c53-53c1-4138-923f-59fcf0acd08d&amp;app=Your%20Ecom%20App&amp;fallback=true Note that this custom-scheme link is otherwise equal to the universal link opened in case 2a; accordingly, the SDK handles this by allowing the scheme of the payment url to be either the original scheme, or the custom scheme registered to the application. ① 302 Found is perhaps a more appropriate status. This may be changed in the future, after testing that the routing works correctly with that status. Apple App Site Association The iOS payment url helper endpoint must be configured as a universal link to the application for it to work correctly. Doing this requires an Apple app site association file on the host of the iOS payment url. This file must be at a path relative to the host root (namely /.well-known/apple-app-site-association), and is thus outside the scope of, but linked to, the merchant backend API. The example implementations assume they are rooted at host root, and serve an Apple app site association using a configurable application ID. Request 1 2 GET /.well-known/apple-app-site-association HTTP/1.1 Host: example.com Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"applinks\": { \"apps\": [], \"details\": [ { \"appID\":\"YOURTEAMID.your.ecom.app\", \"paths\":[\"/swedbank-pay-mobile/sdk-callback/*\"] } ] } } Problems If there are any errors in servicing a request, they should be reported using Problem Details for HTTP APIs (RFC 7807) messages, like the Swedbank Pay APIs do. In particular, if the Swedbank Pay API response contains a problem, that problem should be forwarded to the client making the original request. Merchant Backend Problems The following problem types are defined for Merchant Backend specific errors. The mobile SDK components contain data types for easy processing of these error types. The sample implementations emit these errors in the specified circumstances; your own implementation is encouraged to do so as well. All these Merchant Backend problem types will have a URL in the format https://api.payex.com/psp/errordetail/mobilesdk/&lt;error-type&gt;. Type Status Description gatewaytimeout 504 The Swedbank Pay API did not respond in time. badgateway 502 The Merchant Backend did not understand the response from the Swedbank Pay API. unauthorized 401 The request did not have proper credentials to perform the operation. badrequest 400 The Merchant Backend did not undestand the request. Your implementation is encouraged to define its own problem types for any domain-specific errors; you should namespace those problem types under a domain name under your control – usually the host name of the Merchant Backend. Introduction Merchant Backend Sample Code",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/merchant-backend.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment order that can be retrieved later by performing a GET on the payment order. Swedbank Pay does not use or process metadata, it is only stored on the payment order so it can be retrieved later alongside the payment order. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment order so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/metadata.html"
  },{
    "title": "Metadata",
    "text": "Metadata Metadata can be used to store data associated to a payment that can be retrieved later by performing a GET on the payment. Swedbank Pay does not use or process metadata, it is only stored on the payment so it can be retrieved later alongside the payment. An example where metadata might be useful is when several internal systems are involved in the payment process and the payment creation is done in one system and post-purchases take place in another. In order to transmit data between these two internal systems, the data can be stored in metadata on the payment so the internal systems do not need to communicate with each other directly. The usage of metadata field is shown in the abbreviated Purchase request below. Metadata Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 POST /psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Parameter Type metadata string, boolean, integer,decimal GET Request Request 1 2 3 4 GET /psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"metadata\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\", \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/metadata.html"
  },{
    "title": "Migration Guide",
    "text": "Checkout v3 provides a more stream-lined, refined checkout experience for both the payer and the merchant. The response models have been reduced in size and complexity to simplify integration. Where Checkout v2 and Payment Instruments v1 were offered more as a mix and match package, Checkout v3 is more conveniently divided into four distinct packages: Starter, Business, Enterprise, and Payments Only. Which v3 package you should choose when migrating from Checkout v2 and Payment Instruments to Checkout v3 depends on which legacy features you are using. A mapping between various legacy features and the recommended corresponding v3 packages is provided in the table below. Legacy feature or product Recommended v3 package Regular Checkout v2 Checkout v3 Enterprise MAC, SCA Checkout v3 Enterprise Payment Menu v2 Checkout v3 Payments Only Checkout v2 without Checkin Checkout v3 Payments Only Payment Instruments v1 Checkout v3 Payments Only (Instrument Mode) Request Fields With an integration against our Checkout v2 API, there is very little you have to do to make the integration v3 compliant. Both the URI and the request body is the same paymentorder you know from Checkout v2. The only required change is to add the two fields productName and implementation for all packages except Payments Only, where implementation is not applicable. 1 2 3 4 5 6 { \"paymentorder\": { \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\" } } Required Field Type Description check paymentOrder object The payment order object. check productName string Indicates a Digital Payments compliant client. Required to enable DigitalPayments functionality and operations. check implementation string The Digital Payments implementation type. Omit if the integration is for Payments Only. Response Fields When you have created a Payment Order, the response will be different in Checkout v3 compared to Checkout v2. You will no longer find the following fields in the response: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 { \"paymentorder\": { \"currentPayment\": /* Removed in Checkout v3 */, \"instrument\": /* Removed in Checkout v3 */, \"payers\": /* Removed in Checkout v3 */, \"payments\": /* Removed in Checkout v3 */, \"settings\": /* Removed in Checkout v3 */, \"state\": /* Removed in Checkout v3 */, \"nonPaymentToken\": /* Moved into the `paid` resource in Checkout v3 */, \"recurrenceToken\": /* Moved into the `paid` resource in Checkout v3 */, \"unscheduledToken\": /* Moved into the `paid` resource in Checkout v3 */, \"transactionsOnFileToken\": /* Noved into the `paid` resource in Checkout v3 */, \"nonPaymentToken\": /* Moved into the `paid` resource in Checkout v3 */, \"externalNonPaymentToken\": /* Moved into the `paid` resource in Checkout v3 */, } } Instead, you’ll find the following new fields in Checkout v3: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 { \"paymentorder\": { \"aborted\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/aborted\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancelled\" }, \"failed\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failedattempts\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/financialtransactions\" }, \"guestMode\": true, \"history\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/history\" }, \"implementation\": \"Starter\", \"paid\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\" }, \"payer\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"status\": \"Paid\", } } Field Type Description paymentOrder object The payment order object. aborted id The URL to the aborted resource where information about the aborted transactions can be retrieved. cancelled id The Digital Payments implementation type. Omit if the integration is for Payments Only. failed id The URL to the failed resource where information about the failed transactions can be retrieved. failedAttempts id The URL to the failedAttempts resource where information about the failed attempts can be retrieved. financialTransactions id The URL to the financialTransactions resource where information about the financial transactions can be retrieved. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. history id The URL to the history resource where information about the payment’s history can be retrieved. paid id The URL to the paid resource whereinformation about the paid transactions, including any possibly created tokens,can be retrieved. payer id The URL to the payer resource where information about the payer can be retrieved. status string Initialized, Paid, Failed, Cancelled, or Aborted. Indicates the payment order’s current status. Payer As the different packages of Checkout v3 in essence revolves around whether, or how the payer is identified, the payer field will vary depending on which package you choose. How the payer field differs will be explained in the sections below. Events With the changes in how the Seamless Views are sewn together in Checkout v3, the JavaScript events that are triggered by the Seamless Views have changed. The details of these changes will be explained in the below table. v3 Event Name Corresponding v2 Event Description onAborted onPaymentCanceled Triggered when the payer clicks the “Abort” link on the redirect page in Payment Menu. onCheckoutLoaded onApplicationConfigured Triggered when the payment menu is rendered after being opened. onCheckoutResized onApplicationConfigured Triggered every time that a reconfiguration leads to resizing of the Checkout Seamless View. onError onError Triggered during terminal errors or if the configuration fails validation. onEventNotification  onEventNotification Triggered whenever any other public event is called. It does not prevent their handling. onInstrumentSelected  onPaymentMenuInstrumentSelected Triggered when a user actively changes payment instrument in the Payment Menu. onOutOfViewOpen onExternalRedirect Triggered when another tab is opened in the browser, like the information page for onboarding of stored cards, or Swedbank Pay’s owner TOS. onOutOfViewRedirect onExternalRedirect Triggered when a user is redirected to a separate web page, like 3-D Secure or BankID signing. onPaid  onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment.   onPaymentCreated Deprecated. Triggered when the payer has selected a payment instrument and actively attempts to perform a payment.   onPaymentFailed Deprecated. Triggered when a payment has failed, disabling further attempts to perform a payment.   onPaymentPending Deprecated. Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc).   onPaymentTransactionFailed Deprecated. This event triggers when a payment attempt fails, further attempts can be made for the payment. onTermsOfServiceRequested onPaymentToS Triggered when the user clicks on the “Display terms and conditions” link. Checkout v3 Starter Checkout v3 Starter should be the default choice for most merchants coming from v2. The most significant difference between Checkout v2 and Checkout v3 Starter is that we have sewn the Seamless Views better together so the communication between Checkin and Payment Menu is handled automatically. This means we can now offer Remember Me and a simplified integration flow. Checkout v3 Starter – Payer For Checkout v3 Starter, the payer field is required. Which fields within it are available depends on whether digitalProducts is set to true or false. When digitalProducts is set to false, the field shippingAddressRestrictedToCountryCodes can be set to an array of country codes that will restrict shipping to the specified country-codes. 1 2 3 4 \"payer\": { \"digitalProducts\": false, \"shippingAddressRestrictedToCountryCodes\": [ \"NO\", \"US\" ] } Checkout v3 Starter – Events The full list of available events can be viewed above. The only special events for Checkout v3 Starter are onPayerIdentified and onPayerUnidentified which are mandatory to implement and a part of the acceptance criteria for the integration. These events are required for the Remember Me feature to work. Checkout v3 Payments Only Checkout v3 Payments Only is the package that should be used when you want to handle both identification of the payer yourself. With Instrument Mode you also have the possibility to draw your own UI for the Payment Menu. If you are currently using the Checkout v2 Payment Menu or have integrated directly with the Payment Instruments v1 APIs, Payments Only is the package most suited to your current needs. Checkout v3 Payments Only – Payer For Checkout v3 Payments Only, the payer field is optional. If it is provided in the request, its children depends on whether digitalProducts is set to true or false, plus whether the payer is identified or not. Unidentified payers will go through the payment process in a so-called Guest Mode. 1 2 3 4 5 6 7 8 9 10 11 12 \"payer\": { \"digitalProducts\": false, \"payerReference\": \"anything\", \"email\": \"karl.anderssson@example.com\", \"msisdn\": \"+4659123456\", \"authentication\": {}, \"firstName\": \"Karl\", \"lastName\": \"Andersson\", \"shippingAddress\": {}, \"billingAddress\": {}, \"accountInfo\": {} } Required Field Type Description   payer object The payment order object. check email string Indicates a Digital Payments compliant client. Required to enable DigitalPayments functionality and operations. check msisdn string The Digital Payments implementation type. Omit if the integration is for Payments Only.",
    "tags": "",
    "url": "/checkout-v3/migration-guide.html"
  },{
    "title": "Mobile",
    "text": "warning Integration options: We advise you to integrate our Mobile SDK Payment Menu instead of integrating card payments directly in your app with WebView. Card Payments In Mobile Apps The implementation sequence for Card Payments in mobile apps is identical to the standard Redirect scenario, but also includes explanations of how to include this redirect in mobile apps or in mobile web pages. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect the card information. Transactions in SEK will have an option for selecting debit or credit card: API Requests For Payments The API requests are displayed in the purchase flow. You can create a card payment with following operation options: Purchase Recur Verify Our payment example below uses the Purchase value. Sequence Diagram For Mobile The sequence diagram below shows a high level description of a complete purchase, and the two requests you have to send to Swedbank Pay. The links will take you directly to the corresponding API description. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are two alternative outcomes of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay activate Payer Payer-&gt;&gt;-Merchant: start purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST /psp/creditcard/payments activate SwedbankPay note left of Merchant: First API Request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: authorization page activate Payer note left of Payer: redirect to SwedbankPay Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: rel: redirect-authorization activate Merchant Merchant--&gt;&gt;-Payer: display purchase result sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay activate Payer Payer-&gt;&gt;-Merchant: start purchase activate Payer Merchant-&gt;&gt;-SwedbankPay: POST /psp/creditcard/payments activate Merchant note left of Payer: First API request SwedbankPay--&gt;-Merchant: payment resource activate SwedbankPay Merchant--&gt;&gt;-Payer: authorization page activate Merchant Payer-&gt;&gt;-SwedbankPay: access authorization page activate Payer note left of Payer: redirect to SwedbankPay SwedbankPay--&gt;&gt;-Payer: display purchase information activate SwedbankPay Payer-&gt;&gt;Payer: input creditcard information Payer-&gt;&gt;-SwedbankPay: submit creditcard information activate Payer opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate SwedbankPay Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate Payer end SwedbankPay--&gt;&gt;-Payer: redirect to merchant activate SwedbankPay note left of Payer: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Payer Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; activate Merchant note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: rel: redirect-authorization activate SwedbankPay Merchant--&gt;&gt;Payer: display purchase result activate Merchant opt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;Merchant: POST Payment Callback activate SwedbankPay end Redirect After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/mobile-card-payments.html"
  },{
    "title": "MOTO",
    "text": "MOTO warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. MOTO (Mail Order / Telephone Order) is a purchase where you, as a merchant, enter the payer’s card details in order to make a payment. The payer provides the card details to the sales representative by telephone or in writing. The sales representative will then enter the details into the payment interface. Common use cases are travel or hotel bookings, where the payer calls the sales representative to make a booking. This feature is only supported with the Purchase operation. See the example below on how to implement MOTO by setting the generateMotoPayment to true. MOTO Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"generateMotoPayment\": true, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\" }, \"payer\": { \"digitalProducts\": false, \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" }, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Request field not covered in the common Checkout redirect or seamless view table: Field Type Description generateMotoPayment bool Set to true if the payment order is a MOTO payment, false if not. MOTO Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\" ], \"implementation\": \"PaymentsOnly\", { { \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/08090909-626e-4b90-1943-08d9eaebca86/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/features/optional/moto.html"
  },{
    "title": "MOTO",
    "text": "MOTO warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. MOTO (Mail Order / Telephone Order) is a purchase where you, as a merchant, enter the payer’s card details in order to make a payment. The payer provides the card details to the sales representative by telephone or in writing. The sales representative will then enter the details into the payment interface. Common use cases are travel or hotel bookings, where the payer calls the sales representative to make a booking. This feature is only supported with the Purchase operation. See the abbreviated example below on how to implement MOTO by setting the generateMotoPayment to true. MOTO Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"generateMotoPayment\": true, \"currency\": \"NOK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Moto\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" } } } MOTO Response To authorize the payment, find the operation with rel equal to redirect-authorization in the response, and redirect the merchant employee to the provided href to fill out the payer’s card details. You will find an abbreviated example of the response provided below. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699\", \"number\": 40106480687, \"created\": \"2021-02-24T12:51:51.0932275Z\", \"updated\": \"2021-02-24T12:51:51.2935307Z\", \"instrument\": \"CreditCard\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"NOK\", \"prices\": { \"id\": \"/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/prices\" }, \"amount\": 0, \"description\": \"Test Moto\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"id\": \"/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/urls\" }, \"payeeInfo\": { \"id\": \"id\": \"/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/payeeInfo\" }, \"metadata\": { \"id\": \"/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcardv3/core/js/px.creditcard.client.js?token=a0a2da77fe9582387d384b77cc0d7d04fb861d10ba13fc46d3abca00f4a1368f&amp;operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcardv3/payments/authorize/a0a2da77fe9582387d384b77cc0d7d04fb861d10ba13fc46d3abca00f4a1368f\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcardv3/core/js/px.creditcard.client.js?token=a0a2da77fe9582387d384b77cc0d7d04fb861d10ba13fc46d3abca00f4a1368f\", \"rel\": \"view-payment\", \"contentType\": \"application/javascript\" } ] } Capture The capture transaction is where you ensure that the funds are charged from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s card, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture resource contains information about the capture transaction made against a card payment. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user in the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A human readable description of maximum 40 characters of the transaction payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the payment order in its current state. List Capture Transactions The captures resource list the capture transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a creditcard payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [Credit card captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/moto.html"
  },{
    "title": "MOTO",
    "text": "MOTO warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. MOTO (Mail Order / Telephone Order) is a purchase where you, as a merchant, enter the payer’s card details in order to make a payment. The payer provides the card details to the sales representative by telephone or in writing. The sales representative will then enter the details into the payment interface. Common use cases are travel or hotel bookings, where the payer calls the sales representative to make a booking. This feature is only supported with the Purchase operation. See the abbreviated example below on how to implement MOTO by setting the generateMotoPayment to true. MOTO Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 POST /psp/old-implementations/payment-menu-v2/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"generateMotoPayment\": true, \"currency\": \"NOK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Moto\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" } } } MOTO Response To authorize the payment, find the operation with rel equal to redirect-paymentorder in the response, and redirect the merchant employee to the provided href to fill out the payer’s card details. You will find an abbreviated example of the response provided below. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699\", \"number\": 40106480687, \"created\": \"2021-02-24T12:51:51.0932275Z\", \"updated\": \"2021-02-24T12:51:51.2935307Z\", \"instrument\": \"CreditCard\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"NOK\", \"prices\": { \"id\": \"/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/prices\" }, \"amount\": 0, \"description\": \"Test Moto\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/urls\" }, \"payeeInfo\": { \"id\": \"id\": \"/psp/old-implementations/payment-menu-v2/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/payeeInfo\" }, \"metadata\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/a205c77e-2f0a-4564-3e60-08d8d3ed4699\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcardv3/core/js/px.creditcard.client.js?token=a0a2da77fe9582387d384b77cc0d7d04fb861d10ba13fc46d3abca00f4a1368f&amp;operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcardv3/payments/authorize/a0a2da77fe9582387d384b77cc0d7d04fb861d10ba13fc46d3abca00f4a1368f\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcardv3/core/js/px.creditcard.client.js?token=a0a2da77fe9582387d384b77cc0d7d04fb861d10ba13fc46d3abca00f4a1368f\", \"rel\": \"view-payment\", \"contentType\": \"application/javascript\" } ] }",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/moto.html"
  },{
    "title": "Observing The Payment Process",
    "text": "Observing The Payment Process Your application can observe the state of the payment and react accordingly. At a minimum, your application must remove the SDK UI from view when the payment is finished. Android On Android, observe the state or richState of PaymentViewModel. The PaymentViewModel of a PaymentFragment is stored in its parent Activity. If you really need to have multiple PaymentFragments in a single Activity, you need to assign each a different key for their PaymentViewModels (use PaymentFragment.ArgumentsBuilder.viewModelProviderKey). Android 1 2 3 4 5 6 val paymentViewModel = ViewModelProvider(activity)[PaymentViewModel::class.java] // or use the activity.paymentViewModel convenience property paymentViewModel.richState.observe(owner) { richState -&gt; // handle new state here } The process state is available at richState.state, which has the following cases: PaymentViewModel.State.IDLE: Not active PaymentViewModel.State.IN_PROGRESS: Active; waiting for either network response or user interaction PaymentViewModel.State.UPDATING_PAYMENT_ORDER: Updating the payment order (because you called updatePaymentOrder) PaymentViewModel.State.COMPLETE: Complete; you should hide the PaymentFragment and check the payment status from your application servers PaymentViewModel.State.cancelled: cancelled by the user; you should hide the PaymentFragment. PaymentViewModel.State.RETRYABLE_ERROR: Payment could not proceed, but the error is not fatal. See below for options here. PaymentViewModel.State.FAILURE: Payment has failed. You should hide the PaymentFragment. In the retryable error and failure states, the error that caused the failure is available at richState.exception. The exception is of any type thrown by your Configuration. If the failure state was instead reached because Swedbank Pay reported a Terminal Failure, that will be available at richState.terminalFailure. When the PaymentFragment is showing the payment menu of the payment order, the corresponding ViewPaymentOrderInfo is available at richState.viewPaymentOrderInfo. This is the value that your Configuration returned to the SDK; if you are using Instrument Mode with the Merchant Backend Configuration, you may be interested in the instrument and availableInstruments fields to determine whether to show your instrument selection UI. Retryable Errors In the retryable error state, the PaymentFragment will, by default, show an error message with instructions to retry. You may disable this by setting the desired default UI flags (PaymentFragment.ArgumentsBuilder.setEnabledDefaultUI). If you do wish to provide your own UI for this state, you can call paymentViewModel.retryPreviousAction() to insruct the PaymentFragment to retry. A message describing the problem is available at richState.retryableErrorMessage. Overriding Terms Of Service Link By default, when the user taps on the Terms of Service link in the Payment Menu, a new Activity will be started, which will display the linked web page. However, you may wish to provide a native Terms of Service UI instead. To do this, set a listener for the event by calling paymentViewModel.setOnTermsOfServiceClickListener. Android 1 2 3 4 5 paymentViewModel.setOnTermsOfServiceClickListener(lifecycleOwner) { paymentFragment, url -&gt; // show ToS UI // return true to disable the default behavior // (alternatively, return false to continue with the default behavior) } iOS On iOS, set a delegate to the SwedbankPaySDKController. The delegate methods will be called on state changes. iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 swedbankPaySDKController.delegate = self // ... extension MyClass : SwedbankPaySDKDelegate { func paymentOrderDidShow(info: SwedbankPaySDK.ViewPaymentOrderInfo) { // A payment order is now shown; // info is the ViewPaymentOrderInfo value from your Configuration } func paymentOrderDidHide() { // No payment order is now shown } func updatePaymentOrderFailed( updateInfo: Any, error: Error ) { // An update failed; error is the error from your Configuration } func paymentComplete() { // Payment is complete; you should hide the SwedbankPaySDKController } func paymentcancelled() { // Payment cancelled by user; you should hide the SwedbankPaySDKController } func paymentFailed(error: Error) { // Payment failed. The error is either from your Configuration, // or a SwedbankPaySDKController.WebContentError } func overrideTermsOfServiceTapped(url: URL) -&gt; Bool { // Show custom Terms of Service UI, if needed. // Return true to disable the default behavior, // false to allow SwedbankPaySDKController to show // the default ToS UI. } } Any errors are ones thrown by your Configuration, or, in the case of paymentFailed, SwedbankPaySDKController.WebContentError. SwedbankPaySDKController.WebContentError has two cases: .ScriptLoadingFailure(scriptUrl: URL?): The script failed to load. No error message is available; this is a limitation of WKWebView .ScriptError(SwedbankPaySDK.TerminalFailure?): The script made an onError callback. The payload is the Terminal Failure reported by Swedbank Pay. When using the Merchant Backend Configuration, other errors will be of the type SwedbankPaySDK.MerchantBackendError.",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/technical-reference/observing-the-payment-process.html"
  },{
    "title": "One-Click Payments",
    "text": "One-Click Payments One-Click Payments utilize a previously generated payment token to prefill payment details for credit card or invoice payments pages - which means that the payer don’t need to enter these details for every purchase. Introduction For card and invoice payments, the payment flow and implementation varies from your default only being the use of a paymentToken. The details in this section describe explicitly the parameters that must be set to enable one-click purchases. API Requests To Generate The Payment Token When making the initial purchase request, you need to generate a paymentToken. You can do this by setting the generatePaymentToken field in the request’s payment object to true (see example below) when doing a card purchase, or setting the initial operation to Verify. generatePaymentToken field 1 2 3 4 5 6 { \"generatePaymentToken\": true, \"payer\": { \"payerReference\": \"AB1234\", } } Finding The paymentToken Value When the initial purchase is successful, a paymentToken is linked to the payment. You can return the value by performing a GET request towards the payment resource with the payerReference included. Request Towards The Payment Resource 1 2 GET /psp/paymentorders/payerownedtokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You can also perform a GET request towards the id of a Payment Order and find the paymentToken in its linked paid resource. Request Towards The Paid Resource 1 2 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You need to store the paymentToken from the response in your system and keep track of the corresponding payerReference in your system. Returning Purchases When a known payer returns to your system, you can use your payerReference to initiate one-click payments. Either by using the payerReference and setting generatePaymentToken to true, or by using payerReference and including a paymentToken in the paymentToken field. The payerReference is not generated by Swedbank Pay, but a reference set by you to identify your customer and their returning payments. An example could be to use internal customer numbers. Using payerReference and generatePaymentToken: true will display all (max 3) cards connected to the payerReference. If you wish to display one specific card only, you can remove generatePaymentToken and add the field paymentToken in it’s place. This must be the paymentToken generated in the initial purchase. One-Click Request Displaying All Cards Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"generatepaymentToken\": \"true\" }, \"payer\": { \"payerReference\": \"AB1234\", } } One-Click Request Displaying A Specific Card Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\" }, \"payer\": { \"payerReference\": \"AB1234\", } } Required Field Type Description check paymentOrder object The paymentorder object. check operation string Determines the initial operation, defining the type of payment order created. check paymentToken string The paymentToken value received in GET response towards the Payment Resource is the same paymentToken generated in the initial purchase request. The token allow you to use already stored card data to initiate one-click payments.   generatePaymentToken bool Determines if a payment token should be generated. Default value is false.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. info When redirecting to Swedbank Pay the payment page will be prefilled with the payer’s card details. See example below. How It Looks Delete Payment Token If you need to delete a paymentToken, you have two options. The first is by payerReference, which deletes all payment, recurrence and/or unscheduled tokens associated with the payer. The second is by paymentToken, which only deletes a specific token. warning Please note that this call does not erase the card number stored at Swedbank Pay. A card number is automatically deleted six months after a successful Delete payment token request. If you want card information removed at an earlier date, you need to contact ehandelsetup@swedbankpay.dk, verkkokauppa.setup@swedbankpay.fi, ehandelsetup@swedbankpay.no or ehandelsetup@swedbankpay.se; and supply them with the relevant transaction reference or payment token. If you want to delete tokens by payerReference, the request and response should look like this: Delete Payment Token Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment stating why this is being deleted\" } Delete Payment Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" } }, { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" } } ] } } Deleting Single Tokens For single token deletions, the request and response should look like this. In this example, the token is connected to a card. If it was a token connected to an invoice, the instrumentDisplayName would be the payer’s date of birth. Delete Single Token Request For Checkout Integrations Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/paymenttokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment stating why this is being deleted\" } Delete Single Token Response For Checkout Integrations Response 1 2 3 4 5 6 7 8 9 10 11 12 HTTP/1.1 200 OK Content-Type: application/json { \"paymentToken\": \"\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2022\", \"cardBrand\": \"Visa\" } }",
    "tags": "",
    "url": "/checkout-v3/features/optional/one-click-payments.html"
  },{
    "title": "One-Click Payments",
    "text": "One-Click Payments One-Click Payments utilize a previously generated payment token to prefill payment details for credit card or invoice payments pages - which means that the payer don’t need to enter these details for every purchase. Introduction For card and invoice payments, the payment flow and implementation varies from your default only being the use of a paymentToken. The details in this section describe explicitly the parameters that must be set to enable one-click purchases. API Requests To Generate The Payment Token When making the initial purchase request, you need to generate a paymentToken. You can do this by setting the generatePaymentToken field in the request’s payment object to true (see example below) when doing a card purchase, or setting the initial operation to Verify. generatePaymentToken field 1 2 3 4 5 6 { \"generatePaymentToken\": true, \"payer\": { \"payerReference\": \"AB1234\", } } Finding The paymentToken Value When the initial purchase is successful, a paymentToken is linked to the payment. You can return the value by performing a GET request towards the payment resource with the payerReference included. Request Towards The Payment Resource 1 2 GET /psp/paymentorders/payerownedtokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You can also perform a GET request towards the id of a Payment Order and find the paymentToken in its linked paid resource. Request Towards The Paid Resource 1 2 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You need to store the paymentToken from the response in your system and keep track of the corresponding payerReference in your system. Returning Purchases When a known payer returns to your system, you can use your payerReference to initiate one-click payments. Either by using the payerReference and setting generatePaymentToken to true, or by using payerReference and including a paymentToken in the paymentToken field. The payerReference is not generated by Swedbank Pay, but a reference set by you to identify your customer and their returning payments. An example could be to use internal customer numbers. Using payerReference and generatePaymentToken: true will display all (max 3) cards connected to the payerReference. If you wish to display one specific card only, you can remove generatePaymentToken and add the field paymentToken in it’s place. This must be the paymentToken generated in the initial purchase. One-Click Request Displaying All Cards Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"generatepaymentToken\": \"true\" }, \"payer\": { \"payerReference\": \"AB1234\", } } One-Click Request Displaying A Specific Card Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\" }, \"payer\": { \"payerReference\": \"AB1234\", } } Required Field Type Description check paymentOrder object The paymentorder object. check operation string Determines the initial operation, defining the type of payment order created. check paymentToken string The paymentToken value received in GET response towards the Payment Resource is the same paymentToken generated in the initial purchase request. The token allow you to use already stored card data to initiate one-click payments.   generatePaymentToken bool Determines if a payment token should be generated. Default value is false.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. info When redirecting to Swedbank Pay the payment page will be prefilled with the payer’s card details. See example below. How It Looks Delete Payment Token If you need to delete a paymentToken, you have two options. The first is by payerReference, which deletes all payment, recurrence and/or unscheduled tokens associated with the payer. The second is by paymentToken, which only deletes a specific token. warning Please note that this call does not erase the card number stored at Swedbank Pay. A card number is automatically deleted six months after a successful Delete payment token request. If you want card information removed at an earlier date, you need to contact ehandelsetup@swedbankpay.dk, verkkokauppa.setup@swedbankpay.fi, ehandelsetup@swedbankpay.no or ehandelsetup@swedbankpay.se; and supply them with the relevant transaction reference or payment token. If you want to delete tokens by payerReference, the request and response should look like this: Delete Payment Token Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment stating why this is being deleted\" } Delete Payment Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" } }, { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" } } ] } } Deleting Single Tokens For single token deletions, the request and response should look like this. In this example, the token is a payment token and is connected to a card. Delete Single Token Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 PATCH /psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\", \"tokenType\" : \"PaymentToken\" } } Delete Single Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/creditcard/payments/instrumentdata/12345678-1234-1234-1234-123456789000\", \"paymentToken\": \"12345678-1234-1234-1234-123456789000\", \"payeeId\": \"61c65499-de5c-454e-bf4c-043f22538d49\", \"isDeleted\": true, \"isPayeeToken\": false, \"cardBrand\": \"Visa\", \"maskedPan\": \"123456xxxxxx1111\", \"expiryDate\": \"MM/YYYY\", \"tokenType\" : \"PaymentToken\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/optional/one-click-payments.html"
  },{
    "title": "One-Click Payments",
    "text": "One-Click Payments One-Click Payments utilize a previously generated payment token to prefill payment details for credit card or invoice payments pages - which means that the payer don’t need to enter these details for every purchase. Introduction For card and invoice payments, the payment flow and implementation varies from your default only being the use of a paymentToken. The details in this section describe explicitly the parameters that must be set to enable one-click purchases. API Requests To Generate The Payment Token When making the initial purchase request, you need to generate a paymentToken. You can do this by setting the generatePaymentToken field in the request’s payment object to true (see example below) when doing a card purchase, or setting the initial operation to Verify. generatePaymentToken field 1 2 3 4 5 6 { \"generatePaymentToken\": true, \"payer\": { \"payerReference\": \"AB1234\", } } Finding The paymentToken Value When the initial purchase is successful, a paymentToken is linked to the payment. You can return the value by performing a GET request towards the payment resource with the payerReference included. Request Towards The Payment Resource 1 2 GET /psp/paymentorders/payerownedtokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You can also perform a GET request towards the id of a Payment Order and find the paymentToken in its linked paid resource. Request Towards The Paid Resource 1 2 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You need to store the paymentToken from the response in your system and keep track of the corresponding payerReference in your system. Returning Purchases When a known payer returns to your system, you can use your payerReference to initiate one-click payments. Either by using the payerReference and setting generatePaymentToken to true, or by using payerReference and including a paymentToken in the paymentToken field. The payerReference is not generated by Swedbank Pay, but a reference set by you to identify your customer and their returning payments. An example could be to use internal customer numbers. Using payerReference and generatePaymentToken: true will display all (max 3) cards connected to the payerReference. If you wish to display one specific card only, you can remove generatePaymentToken and add the field paymentToken in it’s place. This must be the paymentToken generated in the initial purchase. One-Click Request Displaying All Cards Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"generatepaymentToken\": \"true\" }, \"payer\": { \"payerReference\": \"AB1234\", } } One-Click Request Displaying A Specific Card Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\" }, \"payer\": { \"payerReference\": \"AB1234\", } } Required Field Type Description check paymentOrder object The paymentorder object. check operation string Determines the initial operation, defining the type of payment order created. check paymentToken string The paymentToken value received in GET response towards the Payment Resource is the same paymentToken generated in the initial purchase request. The token allow you to use already stored card data to initiate one-click payments.   generatePaymentToken bool Determines if a payment token should be generated. Default value is false.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. info When redirecting to Swedbank Pay the payment page will be prefilled with the payer’s card details. See example below. How It Looks Delete Payment Token If you need to delete a paymentToken, you have two options. The first is by payerReference, which deletes all payment, recurrence and/or unscheduled tokens associated with the payer. The second is by paymentToken, which only deletes a specific token. warning Please note that this call does not erase the card number stored at Swedbank Pay. A card number is automatically deleted six months after a successful Delete payment token request. If you want card information removed at an earlier date, you need to contact ehandelsetup@swedbankpay.dk, verkkokauppa.setup@swedbankpay.fi, ehandelsetup@swedbankpay.no or ehandelsetup@swedbankpay.se; and supply them with the relevant transaction reference or payment token. If you want to delete tokens by payerReference, the request and response should look like this: Delete Payment Token Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment stating why this is being deleted\" } Delete Payment Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" } }, { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" } } ] } } Deleting Single Tokens For single token deletions, the request and response should look like this. In this example, the token is a payment token and is connected to a card. Delete Single Token Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 PATCH /psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\", \"tokenType\" : \"PaymentToken\" } } Delete Single Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/creditcard/payments/instrumentdata/12345678-1234-1234-1234-123456789000\", \"paymentToken\": \"12345678-1234-1234-1234-123456789000\", \"payeeId\": \"61c65499-de5c-454e-bf4c-043f22538d49\", \"isDeleted\": true, \"isPayeeToken\": false, \"cardBrand\": \"Visa\", \"maskedPan\": \"123456xxxxxx1111\", \"expiryDate\": \"MM/YYYY\", \"tokenType\" : \"PaymentToken\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/one-click-payments.html"
  },{
    "title": "One-Click Payments",
    "text": "One-Click Payments One-Click Payments utilize a previously generated payment token to prefill payment details for credit card or invoice payments pages - which means that the payer don’t need to enter these details for every purchase. Introduction For card and invoice payments, the payment flow and implementation varies from your default only being the use of a paymentToken. The details in this section describe explicitly the parameters that must be set to enable one-click purchases. API Requests To Generate The Payment Token When making the initial purchase request, you need to generate a paymentToken. You can do this by setting the generatePaymentToken field in the request’s payment object to true (see example below) when doing a card purchase, or setting the initial operation to Verify. generatePaymentToken field 1 2 3 4 5 6 { \"generatePaymentToken\": true, \"payer\": { \"payerReference\": \"AB1234\", } } Finding The paymentToken Value When the initial purchase is successful, a paymentToken is linked to the payment. You can return the value by performing a GET request towards the payment resource with the payerReference included. Request Towards The Payment Resource 1 2 GET /psp/paymentorders/payerownedtokens/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You can also perform a GET request towards the id of a Payment Order and find the paymentToken in its linked paid resource. Request Towards The Paid Resource 1 2 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; You need to store the paymentToken from the response in your system and keep track of the corresponding payerReference in your system. Returning Purchases When a known payer returns to your system, you can use your payerReference to initiate one-click payments. Either by using the payerReference and setting generatePaymentToken to true, or by using payerReference and including a paymentToken in the paymentToken field. The payerReference is not generated by Swedbank Pay, but a reference set by you to identify your customer and their returning payments. An example could be to use internal customer numbers. Using payerReference and generatePaymentToken: true will display all (max 3) cards connected to the payerReference. If you wish to display one specific card only, you can remove generatePaymentToken and add the field paymentToken in it’s place. This must be the paymentToken generated in the initial purchase. One-Click Request Displaying All Cards Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"generatepaymentToken\": \"true\" }, \"payer\": { \"payerReference\": \"AB1234\", } } One-Click Request Displaying A Specific Card Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\" }, \"payer\": { \"payerReference\": \"AB1234\", } } Required Field Type Description check paymentOrder object The paymentorder object. check operation string Determines the initial operation, defining the type of payment order created. check paymentToken string The paymentToken value received in GET response towards the Payment Resource is the same paymentToken generated in the initial purchase request. The token allow you to use already stored card data to initiate one-click payments.   generatePaymentToken bool Determines if a payment token should be generated. Default value is false.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. info When redirecting to Swedbank Pay the payment page will be prefilled with the payer’s card details. See example below. How It Looks Delete Payment Token If you need to delete a paymentToken, you have two options. The first is by payerReference, which deletes all payment, recurrence and/or unscheduled tokens associated with the payer. The second is by paymentToken, which only deletes a specific token. warning Please note that this call does not erase the card number stored at Swedbank Pay. A card number is automatically deleted six months after a successful Delete payment token request. If you want card information removed at an earlier date, you need to contact ehandelsetup@swedbankpay.dk, verkkokauppa.setup@swedbankpay.fi, ehandelsetup@swedbankpay.no or ehandelsetup@swedbankpay.se; and supply them with the relevant transaction reference or payment token. If you want to delete tokens by payerReference, the request and response should look like this: Delete Payment Token Request Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Comment stating why this is being deleted\" } Delete Payment Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" } }, { \"tokenType\": \"Payment\", \"token\": \"{paymentToken}\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" } } ] } } Deleting Single Tokens For single token deletions, the request and response should look like this. In this example, the token is a payment token and is connected to a card. Delete Single Token Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 PATCH /psp/creditcard/payments/instrumentData/5a17c24e-d459-4567-bbad-aa0f17a76119 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { { \"state\": \"Deleted\", \"comment\": \"Comment on why the deletion is happening\", \"tokenType\" : \"PaymentToken\" } } Delete Single Token Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 200 OK Content-Type: application/json { \"instrumentData\": { \"id\": \"/psp/creditcard/payments/instrumentdata/12345678-1234-1234-1234-123456789000\", \"paymentToken\": \"12345678-1234-1234-1234-123456789000\", \"payeeId\": \"61c65499-de5c-454e-bf4c-043f22538d49\", \"isDeleted\": true, \"isPayeeToken\": false, \"cardBrand\": \"Visa\", \"maskedPan\": \"123456xxxxxx1111\", \"expiryDate\": \"MM/YYYY\", \"tokenType\" : \"PaymentToken\" } }",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/one-click-payments.html"
  },{
    "title": "OpenAsync Method",
    "text": "The OpenAsync call is the first method call that actually communicates with the terminal. It uses the information passed in the SaleApplInfo to the Start call. This starts a login session with the terminal. warning Warning: Even if the Open is successful, some action towards the host will occur and possibly cause the next method call to fail. info Reset terminal state: A LoginRequest that happens when calling OpenAsync, should reset states in the terminal. A login session remains until next open, close or reboot. info POIID cannot change during login session: To change POIID for a terminal a Logout or terminal reboot needs to be performed Returns An OpenResult object. 1 2 3 4 5 6 7 8 9 10 public class OpenResult { public OpenResult(); public ResponseResult Result { get; set; } public string Text { get; set; } public string SoftwareVersion { get; set; } public string SerialNumber { get; set; } public TerminalEnvironment Environment { get; set; } } 1 public enum ResponseResult { Success, Failure };",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/openasync.html"
  },{
    "title": "Operations",
    "text": "Operations When a payment order resource is created and during its lifetime, it will have a set of operations that can be performed on it. The state of the payment order resource, what the access token is authorized to do, the chosen payment instrument and its transactional states, etc. determine the available operations before the initial purchase. A list of possible operations and their explanation is given below. Operations 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-order\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations\", \"rel\": \"cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures\", \"rel\": \"capture\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals\", \"rel\": \"reversal\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/checkout/073115b6226e834dd9b1665771bae76223b4488429729155587de689555c5539?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/checkout/core/js/px.checkout.client.js?token=073115b6226e834dd9b1665771bae76223b4488429729155587de689555c5539&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" } ] } Field Type Description method string GET, PATCH, POST, etc. The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. contentType string The HTTP content type of the resource referenced in the href field. The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-order Updates the order with a change in orderItems, amount and/or vatAmount. abort Aborts the payment order before any financial transactions are performed. cancel Used to cancel authorized and not yet captured transactions. If a cancellation is performed after doing a part-capture, it will only affect the not yet captured authorization amount. capture The second part of a two-phase transaction where the authorized amount is sent from the payer to the payee. It is possible to do a part-capture on a subset of the authorized amount. Several captures on the same payment are possible, up to the total authorization amount. reversal Used to reverse a payment. It is only possible to reverse a payment that has been captured and not yet reversed. redirect-checkout Contains the URL used to redirect the payer to the Swedbank Pay Payments containing the Payment Menu. view-checkout Contains the JavaScript href that is used to embed the Payment Menu UI directly on the webshop/merchant site.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operations When a payment order resource is created and during its lifetime, it will have a set of operations that can be performed on it. The state of the payment order resource, what the access token is authorized to do, the chosen payment instrument and its transactional states, etc. determine the available operations before the initial purchase. A list of possible operations and their explanation is given below. Operations 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-order\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations\", \"rel\": \"cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures\", \"rel\": \"capture\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals\", \"rel\": \"reversal\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/checkout/073115b6226e834dd9b1665771bae76223b4488429729155587de689555c5539?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/checkout/core/js/px.checkout.client.js?token=073115b6226e834dd9b1665771bae76223b4488429729155587de689555c5539&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" } ] } Field Type Description method string GET, PATCH, POST, etc. The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. contentType string The HTTP content type of the resource referenced in the href field. The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-order Updates the order with a change in orderItems, amount and/or vatAmount. abort Aborts the payment order before any financial transactions are performed. cancel Used to cancel authorized and not yet captured transactions. If a cancellation is performed after doing a part-capture, it will only affect the not yet captured authorization amount. capture The second part of a two-phase transaction where the authorized amount is sent from the payer to the payee. It is possible to do a part-capture on a subset of the authorized amount. Several captures on the same payment are possible, up to the total authorization amount. reversal Used to reverse a payment. It is only possible to reverse a payment that has been captured and not yet reversed. redirect-checkout Contains the URL used to redirect the payer to the Swedbank Pay Payments containing the Payment Menu. view-checkout Contains the JavaScript href that is used to embed the Payment Menu UI directly on the webshop/merchant site.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operation paid-payment The paid-payment operation confirms that the transaction has been successful and that the payment is completed. A paid-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect the paid payment, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"paid\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"number\": 1234567890, \"transaction\": { \"id\": \"/pspswish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/\", \"number\": 1234567891 }, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"amount\": 1500 } } Show fields Hide fields Field Type Description payment string The relative URL and unique identifier of the payment resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. transaction string The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL and unique identifier of the transaction resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference, which should reflect the order reference found in the merchant’s systems. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. tokens integer A list of generated tokens. details integer A human readable and descriptive text of the payment. cardBrand string Visa, MC, etc. The brand of the card. maskedPan string The masked PAN number of the card. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. issuingBank string The name of the bank that issued the card used for the authorization. countryCode string The country the card is issued in. acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Operation failed-payment The failed-payment operation means that something went wrong during the payment process. The transaction was not authorized, and no further transactions can be created if the payment is in this state. A failed-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"method\": \"GET\", \"contentType\": \"application/problem+json\" } To inspect why the payment failed, you need to perform an HTTP GET request towards the operation’s href field. The problem message can be found in details field. Under problems you can see which problem occurred, a description of the problem and the corresponding error code. An example of the request and response is given below. Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"problem\": { \"type\": \"https://api.externalintegration.payex.com/psp/errordetail/swish/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Authorization transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } Operation aborted-payment The aborted-payment operation means that the merchant aborted the payment before the payer fulfilled the payment process. You can see this under abortReason in the response. An aborted-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/&lt;paymentId&gt;/aborted\", \"rel\": \"aborted-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect why the payment was aborted, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"aborted\": { \"abortReason\": \"Aborted by consumer\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operation paid-payment The paid-payment operation confirms that the transaction has been successful and that the payment is completed. A paid-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect the paid payment, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"paid\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"number\": 1234567890, \"transaction\": { \"id\": \"/psptrustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/\", \"number\": 1234567891 }, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"amount\": 1500 } } Show fields Hide fields Field Type Description payment string The relative URL and unique identifier of the payment resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. transaction string The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL and unique identifier of the transaction resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference, which should reflect the order reference found in the merchant’s systems. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. tokens integer A list of generated tokens. details integer A human readable and descriptive text of the payment. cardBrand string Visa, MC, etc. The brand of the card. maskedPan string The masked PAN number of the card. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. issuingBank string The name of the bank that issued the card used for the authorization. countryCode string The country the card is issued in. acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Operation failed-payment The failed-payment operation means that something went wrong during the payment process. The transaction was not authorized, and no further transactions can be created if the payment is in this state. A failed-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"method\": \"GET\", \"contentType\": \"application/problem+json\" } To inspect why the payment failed, you need to perform an HTTP GET request towards the operation’s href field. The problem message can be found in details field. Under problems you can see which problem occurred, a description of the problem and the corresponding error code. An example of the request and response is given below. Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"problem\": { \"type\": \"https://api.externalintegration.payex.com/psp/errordetail/trustly/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete operation, error calling 3rd party\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } Operation aborted-payment The aborted-payment operation means that the merchant aborted the payment before the payer fulfilled the payment process. You can see this under abortReason in the response. An aborted-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/&lt;paymentId&gt;/aborted\", \"rel\": \"aborted-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect why the payment was aborted, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"aborted\": { \"abortReason\": \"Aborted by consumer\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operation paid-payment The paid-payment operation confirms that the transaction has been successful and that the payment is completed. A paid-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect the paid payment, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"paid\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"number\": 1234567890, \"transaction\": { \"id\": \"/pspinvoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/\", \"number\": 1234567891 }, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"amount\": 1500 } } Show fields Hide fields Field Type Description payment string The relative URL and unique identifier of the payment resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. transaction string The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL and unique identifier of the transaction resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference, which should reflect the order reference found in the merchant’s systems. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. tokens integer A list of generated tokens. details integer A human readable and descriptive text of the payment. cardBrand string Visa, MC, etc. The brand of the card. maskedPan string The masked PAN number of the card. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. issuingBank string The name of the bank that issued the card used for the authorization. countryCode string The country the card is issued in. acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Operation failed-payment The failed-payment operation means that something went wrong during the payment process. The transaction was not authorized, and no further transactions can be created if the payment is in this state. A failed-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"method\": \"GET\", \"contentType\": \"application/problem+json\" } To inspect why the payment failed, you need to perform an HTTP GET request towards the operation’s href field. The problem message can be found in details field. Under problems you can see which problem occurred, a description of the problem and the corresponding error code. An example of the request and response is given below. Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"problem\": { \"type\": \"https://api.externalintegration.payex.com/psp/errordetail/invoice/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Authorization transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } Operation aborted-payment The aborted-payment operation means that the merchant aborted the payment before the payer fulfilled the payment process. You can see this under abortReason in the response. An aborted-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/&lt;paymentId&gt;/aborted\", \"rel\": \"aborted-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect why the payment was aborted, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"aborted\": { \"abortReason\": \"Aborted by consumer\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operation paid-payment The paid-payment operation confirms that the transaction has been successful and that the payment is completed. A paid-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect the paid payment, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"paid\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"number\": 1234567890, \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/\", \"number\": 1234567891 }, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"amount\": 1500, \"tokens\": [ { \"type\": \"payment\", \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"name\": \"4925xxxxxx000004\", \"expiryDate\": \"mm/yyyy\" }, { \"type\": \"recurrence\", \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"name\": \"4925xxxxxx000004\", \"expiryDate\": \"mm/yyyy\" }, { \"type\": \"transactionsOnFile\", \"token\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"name\": \"4925xxxxxx000004\", \"expiryDate\": \"mm/yyyy\" } ], \"details\": { \"cardBrand\": \"Visa\", \"MaskedPan\": \"4925xxxxxx000004\", \"cardType\": \"Credit\", \"issuingBank\": \"UTL MAESTRO\", \"countryCode\": \"999\", \"acquirerTransactionType\": \"3DSECURE\", \"issuerAuthorizationApprovalCode\": \"397136\", \"acquirerStan\": \"39736\", \"acquirerTerminalId\": \"39\", \"acquirerTransactionTime\": \"2017-08-29T13:42:18Z\", \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"transactionInitiator\": \"MERCHANT\" } } } Show fields Hide fields Field Type Description payment string The relative URL and unique identifier of the payment resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. transaction string The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL and unique identifier of the transaction resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference, which should reflect the order reference found in the merchant’s systems. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. tokens integer A list of generated tokens. details integer A human readable and descriptive text of the payment. cardBrand string Visa, MC, etc. The brand of the card. maskedPan string The masked PAN number of the card. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. issuingBank string The name of the bank that issued the card used for the authorization. countryCode string The country the card is issued in. acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Operation failed-payment The failed-payment operation means that something went wrong during the payment process. The transaction was not authorized, and no further transactions can be created if the payment is in this state. A failed-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"method\": \"GET\", \"contentType\": \"application/problem+json\" } To inspect why the payment failed, you need to perform an HTTP GET request towards the operation’s href field. The problem message can be found in details field. Under problems you can see which problem occurred, a description of the problem and the corresponding error code. An example of the request and response is given below. Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"problem\": { \"type\": \"https://api.externalintegration.payex.com/psp/errordetail/creditcard/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Authorization transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } Operation aborted-payment The aborted-payment operation means that the merchant aborted the payment before the payer fulfilled the payment process. You can see this under abortReason in the response. An aborted-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/&lt;paymentId&gt;/aborted\", \"rel\": \"aborted-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect why the payment was aborted, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"aborted\": { \"abortReason\": \"Aborted by consumer\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operation paid-payment The paid-payment operation confirms that the transaction has been successful and that the payment is completed. A paid-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect the paid payment, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"paid\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"number\": 1234567890, \"transaction\": { \"id\": \"/pspmobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/\", \"number\": 1234567891 }, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"amount\": 1500 } } Show fields Hide fields Field Type Description payment string The relative URL and unique identifier of the payment resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. transaction string The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL and unique identifier of the transaction resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference, which should reflect the order reference found in the merchant’s systems. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. tokens integer A list of generated tokens. details integer A human readable and descriptive text of the payment. cardBrand string Visa, MC, etc. The brand of the card. maskedPan string The masked PAN number of the card. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. issuingBank string The name of the bank that issued the card used for the authorization. countryCode string The country the card is issued in. acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Operation failed-payment The failed-payment operation means that something went wrong during the payment process. The transaction was not authorized, and no further transactions can be created if the payment is in this state. A failed-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"method\": \"GET\", \"contentType\": \"application/problem+json\" } To inspect why the payment failed, you need to perform an HTTP GET request towards the operation’s href field. The problem message can be found in details field. Under problems you can see which problem occurred, a description of the problem and the corresponding error code. An example of the request and response is given below. Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"problem\": { \"type\": \"https://api.externalintegration.payex.com/psp/errordetail/mobilepay/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Authorization transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } Operation aborted-payment The aborted-payment operation means that the merchant aborted the payment before the payer fulfilled the payment process. You can see this under abortReason in the response. An aborted-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/&lt;paymentId&gt;/aborted\", \"rel\": \"aborted-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect why the payment was aborted, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"aborted\": { \"abortReason\": \"Aborted by consumer\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operation paid-payment The paid-payment operation confirms that the transaction has been successful and that the payment is completed. A paid-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect the paid payment, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"paid\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"number\": 1234567890, \"transaction\": { \"id\": \"/pspvipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/\", \"number\": 1234567891 }, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"amount\": 1500 } } Show fields Hide fields Field Type Description payment string The relative URL and unique identifier of the payment resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. transaction string The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL and unique identifier of the transaction resource this transaction belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference, which should reflect the order reference found in the merchant’s systems. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. tokens integer A list of generated tokens. details integer A human readable and descriptive text of the payment. cardBrand string Visa, MC, etc. The brand of the card. maskedPan string The masked PAN number of the card. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. issuingBank string The name of the bank that issued the card used for the authorization. countryCode string The country the card is issued in. acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Operation failed-payment The failed-payment operation means that something went wrong during the payment process. The transaction was not authorized, and no further transactions can be created if the payment is in this state. A failed-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"method\": \"GET\", \"contentType\": \"application/problem+json\" } To inspect why the payment failed, you need to perform an HTTP GET request towards the operation’s href field. The problem message can be found in details field. Under problems you can see which problem occurred, a description of the problem and the corresponding error code. An example of the request and response is given below. Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"problem\": { \"type\": \"https://api.externalintegration.payex.com/psp/errordetail/vipps/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Authorization transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } Operation aborted-payment The aborted-payment operation means that the merchant aborted the payment before the payer fulfilled the payment process. You can see this under abortReason in the response. An aborted-payment operation looks like this: 1 2 3 4 5 6 { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/&lt;paymentId&gt;/aborted\", \"rel\": \"aborted-payment\", \"method\": \"GET\", \"contentType\": \"application/json\" } To inspect why the payment was aborted, you need to perform an HTTP GET request towards the operation’s href field. An example of the request and response is given below. Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"aborted\": { \"abortReason\": \"Aborted by consumer\" } }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operations When a payment order resource is created and during its lifetime, it will have a set of operations that can be performed on it. The state of the payment order resource, what the access token is authorized to do, the chosen payment instrument and its transactional states, etc. determine the available operations before the initial purchase. A list of possible operations and their explanation is given below. Operations 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures\", \"rel\": \"create-paymentorder-capture\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations\", \"rel\": \"create-paymentorder-cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals\", \"rel\": \"create-paymentorder-reversal\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid\", \"rel\": \"paid-paymentorder\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/failed\", \"rel\": \"failed-paymentorder\", \"contentType\": \"application/problem+json\" }, { // Deprecated operation. Do not use! \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { // Deprecated operation. Do not use! \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\", \"rel\": \"create-cancel\", \"contentType\": \"application/json\" }, { // Deprecated operation. Do not use! \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\", \"rel\": \"create-reversal\", \"contentType\": \"application/json\" } ] } Field Type Description method string GET, PATCH, POST, etc. The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. contentType string The HTTP content type of the resource referenced in the href field. The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-paymentorder-abort Aborts the payment order before any financial transactions are performed. update-paymentorder-updateorder Updates the order with a change in the amount and/or vatAmount. redirect-paymentorder Contains the URL used to redirect the payer to the Swedbank Pay Payments containing the Payment Menu. view-paymentorder Contains the JavaScript href that is used to embed the Payment Menu UI directly on the webshop/merchant site. create-paymentorder-capture The second part of a two-phase transaction where the authorized amount is sent from the payer to the payee. It is possible to do a part-capture on a subset of the authorized amount. Several captures on the same payment are possible, up to the total authorization amount. create-paymentorder-cancel Used to cancel authorized and not yet captured transactions. If a cancellation is performed after doing a part-capture, it will only affect the not yet captured authorization amount. create-paymentorder-reversal Used to reverse a payment. It is only possible to reverse a payment that has been captured and not yet reversed. paid-paymentorder Returns the information about a paymentorder that has the status paid. failed-paymentorder Returns the information about a paymentorder that has the status failed. create-capture Deprecated operation. Do not use! create-cancel Deprecated operation. Do not use! create-cancel Deprecated operation. Do not use!",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/operations.html"
  },{
    "title": "Operations",
    "text": "Operations When a payment order resource is created and during its lifetime, it will have a set of operations that can be performed on it. The state of the payment order resource, what the access token is authorized to do, the chosen payment instrument and its transactional states, etc. determine the available operations before the initial purchase. A list of possible operations and their explanation is given below. Operations 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures\", \"rel\": \"create-paymentorder-capture\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations\", \"rel\": \"create-paymentorder-cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals\", \"rel\": \"create-paymentorder-reversal\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid\", \"rel\": \"paid-paymentorder\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/failed\", \"rel\": \"failed-paymentorder\", \"contentType\": \"application/problem+json\" }, { // Deprecated operation. Do not use! \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { // Deprecated operation. Do not use! \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\", \"rel\": \"create-cancel\", \"contentType\": \"application/json\" }, { // Deprecated operation. Do not use! \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\", \"rel\": \"create-reversal\", \"contentType\": \"application/json\" } ] } Field Type Description method string GET, PATCH, POST, etc. The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. contentType string The HTTP content type of the resource referenced in the href field. The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-paymentorder-abort Aborts the payment order before any financial transactions are performed. update-paymentorder-updateorder Updates the order with a change in the amount and/or vatAmount. redirect-paymentorder Contains the URL used to redirect the payer to the Swedbank Pay Payments containing the Payment Menu. view-paymentorder Contains the JavaScript href that is used to embed the Payment Menu UI directly on the webshop/merchant site. create-paymentorder-capture The second part of a two-phase transaction where the authorized amount is sent from the payer to the payee. It is possible to do a part-capture on a subset of the authorized amount. Several captures on the same payment are possible, up to the total authorization amount. create-paymentorder-cancel Used to cancel authorized and not yet captured transactions. If a cancellation is performed after doing a part-capture, it will only affect the not yet captured authorization amount. create-paymentorder-reversal Used to reverse a payment. It is only possible to reverse a payment that has been captured and not yet reversed. paid-paymentorder Returns the information about a paymentorder that has the status paid. failed-paymentorder Returns the information about a paymentorder that has the status failed. create-capture Deprecated operation. Do not use! create-cancel Deprecated operation. Do not use! create-cancel Deprecated operation. Do not use!",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/operations.html"
  },{
    "title": "Order Items",
    "text": "Order Items The orderItems field of the paymentOrder is an array containing the items being purchased with the order. Used to print on invoices if the payer chooses to pay with invoice, among other things. orderItems is required in all requests. It should be specified on both payment order creation as well as on Capture. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ] Show fields Hide fields Required Field Type Description check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, DISCOUNT, VALUE_CODE, or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, such as a product page   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/order-items.html"
  },{
    "title": "Order Items",
    "text": "Order Items The orderItems field of the paymentOrder is an array containing the items being purchased with the order. Used to print on invoices if the payer chooses to pay with invoice, among other things. orderItems is required in all requests. It should be specified on both payment order creation as well as on Capture. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ] Show fields Hide fields Required Field Type Description check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, DISCOUNT, VALUE_CODE, or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, such as a product page   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.",
    "tags": "",
    "url": "/checkout-v3/features/optional/order-items.html"
  },{
    "title": "Order Items",
    "text": "Order Items The orderItems field of the paymentOrder is an array containing the items being purchased with the order. Used to print on invoices if the payer chooses to pay with invoice, among other things. orderItems is required in all requests. It should be specified on both payment order creation as well as on Capture. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ] Show fields Hide fields Required Field Type Description check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, DISCOUNT, VALUE_CODE, or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, such as a product page   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/order-items.html"
  },{
    "title": "Order Items",
    "text": "Order Items The orderItems field of the paymentOrder is an array containing the items being purchased with the order. Used to print on invoices if the payer chooses to pay with invoice, among other things. orderItems is required in all requests. It should be specified on both payment order creation as well as on Capture. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ] Show fields Hide fields Required Field Type Description check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, DISCOUNT, VALUE_CODE, or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, such as a product page   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/order-items.html"
  },{
    "title": "Partners",
    "text": "Partners email Denmark Our Danish partners arrow_forward email Norway Our Norwegian partners arrow_forward email Sweden Our Swedish partners arrow_forward",
    "tags": "",
    "url": "/checkout-v3/resources/partners.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference is used as a receipt/invoice number when the payer chooses to pay with Invoice Payments. The specific processing rules are described below. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. It must be in digits and/or letters (excluding - and no special characters), and be within string(30). The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeInfo",
    "text": "PayeeInfo The payeeinfo resource contains information about the payee (i.e. a merchant, a corporation etc) related to a specific payment. GET Request Request 1 2 3 4 GET /psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"payeeInfo\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\", \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"EN1234\", \"payeeName\": \"TestMerchant1\", \"productCategory\": \"EF1234\", \"orderReference\": \"or-123456\" } } Field Type Description payment string The relative URL and unique identifier of the payment resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the payeeInfo resource this payeeInfo belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. You therefore need to ensure that the value given here is valid in the settlement. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/payee-info.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference is used as a receipt/invoice number when the payer chooses to pay with Invoice Payments. The specific processing rules are described below. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. It must be in digits and/or letters (excluding - and no special characters), and be within string(30). The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/payee-reference.html"
  },{
    "title": "PayeeReference",
    "text": "Payee Reference The payeeReference given when creating transactions and payments has some specific processing rules depending on specifications in the contract. It must be unique for every operation, used to ensure exactly-once delivery of a transactional operation from the merchant system. Its length and content validation is dependent on whether the transaction.number or the payeeReference is sent to the acquirer. If you select Option A in the settlement process (Swedbank Pay will handle the settlement), Swedbank Pay will send the transaction.number to the acquirer and the payeeReference must be in the format of characters A-Za-z0-9 and string(30). If you select Option B in the settlement process (you will handle the settlement yourself), Swedbank Pay will send the payeeReference to the acquirer and it will be limited to the format of string(12) and all characters must be digits.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/payee-reference.html"
  },{
    "title": "Payer Aware Payment Menu",
    "text": "One-Click Payments It is really easy to improve the purchase experience by auto-filling the payment details. In order to do this, SwedbankPay needs to identify your customer. If the customer is identified and has approved storing the payment details, the rest is handled automatically. One-Click Payments In Enterprise Enterprise merchant can supply the email and phone of the customer to let SwedbankPay match the customer internally and let the customer store card information (if desired). iOS 1 2 3 4 5 6 7 8 var paymentOrder = ... payment.payer = .init( consumerProfileRef: nil, email: \"leia.ahlstrom@payex.com\", msisdn: \"+46739000001\", payerReference: unique-identifier ) Android 1 2 3 4 5 6 7 8 9 10 val paymentOrder = PaymentOrder( ... payer = PaymentOrderPayer( email = \"leia.ahlstrom@payex.com\", msisdn = \"+46739000001\", payerReference = unique-identifier ), ... ) Now the customer has the option to store card numbers or select one of the previously stored cards. More info in the documentation. One-Click Payments In PaymentsOnly Using Payer Aware Payment Menu involves managing payment tokens yourself. If you are using a Merchant Backend, you can have a payment order create payment tokens by setting the generatePaymentToken and payerReference fields of PaymentOrder and PaymentOrderPayer, respectively. Android 1 2 3 4 5 6 7 8 val paymentOrder = PaymentOrder( ..., generatePaymentToken = true, payer = PaymentOrderPayer( payerReference = unique-identifier ) ... ) iOS 1 2 3 4 paymentOrder.generatePaymentToken = true paymentOrder.payer = PaymentOrderPayer( payerReference: unique-identifier ) Token Retrieval Digital Payments Retrieve the token by expanding the “paid” property of a previous successful payment. To see this in action, the example merchant backend has an endpoint called “/expand” that takes a “resource” (in this case the paymentId), and an array of properties to expand. You get a payment order back, and in the expanded paid property there is a “tokens” array (if the customer agreed to let you store the information). A good practice is to only do this on the backend and serve the token as part of user’s info, to have the token available at the next purchase. iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // ExpandResponse is a struct you define to match the response from your server, since you will want to adapt it to your needs. let request = configuration.expandOperation(paymentId: paymentId, expand: [.paid], endpoint: \"expand\") { (result: Result&lt;ExpandResponse, Error&gt;) in if case .success(let success) = result, let token = success.paymentOrder.paid?.tokens.first?.token { // Now save the token for the next purchase. // Notice that the backend never needs to respond with the complete expanded PaymentOrder. // This is just an illustration of how expansion can work } else { //handle failure } } Android 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // N.B! expandOperation is a suspending function, so this call must be done inside suspending code. // ExpandedPaymentOrder is a data class you define to match the response from your server, since you will want to adapt it to your needs. try { var result: ExpandedPaymentOrder = merchantConfiguration.expandOperation( context, paymentId, arrayOf(\"paid\"), \"expand\", ExpandedPaymentOrder::class.java ) return expandedOrder.paid?.tokens?.first()?.token } catch (error: UnexpectedResponseException) { //handle error } Read more on expanding properties here. Token Retrieval In Checkout V2 If you are still using the older Checkout version 2, the SDK contains a utility method to query a conforming Merchant Backend server for the payment tokens of a particular payerReference. Of course, you should have proper authentication in your implementation if you use this functionality, to prevent unauthorized access to other users’ tokens (the example implementation has the endpoint disabled by default). The utility method allows you to add extra header to the request; these can be useful for implementing authentication. Android 1 2 3 4 5 6 7 8 9 10 // N.B! getPayerOwnedPaymentTokens is a suspending function, // so this call must be done inside suspending code. // If the backend responds with a Problem, the call will throw // a RequestProblemException. val response = MerchantBackend.getPayerOwnedPaymentTokens( context, configuration, payerReference, \"ExampleHeader\", \"ExampleValue\" ) iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 let request = SwedbankPaySDK.MerchantBackend.getPayerOwnedPaymentTokens( configuration: configuration, payerReference: payerReference, extraHeaders: [ \"ExampleHeader\": \"ExampleValue\" ] ) { result in // Use result here. // Be prepared for any errors of the type // SwedbankPaySDK.MerchantBackendError. } // If you need to cancel the request before it is complete, call // request.cancel() Token Usage Usage of tokens are the same in both V3 as in V2 and to use a payment token with a Merchant Backend, create a payment order where you set the paymentToken field of PaymentOrder and the payerReference field of PaymentOrderPayer: Android 1 2 3 4 5 6 7 8 val paymentOrder = PaymentOrder( ..., payer = PaymentOrderPayer( payerReference = unique-identifier ) paymentToken = retrieved-token ... ) iOS 1 2 3 4 paymentOrder.payer = PaymentOrderPayer( payerReference: unique-identifier ) paymentOrder.paymentToken = retrieved-token Your backend implementation should have proper authentication to prevent misuse of tokens. The example implementation will reject attempts to use paymentToken by default. Disable Stored Payment Instrument Details The Merchant Backend allows you to set PaymentOrder.disableStoredPaymentDetails to use this feature as described in the Version2 Payment Menu Documentation. As mentioned there, it is important that you have obtained consent from the user for storing payment details beforehand, if you use this feature. Android 1 2 3 4 5 val paymentOrder = PaymentOrder( ..., disableStoredPaymentDetails = true ... ) iOS 1 paymentOrder.disableStoredPaymentDetails = true",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/optional/payer-aware-payment-menu.html"
  },{
    "title": "Payer Aware Payment Menu",
    "text": "Payer Aware Payment Menu To give your payers the best experience possible, you should implement the Payer Aware Payment Menu by identifying each payer with a unique identifier. It is important that you enforce a good SCA (Strong Consumer Authentication) strategy when authenticating the payer. The payer identifier must then be included as a payerReference in the paymentOrder request to Swedbank Pay. This will enable Swedbank Pay to render a unique payment menu experience for each payer. It will also increase the chance for a frictionless payment. By identifying your payers, their payment information can be stored for future purchases by setting the generatePaymentToken value to true. The payer is, by default, asked if they want to store their payment details, so even with generatePaymentToken set to true, it is still up to the payer if they want the details stored or not. info Please note that not all payment instruments provided by Swedbank Pay support Payer Awareness today. BYO Payment Menu Payment Menu v2 is versatile and can be configured in such a way that it functions like a single payment instrument. In such configuration, it is easy to Bring Your Own Payment Menu, i.e. building a customized payment menu in your own user interface. Add Stored Payment Instrument Details When building a custom payment menu, features like adding new stored payment instrument details (i.e. “Add new card”) is something that needs to be provided in your UI. This can be achieved by forcing the creation of a paymentToken by setting disableStoredPaymentDetails to true in a Purchase payment (if you want to withdraw money and create the token in the same operation), or by performing a verification (without withdrawing any money). Setting disableStoredPaymentDetails to true will turn off all stored payment details for the current purchase. The payer will also not be asked if they want to store the payment details that will be part of the purchase. When you use this feature, it is important that you have asked the payer in advance if it is ok to store their payment details for later use. Most often you will use the disableStoredPaymentDetails feature in combination with the Instrument Mode capability. If you build your own menu and want to show stored payment details, you will need to set the disableStoredPaymentDetails to true. It is important that you then store the paymentToken in your system or call Swedbank Pay with the payerReference to get all active payment tokens registered on that payer when building your menu. GDPR Remember that you have the responsibility of enforcing GDPR requirements and letting the payer remove active payment tokens when they want. It is up to you how to implement this functionality on your side, but Swedbank Pay has the API you need to make it easy to clean up old data. See more below the main paymentOrder request example, or follow the hyperlink above. A Payer Aware Payment Menu request can look like this. Payer Aware Payment Menu Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"generatePaymentToken\": true, \"language\": \"sv-SE\", \"disableStoredPaymentDetails\": false, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, , \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\" \"lastName\": \"Ahlström\" \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.     disableStoredPaymentDetails bool Set to false by default. Switching to true will turn off all stored payment details for the current purchase. When you use this feature it is important that you have asked the payer in advance if it is ok to store their payment details for later use.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.     generatePaymentToken bool Determines if a payment token should be generated. Default value is false.   check language string The language of the payer.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check payeeInfo string The payeeInfo object, containing information about the payee.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence, e.g. SE, NO, or FI.     billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.   ︎ streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)     zipCode string The postal number (ZIP code) of the payer.     city string The city of the payer.     countryCode string Country code for country of residence, e.g. SE, NO, or FI.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Payer Aware Payment Menu Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"paymentToken\" : \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"currency\": \"SEK\", \"vatAmount\": 375, \"amount\": 1500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"PostmanRuntime/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"PaymentsOnly\", \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. paymentToken string The payment token generated in the initial purchase. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The userAgent of the system used when the merchant makes a call towards the resource. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. See Operations for details. Tokens It is possible to query for all active payment tokens registered on a specific payerReference. After doing so, you can either remove all tokens or a subset of the tokens registered on the payer. This is the easiest way of cleaning up all data for Payments Only implementations. It is also possible to delete a single token if you wish to do that. GET Tokens Request Querying with a GET request will give you a response containing all tokens and the operation(s) available for them. Request 1 2 3 4 GET /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Tokens Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"token\": \"{paymentToken}\", \"tokenType\": \"Payment\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2022\", \"cardBrand\": \"Visa\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/paymenttokens/0ecf804f-e68f-404e-8ae6-adeb43052559\", \"rel\": \"delete-paymenttokens\", \"contentType\": \"application/json\" } ] }, { \"token\": \"{paymentToken}\", \"tokenType\": \"Payment\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/paymenttokens/dd9c1103-3e0f-492a-95a3-a39bb32a6b59\", \"rel\": \"delete-paymenttokens\", \"contentType\": \"application/json\" } ] }, { \"token\": \"{token}\", \"tokenType\": \"Unscheduled\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/unscheduledtokens/e2f06785-805d-4605-bf40-426a725d313d\", \"rel\": \"delete-unscheduledtokens\", \"contentType\": \"application/json\" } ] } ] }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/payerOwnedPaymentTokens/{payerReference}\", \"rel\": \"delete-payerownedtokens\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description payerOwnedTokens object The payerOwnedTokens object containing information about the payer relevant for the payment order. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. tokens integer A list of tokens connected to the payment. token string The token guid. tokenType string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. instrument string Payment instrument connected to the token. instrumentDisplayName string Payment instrument connected to the token. instrumentParameters integer A list of additional information connected to the token. Depending on the instrument, it can e.g. be expiryDate, cardBrand, email, msisdn or zipCode. operations array The array of operations that are possible to perform on the token in its current state. PATCH Request For Removing Tokens You can remove the tokens by using the following PATCH request. Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Some words about why the tokens are being deleted\" } Field Type Description state string The state you want the token to be in. comment string Explanation as to why the token is being deleted. Which will provide this response. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"token\": \"{paymentToken}\", \"tokenType\": \"Payment\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" } }, { \"token\": \"{paymentToken}\", \"tokenType\": \"Unscheduled\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" } } ] } } Show fields Hide fields Field Type Description payerOwnedTokens object The payerOwnedTokens object containing information about the payer relevant for the payment order. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. tokens integer A list of tokens connected to the payment. token string The token guid. tokenType string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. instrument string Payment instrument connected to the token. instrumentDisplayName string Payment instrument connected to the token. instrumentParameters integer A list of additional information connected to the token. Depending on the instrument, it can e.g. be expiryDate, cardBrand, email, msisdn or zipCode.",
    "tags": "",
    "url": "/checkout-v3/features/optional/payer-aware-payment-menu.html"
  },{
    "title": "Payer Aware Payment Menu",
    "text": "Payer Aware Payment Menu To give your payers the best experience possible, you should implement the Payer Aware Payment Menu by identifying each payer with a unique identifier. It is important that you enforce a good SCA (Strong Consumer Authentication) strategy when authenticating the payer. The payer identifier must then be included as a payerReference in the paymentOrder request to Swedbank Pay. This will enable Swedbank Pay to render a unique payment menu experience for each payer. It will also increase the chance for a frictionless payment. By identifying your payers, their payment information can be stored for future purchases by setting the generatePaymentToken value to true. The payer is, by default, asked if they want to store their payment details, so even with generatePaymentToken set to true, it is still up to the payer if they want the details stored or not. info Please note that not all payment instruments provided by Swedbank Pay support Payer Awareness today. BYO Payment Menu Payment Menu v2 is versatile and can be configured in such a way that it functions like a single payment instrument. In such configuration, it is easy to Bring Your Own Payment Menu, i.e. building a customized payment menu in your own user interface. Add Stored Payment Instrument Details When building a custom payment menu, features like adding new stored payment instrument details (i.e. “Add new card”) is something that needs to be provided in your UI. This can be achieved by forcing the creation of a paymentToken by setting disableStoredPaymentDetails to true in a Purchase payment (if you want to withdraw money and create the token in the same operation), or by performing a verification (without withdrawing any money). Setting disableStoredPaymentDetails to true will turn off all stored payment details for the current purchase. The payer will also not be asked if they want to store the payment details that will be part of the purchase. When you use this feature, it is important that you have asked the payer in advance if it is ok to store their payment details for later use. Most often you will use the disableStoredPaymentDetails feature in combination with the Instrument Mode capability. If you build your own menu and want to show stored payment details, you will need to set the disableStoredPaymentDetails to true. It is important that you then store the paymentToken in your system or call Swedbank Pay with the payerReference to get all active payment tokens registered on that payer when building your menu. GDPR Remember that you have the responsibility of enforcing GDPR requirements and letting the payer remove active payment tokens when they want. It is up to you how to implement this functionality on your side, but Swedbank Pay has the API you need to make it easy to clean up old data. See more below the main paymentOrder request example, or follow the hyperlink above. A Payer Aware Payment Menu request can look like this. Payer Aware Payment Menu Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"generatePaymentToken\": true, \"language\": \"sv-SE\", \"instrument\": null, \"disableStoredPaymentDetails\": false, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, , \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\" \"lastName\": \"Ahlström\" \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.     disableStoredPaymentDetails bool Set to false by default. Switching to true will turn off all stored payment details for the current purchase. When you use this feature it is important that you have asked the payer in advance if it is ok to store their payment details for later use.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.     generatePaymentToken bool Determines if a payment token should be generated. Default value is false.   check language string The language of the payer.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check payeeInfo string The payeeInfo object, containing information about the payee.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence, e.g. SE, NO, or FI.     billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.   ︎ streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)     zipCode string The postal number (ZIP code) of the payer.     city string The city of the payer.     countryCode string Country code for country of residence, e.g. SE, NO, or FI.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Payer Aware Payment Menu Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"paymentToken\" : \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"currency\": \"SEK\", \"vatAmount\": 375, \"amount\": 1500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"PostmanRuntime/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes. paymentToken string The payment token generated in the initial purchase. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The userAgent of the system used when the merchant makes a call towards the resource. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. See Operations for details. Tokens It is possible to query for all active payment tokens registered on a specific payerReference. After doing so, you can either remove all tokens or a subset of the tokens registered on the payer. This is the easiest way of cleaning up all data for Payments Only implementations. It is also possible to delete a single token if you wish to do that. GET Tokens Request Querying with a GET request will give you a response containing all tokens and the operation(s) available for them. Request 1 2 3 4 GET /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Tokens Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"token\": \"{paymentToken}\", \"tokenType\": \"Payment\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2022\", \"cardBrand\": \"Visa\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/paymenttokens/0ecf804f-e68f-404e-8ae6-adeb43052559\", \"rel\": \"delete-paymenttokens\", \"contentType\": \"application/json\" } ] }, { \"token\": \"{paymentToken}\", \"tokenType\": \"Payment\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/paymenttokens/dd9c1103-3e0f-492a-95a3-a39bb32a6b59\", \"rel\": \"delete-paymenttokens\", \"contentType\": \"application/json\" } ] }, { \"token\": \"{token}\", \"tokenType\": \"Unscheduled\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/unscheduledtokens/e2f06785-805d-4605-bf40-426a725d313d\", \"rel\": \"delete-unscheduledtokens\", \"contentType\": \"application/json\" } ] } ] }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/payerOwnedPaymentTokens/{payerReference}\", \"rel\": \"delete-payerownedtokens\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description payerOwnedTokens object The payerOwnedTokens object containing information about the payer relevant for the payment order. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. tokens integer A list of tokens connected to the payment. token string The token guid. tokenType string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. instrument string Payment instrument connected to the token. instrumentDisplayName string Payment instrument connected to the token. instrumentParameters integer A list of additional information connected to the token. Depending on the instrument, it can e.g. be expiryDate, cardBrand, email, msisdn or zipCode. operations array The array of operations that are possible to perform on the token in its current state. PATCH Request For Removing Tokens You can remove the tokens by using the following PATCH request. Request 1 2 3 4 5 6 7 8 9 PATCH /psp/paymentorders/payerownedtokens/&lt;payerReference&gt; HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"state\": \"Deleted\", \"comment\": \"Some words about why the tokens are being deleted\" } Field Type Description state string The state you want the token to be in. comment string Explanation as to why the token is being deleted. Which will provide this response. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"payerOwnedTokens\": { \"id\": \"/psp/paymentorders/payerownedtokens/{payerReference}\", \"payerReference\": \"{payerReference}\", \"tokens\": [ { \"token\": \"{paymentToken}\", \"tokenType\": \"Payment\", \"instrument\": \"Invoice-payexfinancingno\", \"instrumentDisplayName\": \"260267*****\", \"instrumentParameters\": { \"email\": \"hei@hei.no\", \"msisdn\": \"+4798765432\", \"zipCode\": \"1642\" } }, { \"token\": \"{paymentToken}\", \"tokenType\": \"Unscheduled\", \"instrument\": \"CreditCard\", \"instrumentDisplayName\": \"492500******0004\", \"instrumentParameters\": { \"expiryDate\": \"12/2020\", \"cardBrand\": \"Visa\" } } ] } } Show fields Hide fields Field Type Description payerOwnedTokens object The payerOwnedTokens object containing information about the payer relevant for the payment order. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. payerReference string A reference used in the Enterprise and Payments Only implementations to recognize the payer when no SSN is stored. tokens integer A list of tokens connected to the payment. token string The token guid. tokenType string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. instrument string Payment instrument connected to the token. instrumentDisplayName string Payment instrument connected to the token. instrumentParameters integer A list of additional information connected to the token. Depending on the instrument, it can e.g. be expiryDate, cardBrand, email, msisdn or zipCode.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/payer-aware-payment-menu.html"
  },{
    "title": "Restricted To SSN",
    "text": "Restrict Payments To A Social Security Number Swedbank Pay provides the possibility to restrict payments to a Social Security Number for payment instruments which support this. This can be used when you want to make sure you only accept payments from an already identified individual. You do this by adding the field restrictedToSocialSecurityNumber in the payer field, in your payment order request, and setting it to true. This will leave out all instruments which do not support this feature. It will then use the socialSecurityNumber located in the nationalIdentifier field (found within the payer field). The nationalIdentifier must be included to use this feature. Instruments supporting the feature will reject payments that do not match the restriction. If you want to use the Social Security Number just for payment restrictions, and not do a checkout profile lookup, add the parameter guestMode in the nationalIdentifier field and set it to true. You are currently only able to restrict Swish and Trustly payments to a Social Security Number, but we will add support for more payment instruments going forward. No changes are required at your (the merchant’s) end to be able to offer more instruments at a later time. Restrict To Social Security Number Request The field itself is a bool which must be added in the payer field of the request. Below is a shortened example of a payment order request. Apart from the new field, the payment request is similar to a standard payment order request. For an example of a payment order request, click here. The response will be similar to a standard payment order response, which is also documented on the page linked above. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"payer\": { \"digitalProducts\": false, \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\", \"guestMode\": true }, \"restrictedToSocialSecurityNumber\": true, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\" } } } Show fields Hide fields Required Field Type Description   payer object The payer object containing information about the payer relevant for the payment order.   digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.   nationalIdentifier object The national identifier object.   socialSecurityNumber string The payer’s social security number.   countryCode string The country code of the payer.   guestMode bool Set to true if you do not want to do a lookup to checkout profile, and only want to use the Social Security Number to restrict a payment.   restrictedToSocialSecurityNumber bool Set to true if you want to restrict your payment to a Social Security Number. check firstName string The first name of the payer. check lastName string The last name of the payer.   email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.   msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.   payerReference string A reference used in Enterprise integrations to recognize the payer in the absence of SSN and/or a secure login. Read more about this in the payerReference feature section.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/payer-restrictions.html"
  },{
    "title": "Restricted To SSN",
    "text": "Restrict Payments To A Social Security Number Swedbank Pay provides the possibility to restrict payments to a Social Security Number for payment instruments which support this. This can be used when you want to make sure you only accept payments from an already identified individual. You do this by adding the field restrictedToSocialSecurityNumber in the payer field, in your payment order request, and setting it to true. This will leave out all instruments which do not support this feature. It will then use the socialSecurityNumber located in the nationalIdentifier field (found within the payer field). The nationalIdentifier must be included to use this feature. Instruments supporting the feature will reject payments that do not match the restriction. You are currently only able to restrict Swish and Trustly payments to a Social Security Number, but we will add support for more payment instruments going forward. No changes are required at your (the merchant’s) end to be able to offer more instruments at a later time. Restrict To Social Security Number Request The field itself is a bool which must be added in the payer field of the request. Below is a shortened example of a payment order request. Apart from the new field, the payment request is similar to a standard payment order request. For an example of a payment order request, The response will be similar to a standard payment order response, which is also documented on the page linked above. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"payer\": { \"digitalProducts\": false, \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\", \"guestMode\": true }, \"restrictedToSocialSecurityNumber\": true, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\" } } } Show fields Hide fields Required Field Type Description   payer object The payer object containing information about the payer relevant for the payment order.   digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.   restrictedToSocialSecurityNumber bool Set to true if you want to restrict your payment to a Social Security Number. check firstName string The first name of the payer. check lastName string The last name of the payer.   email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.   msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.   payerReference string A reference used in Enterprise integrations to recognize the payer in the absence of SSN and/or a secure login. Read more about this in the payerReference feature section.",
    "tags": "",
    "url": "/checkout-v3/features/optional/payer-restrictions.html"
  },{
    "title": "Payer Tokens",
    "text": "Payment Tokens For Unscheduled Or Recurring Purchases A common practice is to store a credit-card for later use, e.g. for subscriptions, and charge every month. To make this safe &amp; secure you let SwedbankPay store the payment information and only keep a reference, a payment token. This token can later be used to make purchases, and there are two types of tokens that can be created. One for subscriptions, and one for later unscheduled purchases. They are created the same way, by setting generateUnscheduledToken = true or generateRecurrenceToken = true, in the paymentOrder and then either making a purchase or verifying a purchase. iOS 1 2 3 var paymentOrder = ... //create the paymentOrder as usual by calculating price, etc paymentOrder.generateRecurrenceToken = true paymentOrder.generateUnscheduledToken = true Android 1 2 3 4 5 6 7 val paymentOrder = PaymentOrder( ... generateRecurrenceToken = true, generateUnscheduledToken = true, ... ) When expanding the paid property of this verified or purchased payment, there is an array with tokens one can save for later use. Read more on: expanding properties. Here is an abbreviated example of what is received, typically only on the backend. JSON 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"paymentOrder\": { ... \"paid\": { ... \"tokens\": [ { \"type\": \"recurrence\", \"token\": \"a7d7d780-98ba-4466-befe-e5428f716c30\", \"name\": \"458109******3517\", \"expiryDate\": \"12/2030\" }, { \"type\": \"unscheduled\", \"token\": \"0c43b168-dcd5-45d1-b9c4-1fb8e273c799\", \"name\": \"458109******3517\", \"expiryDate\": \"12/2030\" } ] } } } Then, to make an unscheduled purchase you simply add the unscheduledToken, or the recurrenceToken to the paymentOrder request. Obviously these purchases and the expanding of tokens is only needed to be done on the backend. More info on unscheduled purchases. More info on recurring purchases.",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/optional/payer-tokens.html"
  },{
    "title": "Payment Link",
    "text": "Introduction Payment Link is available for Payment Menu v2 and the payment instruments listed below, using the redirect platform and Swedbank Pay hosted payment page. Payment Menu v2 Card MobilePay Online Swish Vipps Trustly When the payer starts the purchase process in your merchant or webshop site, you need to make a POST request towards Swedbank Pay with your Purchase information. You receive a Payment Link (same as redirect URL) in response. You have to distribute the Payment Link to the payer through your order system, using channels like e-mail or SMS. info When sending information in e-mail/SMS, it is strongly recommended that you add information about your terms and conditions, including purchase information and price. See recommendations in the next section. When the payer clicks on the Payment Link, the Swedbank Pay payment page will open, letting them enter the payment details (varies depending on payment instrument) in a secure Swedbank Pay hosted environment. When paying with card, and if required, Swedbank Pay will handle 3-D Secure authentication. After completion, Swedbank Pay will redirect the browser back to your merchant/webshop site. If callbackURL is set the merchant system will receive a callback from Swedbank Pay, enabling you to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. E-mail And SMS Recommendations When you as a merchant send an e-mail or SMS to the payer about the Payment Link, it is recommended to include contextual information which helps them understand what will happen when they click the Payment Link. We recommend that you include the following: The name of the merchant/shop initiating the payment An understandable product description, describing the service they are paying for. Some order-id (or similar) that exists in the merchant’s order system. The price and currency. Details about shipping method and expected delivery (if physical goods will be sent to the payer). A link to a page with the merchant’s terms and conditions (such as return policy) and information about how the payer can contact the merchant. Details informing that the payer accepts the Terms &amp; Conditions when clicking on the Payment Link. Receipt Recommendations We recommend that you send an e-mail or SMS confirmation to the payer with a receipt when the payment is done. API Requests The API requests depend on the payment instrument you are using when implementing the Payment Link scenario, see purchase flow. One-phase payment instruments will not implement capture, cancellation or reversal. The options you can choose from when creating a payment with key operation set to Purchase are listed below. How It Looks When clicking the payment link, the payer will be directed to a payment page similar to the examples below, where payment information can be entered. Options All valid options when posting a payment with operation Purchase, are described in each payment instrument’s respective API reference. Please see the general sequence diagrams for more information about one-phase (e.g. Swish and Trustly) and two-phase (e.g. Card, MobilePay Online and Vipps) payments. Authorization When using two-phase payment instruments you reserve the amount with an authorization, and you will have to specify that the intent of the purchase is Authorize. The amount will be reserved but not charged. You have to make a Capture or Cancel request later (i.e. when you are ready to ship the purchased products). Capture Capture can only be performed on a payment with a successfully authorized transaction. It is possible to do a part-capture where you only capture a smaller amount than the authorized amount. You can do more captures on the same payment up to the total authorization amount later. If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. The card will be charged and you don’t need to do any more financial operations to this purchase. Cancel Cancel can only be done on an authorized transaction. If you cancel after doing a part-capture you will cancel the difference between the captured amount and the authorized amount. Reversal Reversal can only be done on a payment where there are some captured amount not yet reversed. General When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a request to this URL when the payer has completed the payment. See the Callback API description here. Purchase Flow The sequence diagrams display the high level process of the purchase, from generating a Payment Link to receiving a Callback. This in a generalized flow as well as a specific 3-D Secure enabled credit card scenario. info Please note that the the callback may come either before, after or in the same moment as the payer is redirected to the status page at the merchant site when the purchase is fulfilled. Don’t rely on the callback being timed at any specific moment. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcomes of a card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram activate Payer Payer-&gt;&gt;-MerchantOrderSystem: payer starts purchase activate MerchantOrderSystem MerchantOrderSystem-&gt;&gt;-Merchant: start purchase process activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [payment] (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource with payment URL activate Merchant Merchant--&gt;&gt;-MerchantOrderSystem: Payment URL sent to order system activate MerchantOrderSystem MerchantOrderSystem--&gt;&gt;-Payer: Distribute Payment URL through e-mail/SMS activate Payer note left of Payer: Payment Link in e-mail/SMS Payer-&gt;&gt;-SwedbankPay: Open link and enter payment information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: redirect to merchant site activate Payer note left of SwedbankPay: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET [payment] activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options After Posting A Payment If the payment enable a two-phase flow (Authorize), you will need to implement the Capture and Cancel requests. It is possible to “abort” the validity of the Payment Link. See the Abort description here. For reversals, you will need to implement the Reversal request. When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has completed the payment. See the Callback API description here.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/optional/payment-link.html"
  },{
    "title": "Payment Link",
    "text": "Introduction Payment Link is available for Payment Menu v2 and the payment instruments listed below, using the redirect platform and Swedbank Pay hosted payment page. Payment Menu v2 Card MobilePay Online Swish Vipps Trustly When the payer starts the purchase process in your merchant or webshop site, you need to make a POST request towards Swedbank Pay with your Purchase information. You receive a Payment Link (same as redirect URL) in response. You have to distribute the Payment Link to the payer through your order system, using channels like e-mail or SMS. info When sending information in e-mail/SMS, it is strongly recommended that you add information about your terms and conditions, including purchase information and price. See recommendations in the next section. When the payer clicks on the Payment Link, the Swedbank Pay payment page will open, letting them enter the payment details (varies depending on payment instrument) in a secure Swedbank Pay hosted environment. When paying with card, and if required, Swedbank Pay will handle 3-D Secure authentication. After completion, Swedbank Pay will redirect the browser back to your merchant/webshop site. If callbackURL is set the merchant system will receive a callback from Swedbank Pay, enabling you to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. E-mail And SMS Recommendations When you as a merchant send an e-mail or SMS to the payer about the Payment Link, it is recommended to include contextual information which helps them understand what will happen when they click the Payment Link. We recommend that you include the following: The name of the merchant/shop initiating the payment An understandable product description, describing the service they are paying for. Some order-id (or similar) that exists in the merchant’s order system. The price and currency. Details about shipping method and expected delivery (if physical goods will be sent to the payer). A link to a page with the merchant’s terms and conditions (such as return policy) and information about how the payer can contact the merchant. Details informing that the payer accepts the Terms &amp; Conditions when clicking on the Payment Link. Receipt Recommendations We recommend that you send an e-mail or SMS confirmation to the payer with a receipt when the payment is done. API Requests The API requests depend on the payment instrument you are using when implementing the Payment Link scenario, see purchase flow. One-phase payment instruments will not implement capture, cancellation or reversal. The options you can choose from when creating a payment with key operation set to Purchase are listed below. How It Looks When clicking the payment link, the payer will be directed to a payment page similar to the examples below, where payment information can be entered. Options All valid options when posting a payment with operation Purchase, are described in each payment instrument’s respective API reference. Please see the general sequence diagrams for more information about one-phase (e.g. Swish and Trustly) and two-phase (e.g. Card, MobilePay Online and Vipps) payments. Authorization When using two-phase payment instruments you reserve the amount with an authorization, and you will have to specify that the intent of the purchase is Authorize. The amount will be reserved but not charged. You have to make a Capture or Cancel request later (i.e. when you are ready to ship the purchased products). Capture Capture can only be performed on a payment with a successfully authorized transaction. It is possible to do a part-capture where you only capture a smaller amount than the authorized amount. You can do more captures on the same payment up to the total authorization amount later. If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. The card will be charged and you don’t need to do any more financial operations to this purchase. Cancel Cancel can only be done on an authorized transaction. If you cancel after doing a part-capture you will cancel the difference between the captured amount and the authorized amount. Reversal Reversal can only be done on a payment where there are some captured amount not yet reversed. General When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a request to this URL when the payer has completed the payment. See the Callback API description here. Purchase Flow The sequence diagrams display the high level process of the purchase, from generating a Payment Link to receiving a Callback. This in a generalized flow as well as a specific 3-D Secure enabled credit card scenario. info Please note that the the callback may come either before, after or in the same moment as the payer is redirected to the status page at the merchant site when the purchase is fulfilled. Don’t rely on the callback being timed at any specific moment. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcomes of a card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram activate Payer Payer-&gt;&gt;-MerchantOrderSystem: payer starts purchase activate MerchantOrderSystem MerchantOrderSystem-&gt;&gt;-Merchant: start purchase process activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [payment] (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource with payment URL activate Merchant Merchant--&gt;&gt;-MerchantOrderSystem: Payment URL sent to order system activate MerchantOrderSystem MerchantOrderSystem--&gt;&gt;-Payer: Distribute Payment URL through e-mail/SMS activate Payer note left of Payer: Payment Link in e-mail/SMS Payer-&gt;&gt;-SwedbankPay: Open link and enter payment information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: redirect to merchant site activate Payer note left of SwedbankPay: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET [payment] activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options After Posting A Payment If the payment enable a two-phase flow (Authorize), you will need to implement the Capture and Cancel requests. It is possible to “abort” the validity of the Payment Link. See the Abort description here. For reversals, you will need to implement the Reversal request. When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has completed the payment. See the Callback API description here.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/optional/payment-link.html"
  },{
    "title": "Payment Link",
    "text": "Introduction Payment Link is available for Payment Menu v2 and the payment instruments listed below, using the redirect platform and Swedbank Pay hosted payment page. Payment Menu v2 Card MobilePay Online Swish Vipps Trustly When the payer starts the purchase process in your merchant or webshop site, you need to make a POST request towards Swedbank Pay with your Purchase information. You receive a Payment Link (same as redirect URL) in response. You have to distribute the Payment Link to the payer through your order system, using channels like e-mail or SMS. info When sending information in e-mail/SMS, it is strongly recommended that you add information about your terms and conditions, including purchase information and price. See recommendations in the next section. When the payer clicks on the Payment Link, the Swedbank Pay payment page will open, letting them enter the payment details (varies depending on payment instrument) in a secure Swedbank Pay hosted environment. When paying with card, and if required, Swedbank Pay will handle 3-D Secure authentication. After completion, Swedbank Pay will redirect the browser back to your merchant/webshop site. If callbackURL is set the merchant system will receive a callback from Swedbank Pay, enabling you to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. E-mail And SMS Recommendations When you as a merchant send an e-mail or SMS to the payer about the Payment Link, it is recommended to include contextual information which helps them understand what will happen when they click the Payment Link. We recommend that you include the following: The name of the merchant/shop initiating the payment An understandable product description, describing the service they are paying for. Some order-id (or similar) that exists in the merchant’s order system. The price and currency. Details about shipping method and expected delivery (if physical goods will be sent to the payer). A link to a page with the merchant’s terms and conditions (such as return policy) and information about how the payer can contact the merchant. Details informing that the payer accepts the Terms &amp; Conditions when clicking on the Payment Link. Receipt Recommendations We recommend that you send an e-mail or SMS confirmation to the payer with a receipt when the payment is done. API Requests The API requests depend on the payment instrument you are using when implementing the Payment Link scenario, see purchase flow. One-phase payment instruments will not implement capture, cancellation or reversal. The options you can choose from when creating a payment with key operation set to Purchase are listed below. How It Looks When clicking the payment link, the payer will be directed to a payment page similar to the examples below, where payment information can be entered. Options All valid options when posting a payment with operation Purchase, are described in each payment instrument’s respective API reference. Please see the general sequence diagrams for more information about one-phase (e.g. Swish and Trustly) and two-phase (e.g. Card, MobilePay Online and Vipps) payments. Authorization When using two-phase payment instruments you reserve the amount with an authorization, and you will have to specify that the intent of the purchase is Authorize. The amount will be reserved but not charged. You have to make a Capture or Cancel request later (i.e. when you are ready to ship the purchased products). Capture Capture can only be performed on a payment with a successfully authorized transaction. It is possible to do a part-capture where you only capture a smaller amount than the authorized amount. You can do more captures on the same payment up to the total authorization amount later. If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. The card will be charged and you don’t need to do any more financial operations to this purchase. Cancel Cancel can only be done on an authorized transaction. If you cancel after doing a part-capture you will cancel the difference between the captured amount and the authorized amount. Reversal Reversal can only be done on a payment where there are some captured amount not yet reversed. General When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a request to this URL when the payer has completed the payment. See the Callback API description here. Purchase Flow The sequence diagrams display the high level process of the purchase, from generating a Payment Link to receiving a Callback. This in a generalized flow as well as a specific 3-D Secure enabled credit card scenario. info Please note that the the callback may come either before, after or in the same moment as the payer is redirected to the status page at the merchant site when the purchase is fulfilled. Don’t rely on the callback being timed at any specific moment. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcomes of a card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram activate Payer Payer-&gt;&gt;-MerchantOrderSystem: payer starts purchase activate MerchantOrderSystem MerchantOrderSystem-&gt;&gt;-Merchant: start purchase process activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [payment] (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource with payment URL activate Merchant Merchant--&gt;&gt;-MerchantOrderSystem: Payment URL sent to order system activate MerchantOrderSystem MerchantOrderSystem--&gt;&gt;-Payer: Distribute Payment URL through e-mail/SMS activate Payer note left of Payer: Payment Link in e-mail/SMS Payer-&gt;&gt;-SwedbankPay: Open link and enter payment information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: redirect to merchant site activate Payer note left of SwedbankPay: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET [payment] activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options After Posting A Payment If the payment enable a two-phase flow (Authorize), you will need to implement the Capture and Cancel requests. It is possible to “abort” the validity of the Payment Link. See the Abort description here. For reversals, you will need to implement the Reversal request. When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has completed the payment. See the Callback API description here.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/optional/payment-link.html"
  },{
    "title": "Payment Link",
    "text": "Introduction Payment Link is available for Payment Menu v2 and the payment instruments listed below, using the redirect platform and Swedbank Pay hosted payment page. Payment Menu v2 Card MobilePay Online Swish Vipps Trustly When the payer starts the purchase process in your merchant or webshop site, you need to make a POST request towards Swedbank Pay with your Purchase information. You receive a Payment Link (same as redirect URL) in response. You have to distribute the Payment Link to the payer through your order system, using channels like e-mail or SMS. info When sending information in e-mail/SMS, it is strongly recommended that you add information about your terms and conditions, including purchase information and price. See recommendations in the next section. When the payer clicks on the Payment Link, the Swedbank Pay payment page will open, letting them enter the payment details (varies depending on payment instrument) in a secure Swedbank Pay hosted environment. When paying with card, and if required, Swedbank Pay will handle 3-D Secure authentication. After completion, Swedbank Pay will redirect the browser back to your merchant/webshop site. If callbackURL is set the merchant system will receive a callback from Swedbank Pay, enabling you to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. E-mail And SMS Recommendations When you as a merchant send an e-mail or SMS to the payer about the Payment Link, it is recommended to include contextual information which helps them understand what will happen when they click the Payment Link. We recommend that you include the following: The name of the merchant/shop initiating the payment An understandable product description, describing the service they are paying for. Some order-id (or similar) that exists in the merchant’s order system. The price and currency. Details about shipping method and expected delivery (if physical goods will be sent to the payer). A link to a page with the merchant’s terms and conditions (such as return policy) and information about how the payer can contact the merchant. Details informing that the payer accepts the Terms &amp; Conditions when clicking on the Payment Link. Receipt Recommendations We recommend that you send an e-mail or SMS confirmation to the payer with a receipt when the payment is done. API Requests The API requests depend on the payment instrument you are using when implementing the Payment Link scenario, see purchase flow. One-phase payment instruments will not implement capture, cancellation or reversal. The options you can choose from when creating a payment with key operation set to Purchase are listed below. How It Looks When clicking the payment link, the payer will be directed to a payment page similar to the examples below, where payment information can be entered. Options All valid options when posting a payment with operation Purchase, are described in each payment instrument’s respective API reference. Please see the general sequence diagrams for more information about one-phase (e.g. Swish and Trustly) and two-phase (e.g. Card, MobilePay Online and Vipps) payments. Authorization When using two-phase payment instruments you reserve the amount with an authorization, and you will have to specify that the intent of the purchase is Authorize. The amount will be reserved but not charged. You have to make a Capture or Cancel request later (i.e. when you are ready to ship the purchased products). Capture Capture can only be performed on a payment with a successfully authorized transaction. It is possible to do a part-capture where you only capture a smaller amount than the authorized amount. You can do more captures on the same payment up to the total authorization amount later. If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. The card will be charged and you don’t need to do any more financial operations to this purchase. Cancel Cancel can only be done on an authorized transaction. If you cancel after doing a part-capture you will cancel the difference between the captured amount and the authorized amount. Reversal Reversal can only be done on a payment where there are some captured amount not yet reversed. General When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a request to this URL when the payer has completed the payment. See the Callback API description here. Purchase Flow The sequence diagrams display the high level process of the purchase, from generating a Payment Link to receiving a Callback. This in a generalized flow as well as a specific 3-D Secure enabled credit card scenario. info Please note that the the callback may come either before, after or in the same moment as the payer is redirected to the status page at the merchant site when the purchase is fulfilled. Don’t rely on the callback being timed at any specific moment. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcomes of a card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram activate Payer Payer-&gt;&gt;-MerchantOrderSystem: payer starts purchase activate MerchantOrderSystem MerchantOrderSystem-&gt;&gt;-Merchant: start purchase process activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [payment] (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource with payment URL activate Merchant Merchant--&gt;&gt;-MerchantOrderSystem: Payment URL sent to order system activate MerchantOrderSystem MerchantOrderSystem--&gt;&gt;-Payer: Distribute Payment URL through e-mail/SMS activate Payer note left of Payer: Payment Link in e-mail/SMS Payer-&gt;&gt;-SwedbankPay: Open link and enter payment information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: redirect to merchant site activate Payer note left of SwedbankPay: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET [payment] activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options After Posting A Payment If the payment enable a two-phase flow (Authorize), you will need to implement the Capture and Cancel requests. It is possible to “abort” the validity of the Payment Link. See the Abort description here. For reversals, you will need to implement the Reversal request. When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has completed the payment. See the Callback API description here.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/payment-link.html"
  },{
    "title": "Payment Link",
    "text": "Introduction Payment Link is available for Payment Menu v2 and the payment instruments listed below, using the redirect platform and Swedbank Pay hosted payment page. Payment Menu v2 Card MobilePay Online Swish Vipps Trustly When the payer starts the purchase process in your merchant or webshop site, you need to make a POST request towards Swedbank Pay with your Purchase information. You receive a Payment Link (same as redirect URL) in response. You have to distribute the Payment Link to the payer through your order system, using channels like e-mail or SMS. info When sending information in e-mail/SMS, it is strongly recommended that you add information about your terms and conditions, including purchase information and price. See recommendations in the next section. When the payer clicks on the Payment Link, the Swedbank Pay payment page will open, letting them enter the payment details (varies depending on payment instrument) in a secure Swedbank Pay hosted environment. When paying with card, and if required, Swedbank Pay will handle 3-D Secure authentication. After completion, Swedbank Pay will redirect the browser back to your merchant/webshop site. If callbackURL is set the merchant system will receive a callback from Swedbank Pay, enabling you to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. E-mail And SMS Recommendations When you as a merchant send an e-mail or SMS to the payer about the Payment Link, it is recommended to include contextual information which helps them understand what will happen when they click the Payment Link. We recommend that you include the following: The name of the merchant/shop initiating the payment An understandable product description, describing the service they are paying for. Some order-id (or similar) that exists in the merchant’s order system. The price and currency. Details about shipping method and expected delivery (if physical goods will be sent to the payer). A link to a page with the merchant’s terms and conditions (such as return policy) and information about how the payer can contact the merchant. Details informing that the payer accepts the Terms &amp; Conditions when clicking on the Payment Link. Receipt Recommendations We recommend that you send an e-mail or SMS confirmation to the payer with a receipt when the payment is done. API Requests The API requests depend on the payment instrument you are using when implementing the Payment Link scenario, see purchase flow. One-phase payment instruments will not implement capture, cancellation or reversal. The options you can choose from when creating a payment with key operation set to Purchase are listed below. How It Looks When clicking the payment link, the payer will be directed to a payment page similar to the examples below, where payment information can be entered. Options All valid options when posting a payment with operation Purchase, are described in each payment instrument’s respective API reference. Please see the general sequence diagrams for more information about one-phase (e.g. Swish and Trustly) and two-phase (e.g. Card, MobilePay Online and Vipps) payments. Authorization When using two-phase payment instruments you reserve the amount with an authorization, and you will have to specify that the intent of the purchase is Authorize. The amount will be reserved but not charged. You have to make a Capture or Cancel request later (i.e. when you are ready to ship the purchased products). Capture Capture can only be performed on a payment with a successfully authorized transaction. It is possible to do a part-capture where you only capture a smaller amount than the authorized amount. You can do more captures on the same payment up to the total authorization amount later. If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. The card will be charged and you don’t need to do any more financial operations to this purchase. Cancel Cancel can only be done on an authorized transaction. If you cancel after doing a part-capture you will cancel the difference between the captured amount and the authorized amount. Reversal Reversal can only be done on a payment where there are some captured amount not yet reversed. General When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a request to this URL when the payer has completed the payment. See the Callback API description here. Purchase Flow The sequence diagrams display the high level process of the purchase, from generating a Payment Link to receiving a Callback. This in a generalized flow as well as a specific 3-D Secure enabled credit card scenario. info Please note that the the callback may come either before, after or in the same moment as the payer is redirected to the status page at the merchant site when the purchase is fulfilled. Don’t rely on the callback being timed at any specific moment. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcomes of a card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram activate Payer Payer-&gt;&gt;-MerchantOrderSystem: payer starts purchase activate MerchantOrderSystem MerchantOrderSystem-&gt;&gt;-Merchant: start purchase process activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [payment] (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource with payment URL activate Merchant Merchant--&gt;&gt;-MerchantOrderSystem: Payment URL sent to order system activate MerchantOrderSystem MerchantOrderSystem--&gt;&gt;-Payer: Distribute Payment URL through e-mail/SMS activate Payer note left of Payer: Payment Link in e-mail/SMS Payer-&gt;&gt;-SwedbankPay: Open link and enter payment information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: redirect to merchant site activate Payer note left of SwedbankPay: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET [payment] activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options After Posting A Payment If the payment enable a two-phase flow (Authorize), you will need to implement the Capture and Cancel requests. It is possible to “abort” the validity of the Payment Link. See the Abort description here. For reversals, you will need to implement the Reversal request. When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has completed the payment. See the Callback API description here.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/optional/payment-link.html"
  },{
    "title": "Payment Link",
    "text": "Introduction Payment Link is available for Payment Menu v2 and the payment instruments listed below, using the redirect platform and Swedbank Pay hosted payment page. Payment Menu v2 Card MobilePay Online Swish Vipps Trustly When the payer starts the purchase process in your merchant or webshop site, you need to make a POST request towards Swedbank Pay with your Purchase information. You receive a Payment Link (same as redirect URL) in response. You have to distribute the Payment Link to the payer through your order system, using channels like e-mail or SMS. info When sending information in e-mail/SMS, it is strongly recommended that you add information about your terms and conditions, including purchase information and price. See recommendations in the next section. When the payer clicks on the Payment Link, the Swedbank Pay payment page will open, letting them enter the payment details (varies depending on payment instrument) in a secure Swedbank Pay hosted environment. When paying with card, and if required, Swedbank Pay will handle 3-D Secure authentication. After completion, Swedbank Pay will redirect the browser back to your merchant/webshop site. If callbackURL is set the merchant system will receive a callback from Swedbank Pay, enabling you to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. E-mail And SMS Recommendations When you as a merchant send an e-mail or SMS to the payer about the Payment Link, it is recommended to include contextual information which helps them understand what will happen when they click the Payment Link. We recommend that you include the following: The name of the merchant/shop initiating the payment An understandable product description, describing the service they are paying for. Some order-id (or similar) that exists in the merchant’s order system. The price and currency. Details about shipping method and expected delivery (if physical goods will be sent to the payer). A link to a page with the merchant’s terms and conditions (such as return policy) and information about how the payer can contact the merchant. Details informing that the payer accepts the Terms &amp; Conditions when clicking on the Payment Link. Receipt Recommendations We recommend that you send an e-mail or SMS confirmation to the payer with a receipt when the payment is done. API Requests The API requests depend on the payment instrument you are using when implementing the Payment Link scenario, see purchase flow. One-phase payment instruments will not implement capture, cancellation or reversal. The options you can choose from when creating a payment with key operation set to Purchase are listed below. How It Looks When clicking the payment link, the payer will be directed to a payment page similar to the examples below, where payment information can be entered. Options All valid options when posting a payment with operation Purchase, are described in each payment instrument’s respective API reference. Please see the general sequence diagrams for more information about one-phase (e.g. Swish and Trustly) and two-phase (e.g. Card, MobilePay Online and Vipps) payments. Authorization When using two-phase payment instruments you reserve the amount with an authorization, and you will have to specify that the intent of the purchase is Authorize. The amount will be reserved but not charged. You have to make a Capture or Cancel request later (i.e. when you are ready to ship the purchased products). Capture Capture can only be performed on a payment with a successfully authorized transaction. It is possible to do a part-capture where you only capture a smaller amount than the authorized amount. You can do more captures on the same payment up to the total authorization amount later. If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. The card will be charged and you don’t need to do any more financial operations to this purchase. Cancel Cancel can only be done on an authorized transaction. If you cancel after doing a part-capture you will cancel the difference between the captured amount and the authorized amount. Reversal Reversal can only be done on a payment where there are some captured amount not yet reversed. General When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a request to this URL when the payer has completed the payment. See the Callback API description here. Purchase Flow The sequence diagrams display the high level process of the purchase, from generating a Payment Link to receiving a Callback. This in a generalized flow as well as a specific 3-D Secure enabled credit card scenario. info Please note that the the callback may come either before, after or in the same moment as the payer is redirected to the status page at the merchant site when the purchase is fulfilled. Don’t rely on the callback being timed at any specific moment. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcomes of a card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram activate Payer Payer-&gt;&gt;-MerchantOrderSystem: payer starts purchase activate MerchantOrderSystem MerchantOrderSystem-&gt;&gt;-Merchant: start purchase process activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [payment] (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource with payment URL activate Merchant Merchant--&gt;&gt;-MerchantOrderSystem: Payment URL sent to order system activate MerchantOrderSystem MerchantOrderSystem--&gt;&gt;-Payer: Distribute Payment URL through e-mail/SMS activate Payer note left of Payer: Payment Link in e-mail/SMS Payer-&gt;&gt;-SwedbankPay: Open link and enter payment information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: redirect to merchant site activate Payer note left of SwedbankPay: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET [payment] activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options After Posting A Payment If the payment enable a two-phase flow (Authorize), you will need to implement the Capture and Cancel requests. It is possible to “abort” the validity of the Payment Link. See the Abort description here. For reversals, you will need to implement the Reversal request. When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has completed the payment. See the Callback API description here.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/optional/payment-link.html"
  },{
    "title": "Payment Link",
    "text": "Introduction Payment Link is available for Payment Menu v2 and the payment instruments listed below, using the redirect platform and Swedbank Pay hosted payment page. Payment Menu v2 Card MobilePay Online Swish Vipps Trustly When the payer starts the purchase process in your merchant or webshop site, you need to make a POST request towards Swedbank Pay with your Purchase information. You receive a Payment Link (same as redirect URL) in response. You have to distribute the Payment Link to the payer through your order system, using channels like e-mail or SMS. info When sending information in e-mail/SMS, it is strongly recommended that you add information about your terms and conditions, including purchase information and price. See recommendations in the next section. When the payer clicks on the Payment Link, the Swedbank Pay payment page will open, letting them enter the payment details (varies depending on payment instrument) in a secure Swedbank Pay hosted environment. When paying with card, and if required, Swedbank Pay will handle 3-D Secure authentication. After completion, Swedbank Pay will redirect the browser back to your merchant/webshop site. If callbackURL is set the merchant system will receive a callback from Swedbank Pay, enabling you to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. E-mail And SMS Recommendations When you as a merchant send an e-mail or SMS to the payer about the Payment Link, it is recommended to include contextual information which helps them understand what will happen when they click the Payment Link. We recommend that you include the following: The name of the merchant/shop initiating the payment An understandable product description, describing the service they are paying for. Some order-id (or similar) that exists in the merchant’s order system. The price and currency. Details about shipping method and expected delivery (if physical goods will be sent to the payer). A link to a page with the merchant’s terms and conditions (such as return policy) and information about how the payer can contact the merchant. Details informing that the payer accepts the Terms &amp; Conditions when clicking on the Payment Link. Receipt Recommendations We recommend that you send an e-mail or SMS confirmation to the payer with a receipt when the payment is done. API Requests The API requests depend on the payment instrument you are using when implementing the Payment Link scenario, see purchase flow. One-phase payment instruments will not implement capture, cancellation or reversal. The options you can choose from when creating a payment with key operation set to Purchase are listed below. How It Looks When clicking the payment link, the payer will be directed to a payment page similar to the examples below, where payment information can be entered. Options All valid options when posting a payment with operation Purchase, are described in each payment instrument’s respective API reference. Please see the general sequence diagrams for more information about one-phase (e.g. Swish and Trustly) and two-phase (e.g. Card, MobilePay Online and Vipps) payments. Authorization When using two-phase payment instruments you reserve the amount with an authorization, and you will have to specify that the intent of the purchase is Authorize. The amount will be reserved but not charged. You have to make a Capture or Cancel request later (i.e. when you are ready to ship the purchased products). Capture Capture can only be performed on a payment with a successfully authorized transaction. It is possible to do a part-capture where you only capture a smaller amount than the authorized amount. You can do more captures on the same payment up to the total authorization amount later. If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. The card will be charged and you don’t need to do any more financial operations to this purchase. Cancel Cancel can only be done on an authorized transaction. If you cancel after doing a part-capture you will cancel the difference between the captured amount and the authorized amount. Reversal Reversal can only be done on a payment where there are some captured amount not yet reversed. General When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a request to this URL when the payer has completed the payment. See the Callback API description here. Purchase Flow The sequence diagrams display the high level process of the purchase, from generating a Payment Link to receiving a Callback. This in a generalized flow as well as a specific 3-D Secure enabled credit card scenario. info Please note that the the callback may come either before, after or in the same moment as the payer is redirected to the status page at the merchant site when the purchase is fulfilled. Don’t rely on the callback being timed at any specific moment. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcomes of a card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the authentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram activate Payer Payer-&gt;&gt;-MerchantOrderSystem: payer starts purchase activate MerchantOrderSystem MerchantOrderSystem-&gt;&gt;-Merchant: start purchase process activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [payment] (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: payment resource with payment URL activate Merchant Merchant--&gt;&gt;-MerchantOrderSystem: Payment URL sent to order system activate MerchantOrderSystem MerchantOrderSystem--&gt;&gt;-Payer: Distribute Payment URL through e-mail/SMS activate Payer note left of Payer: Payment Link in e-mail/SMS Payer-&gt;&gt;-SwedbankPay: Open link and enter payment information activate SwedbankPay opt Card supports 3-D Secure SwedbankPay--&gt;&gt;-Payer: redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;-SwedbankPay: access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: redirect to merchant site activate Payer note left of SwedbankPay: redirect back to merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET [payment] activate SwedbankPay note left of Merchant: Second API request SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options After Posting A Payment If the payment enable a two-phase flow (Authorize), you will need to implement the Capture and Cancel requests. It is possible to “abort” the validity of the Payment Link. See the Abort description here. For reversals, you will need to implement the Reversal request. When implementing the Payment Link scenario, it is optional to set a callbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has completed the payment. See the Callback API description here.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/payment-link.html"
  },{
    "title": "Payment Menu Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"old-implementations/checkout-v2\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string old-implementations/checkout-v2, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/payment-menu-events.html"
  },{
    "title": "Payment Menu v2 Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"old-implementations/payment-menu-v2\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string old-implementations/payment-menu-v2, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/payment-menu-events.html"
  },{
    "title": "Payment Menu",
    "text": "Step 3: Create Payment Order Once the consumer has been identified, the next step is to initiate the payment using consumerProfileRef retrieved in the previous step. We start by performing a POST request towards the paymentorder resource with the payer information (such as consumerProfileRef) we obtained in the checkin process described above. This information will appear prefilled in the Payment Menu. If you are sending a guest user POST request, simply leave out the consumerProfileRef from the input, and the payer will be sent to an empty Payment Menu. Information like email, address and msisdn can still be added manually in the payer field. If added, it will appear prefilled in the Payment Menu. Remember to read up on our URL resource. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. Payment Order Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateRecurrenceToken\": false, \"generateUnscheduledToken\": false, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"consumerProfileRef\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\" }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Payment Order Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"recurrenceToken\": 2c327f17-1818-425a-9657-5d7d69778b31, \"unscheduledToken\": 064c3cbd-9401-4356-aba2-92cc3484313b, \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 10000, \"vatAmount\": 0, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"description\": \"test description\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeInfo\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" }, \"items\": [ { \"creditCard\": { \"cardBrands\": [ \"Visa\", \"MasterCard\" ] } } ] } \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://ecom.externalintegration.payex.com/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://ecom.externalintegration.payex.com/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-expandinstrument\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check instrument string The payment instrument used. Selected by using the Instrument Mode.   generateRecurrenceToken bool Determines if a recurrence token should be generated. A recurrence token is primarily used to enable future recurring payments – with the same token – through server-to-server calls. Default value is false.   generateUnscheduledToken bool Determines if an unscheduled token should be generated. An unscheduled token is primarily used to enable future unscheduled payments – with the same token – through server-to-server calls. Default value is false. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer object The payer object containing information about the payer relevant for the payment order. ︎︎︎ consumerProfileRef string The consumer profile reference as obtained through initiating a consumer session.   email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.   msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.   workPhoneNumber string The work phone number of the payer. Optional (increased chance for frictionless flow if set) and is related to 3-D Secure 2.   homePhoneNumber string The home phone number of the payer. Optional (increased chance for frictionless flow if set) and is related to 3-D Secure 2. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Show fields Hide fields Field Type Description   paymentOrder object The payment order object.   id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   recurrenceToken string The recurrence token created if generateRecurrenceToken: true was used. Enables future recurring payments – with the same token.   unscheduledToken string The unscheduled token created if generateUnscheduledToken: true was used. Enables future unscheduled payments – with the same token.   created string The ISO-8601 date of when the payment order was created.   updated string The ISO-8601 date of when the payment order was updated.   operation string Purchase   state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes.   currency string The currency of the payment order.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string(40) A 40 character length textual description of the purchase.   userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   language string sv-SE, nb-NO or en-US.   urls string The URL to the urls resource where all URLs related to the payment order can be retrieved.   payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   payers string The URL to the payer resource where information about the payer can be retrieved.   orderItems string The URL to the orderItems resource where information about the order items can be retrieved.   metadata string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payments string The URL to the payments resource where information about all underlying payments can be retrieved.   currentPayment string The URL to the currentPayment resource where information about the current – and sole active – payment can be retrieved.   operations array The array of operations that are possible to perform on the payment order in its current state.   Response The response back should look something like this (abbreviated for brevity): Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 201 Created Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. operations array The array of operations that are possible to perform on the payment order in its current state. The paymentorder object is abbreviated since it’s just the id and operations we are interested in. Store the id of the Payment Order in your system to look up status on the completed payment later. Then find the view-paymentorder operation and embed its href in a &lt;script&gt; element. That script will then load the Seamless View for the Payment Menu. We will look into how to hook that up next. warning Please note that nested iframes (an iframe within an iframe) are unsupported. info orderReference must be sent as a part of the POST request to paymentorders and must represent the order ID of the webshop or merchant website. Step 4: Display the Payment Menu To load the Payment Menu from the JavaScript URL obtained in the back end API response, it needs to be set as a script element’s src attribute. You can cause a page reload and do this with static HTML, or you can avoid the page refresh by invoking the POST to create the payment order through Ajax and then create the script element with JavaScript, all inside the event handler for onConsumerIdentified. The HTML code will be unchanged in this example. For the guest Payment Menu, lines 23-44 in the JavaScript should be your main focus. They contain what you need to display the Payment Menu without Checkin. JavaScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 var request = new XMLHttpRequest(); request.addEventListener('load', function () { // We will assume that our own backend returns the // exact same as what SwedbankPay returns. response = JSON.parse(this.responseText); var script = document.createElement('script'); // This assumes the operations from the response of the POST of the // payment order is returned verbatim from the server to the Ajax: var operation = response.operations.find(function (o) { return o.rel === 'view-consumer-identification'; }); script.setAttribute('src', operation.href); script.onload = function () { payex.hostedView.consumer({ // The container specifies which id the script will look for // to host the checkin component container: 'checkin', onConsumerIdentified: function onConsumerIdentified(consumerIdentifiedEvent) { // When the consumer is identified, we need to perform an AJAX request // to our server to forward the consumerProfileRef in a server-to-server // POST request to the Payment Orders resource in order to initialize // the Payment Menu. var request = new XMLHttpRequest(); request.addEventListener('load', function () { response = JSON.parse(this.responseText); // This is identical to how we get the 'view-consumer-identification' // script from the check-in. var script = document.createElement('script'); var operation = response.operations.find(function (o) { return o.rel === 'view-paymentorder'; }); script.setAttribute('src', operation.href); script.onload = function () { // When the 'view-paymentorder' script is loaded, we can initialize the // Payment Menu inside our 'payment-menu' container. payex.hostedView.paymentMenu({ container: 'payment-menu', culture: 'sv-SE' }).open(); }; // Append the Payment Menu script to the &lt;head&gt; var head = document.getElementsByTagName('head')[0]; head.appendChild(script); }); // Like before, you should replace the address here with // your own endpoint. request.open('POST', '&lt;Your-Backend-Endpoint-Here&gt;', true); request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); // In this example, we send the entire Consumer Identified Event Argument // Object as JSON to the server, as it contains the consumerProfileRef. request.send(JSON.stringify(consumerIdentifiedEvent)); }, onShippingDetailsAvailable: function onShippingDetailsAvailable(shippingDetailsAvailableEvent) { console.log(shippingDetailsAvailableEvent); } }).open(); }; // Appending the script to the head var head = document.getElementsByTagName('head')[0]; head.appendChild(script); }); // Place in your own API endpoint here. request.open('POST', '&lt;Your-Backend-Endpoint-Here&gt;', true); request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); // We send in the previously mentioned request here to the checkin endpoint. request.send(JSON.stringify({ operation: 'initiate-consumer-session', language: 'sv-SE', shippingAddressRestrictedToCountryCodes : ['NO', 'SE'] })); This should bring up the Payment Menu in a Seamless View looking like this, depending on whether the payer is logged in (top) or a guest user (bottom). Payments done in SEK will have radio buttons for choosing debit or credit card. When the the payment is completed, the Payment Menu script will be signaled and a full redirect to the completeUrl sent in with the Payment Order will be performed. When the completeUrl on your server is hit, you can inspect the status on the stored paymentorder.id on the server, and then perform capture. Authorizations are kept valid in our systems for 180 days, and we accept captures within this timeframe. Please be aware that acquirers might have a shorter time limit before authorized amounts are released in their systems. We advise you to check with your acquirer if you have concerns about these limits. If the payment is a Sale or one-phase purchase, it will be automatically captured. A third scenario is if the goods are sent physically to the payer; then you should await capture until after the goods have been sent. You may open and close the payment menu using .open() and .close() functions. You can also invoke .refresh() to update the Payment Menu after any changes to the order. Below, you will see a complete overview of the payment menu process. Notice that there are two ways of performing the payment: Consumer perform payment out of iframe. Consumer perform payment within iframe. sequenceDiagram participant Consumer participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(138, 205, 195, 0.1) activate Consumer note left of Consumer: Payment Menu Consumer -&gt;&gt;+ Merchant: Initiate Purchase deactivate Consumer Merchant -&gt;&gt;+ SwedbankPay: POST /psp/paymentorders (paymentUrl, payer) deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: rel:view-paymentorder deactivate SwedbankPay Merchant --&gt;&gt;- Consumer: Display Payment Menu on Merchant Page activate Consumer Consumer -&gt;&gt; Consumer: Initiate Payment Menu Seamless View (open iframe) Consumer --&gt;&gt;+ SwedbankPay: Show Payment UI page in iframe deactivate Consumer SwedbankPay -&gt;&gt;+ Consumer: Do payment logic deactivate SwedbankPay opt Consumer perform payment out of iFrame Consumer -&gt;&gt; Consumer: Redirect to 3rd party Consumer -&gt;&gt;+ 3rdParty: Redirect to 3rdPartyUrl URL deactivate Consumer 3rdParty --&gt;&gt;+ Consumer: Redirect back to paymentUrl (merchant) deactivate 3rdParty Consumer -&gt;&gt; Consumer: Initiate Payment Menu Seamless View (open iframe) Consumer -&gt;&gt;+ SwedbankPay: Show Payment UI page in iframe deactivate Consumer SwedbankPay -&gt;&gt; Consumer: Do payment logic end SwedbankPay --&gt;&gt; Consumer: Payment status deactivate SwedbankPay alt If payment is completed activate Consumer Consumer -&gt;&gt; Consumer: Event: onPaymentCompleted Consumer -&gt;&gt;+ Merchant: Check payment status deactivate Consumer Merchant -&gt;&gt;+ SwedbankPay: GET &lt;paymentorder.id&gt; deactivate Merchant SwedbankPay -&gt;&gt;+ Merchant: rel: paid-paymentorder deactivate SwedbankPay opt Get PaymentOrder Details (if paid-paymentorder operation exist) activate Consumer deactivate Consumer Merchant -&gt;&gt;+ SwedbankPay: GET rel: paid-paymentorder deactivate Merchant SwedbankPay --&gt;&gt; Merchant: Payment Details deactivate SwedbankPay end end opt If payment is failed activate Consumer Consumer -&gt;&gt; Consumer: Event: OnPaymentFailed Consumer -&gt;&gt;+ Merchant: Check payment status deactivate Consumer Merchant -&gt;&gt;+ SwedbankPay: GET {paymentorder.id} deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: rel: failed-paymentorder deactivate SwedbankPay opt Get PaymentOrder Details (if failed-paymentorder operation exist) activate Consumer deactivate Consumer Merchant -&gt;&gt;+ SwedbankPay: GET rel: failed-paymentorder deactivate Merchant SwedbankPay --&gt;&gt; Merchant: Payment Details deactivate SwedbankPay end end activate Merchant Merchant --&gt;&gt;- Consumer: Show Purchase complete opt PaymentOrder Callback (if callbackUrls is set) activate Consumer deactivate Consumer SwedbankPay -&gt;&gt; Merchant: POST Payment Callback end end Now that you have completed the Payment Menu integration, you can move on to finalizing the payment in the After Payment section. Checkin Capture",
    "tags": "",
    "url": "/old-implementations/checkout-v2/payment-menu.html"
  },{
    "title": "Abort",
    "text": "Abort To abort a payment order, perform the update-paymentorder-abort operation that is returned in the payment order response. You need to include the following in the request body: Abort PATCH Request Request 1 2 3 4 5 6 7 8 9 10 11 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Abort\", \"abortReason\": \"CancelledByConsumer\" } } Field Type Description paymentOrder object The payment order object. operation string Abort abortReason string CancelledByConsumer or CancelledByCustomer. Why the payment was aborted. Abort PATCH Response The response given when aborting a payment order is equivalent to a GET request towards the paymentorders resource, as displayed above, with its state set to Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payers\" }, \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp//09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com//5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com//core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] }",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/payment-order-abort.html"
  },{
    "title": "Capture",
    "text": "Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/payment-order-capture.html"
  },{
    "title": "Capture",
    "text": "Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/features/core/payment-order-capture.html"
  },{
    "title": "Capture",
    "text": "Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/payment-order-capture.html"
  },{
    "title": "Update Payment Order",
    "text": "Update Payment Order warning If a payment is attempted, failed or currently being processed, you will not be able to update the orderItems for the payment order. Should you need to update the orderItems, you will have to abort the payment order and create a new order with the updated orderItems. The UpdateOrder operation is used when there is a change in the amount, vat amount or there are added or removed order items in the payment order. info If you implement UpdateOrder you need to refresh() the Payment Menu frontend after you have called the UpdateOrder API from the backend. In case the shopping cart is changed in another browser tab, that should also lead to an UpdateOrder. On window.onfocus in the tab that had Payment Menu initialized, refresh() should be invoked so the correct amount is authorized. If the page is refreshed by a full page reload, refresh() is not necessary. The response given when changing a payment order is equivalent to a GET request towards the paymentorders resource. Even though the fields are the same, the UpdateOrder request will overwrite the fields that were sent in the initial Purchase request. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UpdateOrder\", \"amount\": 1500, \"vatAmount\": 375, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/shop/products/1234\", \"imageUrl\": \"https://example.com/products/product1.jpg\", \"description\": \"Product description\", \"discountDescription\": \"Volume discount\", \"quantity\": 351.3514, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product description\", \"quantity\": 9876.1531, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. check itemUrl string The URL to a page that can display the purchased item, product or similar. check imageUrl string The URL to an image of the order item. check description string The human readable description of the order item. check discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT. check discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/7f27f445-cefe-4a48-d405-08d8143ed22b\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-expandinstrument\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/payment-order-update.html"
  },{
    "title": "Payment Order",
    "text": "Payment Orders In order to initialize the Payment Menu, you need to create a Payment Order. The paymentorders resource and how you interact with it is described below. The paymentorders resource is used when initiating a payment process through Swedbank Pay Checkout. The payment order is a container for the payment instrument object selected by the payer. This will generate a payment that is accessed through the sub-resources payments and currentPayment. GET Payment Order Request Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Order Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"paymentToken\": \"12345678-1234-1234-1234-123456789010\", \"recurrenceToken\": \"12345678-1234-1234-1234-123456789011\", \"unscheduledToken\": \"12345678-1234-1234-1234-123456789012\", \"transactionsOnFileToken\": \"12345678-1234-1234-1234-123456789013\", \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payers\" }, \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. paymentToken string The payment token created for the purchase used in the authorization to create One-Click Payments. recurrenceToken string The created recurrenceToken, if operation: Verify, operation: Recur or generateRecurrenceToken: true was used. unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. transactionOnFileToken string The created transactionOnFileToken, if operation: Verify and generateTransactionOnFileToken: true was used. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where information about the payer can be retrieved. orderItems string   metadata string The URL to the payments resource where information about all underlying payments can be retrieved. payments string The URL to the payments resource where information about all underlying payments can be retrieved. currentPayment string The URL to the currentPayment resource where information about the current – and sole active – payment can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. View Payment Order The view-paymentorder operation contains the URL of the JavaScript that needs to be set as a script element’s src attribute, either client-side through JavaScript or server-side in HTML as shown below. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Checkout is Awesome!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"checkout\"&gt;&lt;/div&gt; &lt;script src=\"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO\"&gt;&lt;/script&gt; &lt;script language=\"javascript\"&gt; payex.hostedView.paymentMenu({ container: 'checkout', culture: 'nb-NO', onPaymentCompleted: function(paymentCompletedEvent) { console.log(paymentCompletedEvent); }, onPaymentFailed: function(paymentFailedEvent) { console.log(paymentFailedEvent); }, onPaymentCreated: function(paymentCreatedEvent) { console.log(paymentCreatedEvent); }, onPaymentToS: function(paymentToSEvent) { console.log(paymentToSEvent); }, onPaymentMenuInstrumentSelected: function(paymentMenuInstrumentSelectedEvent) { console.log(paymentMenuInstrumentSelectedEvent); }, onError: function(error) { console.error(error); }, }).open(); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/payment-order.html"
  },{
    "title": "Payment Order",
    "text": "Payment Orders In order to initialize the Payment Menu, you need to create a Payment Order. The paymentorders resource and how you interact with it is described below. The paymentorders resource is used when initiating a payment process through Payment Menu v2. The payment order is a container for the payment instrument object selected by the payer. This will generate a payment that is accessed through the sub-resources payments and currentPayment. GET Payment Order Request Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Order Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"paymentToken\": \"12345678-1234-1234-1234-123456789010\", \"recurrenceToken\": \"12345678-1234-1234-1234-123456789011\", \"unscheduledToken\": \"12345678-1234-1234-1234-123456789012\", \"transactionsOnFileToken\": \"12345678-1234-1234-1234-123456789013\", \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payers\" }, \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. paymentToken string The payment token created for the purchase used in the authorization to create One-Click Payments. recurrenceToken string The created recurrenceToken, if operation: Verify, operation: Recur or generateRecurrenceToken: true was used. unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. transactionOnFileToken string The created transactionOnFileToken, if operation: Verify and generateTransactionOnFileToken: true was used. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where information about the payer can be retrieved. orderItems string   metadata string The URL to the payments resource where information about all underlying payments can be retrieved. payments string The URL to the payments resource where information about all underlying payments can be retrieved. currentPayment string The URL to the currentPayment resource where information about the current – and sole active – payment can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/payment-order.html"
  },{
    "title": "Payment Order",
    "text": "Step 1: Create Payment Order We start by performing a POST request towards the paymentorder resource in order to create a Payment Order. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. Request Payment Order Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"instrument\": null, \"generatePaymentToken\": false, \"generateRecurrenceToken\": false, \"generateUnscheduledToken\": false, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"workPhoneNumber\" : \"+4787654321\", \"homePhoneNumber\" : \"+4776543210\" }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Payment Order Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"instrument\": \"CreditCard\", \"paymentToken\" : \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"recurrenceToken\": 2c327f17-1818-425a-9657-5d7d69778b31, \"unscheduledToken\": 064c3cbd-9401-4356-aba2-92cc3484313b, \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 10000, \"vatAmount\": 0, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"description\": \"test description\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeInfo\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" }, \"items\": [ { \"creditCard\": { \"cardBrands\": [ \"Visa\", \"MasterCard\" ] } } ] } \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://ecom.externalintegration.payex.com/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://ecom.externalintegration.payex.com/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-expandinstrument\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check instrument string The payment instrument used. Selected by using the Instrument Mode.   generatePaymentToken bool Determines if a payment token should be generated. A payment token is used to enable future one-click payments – with the same token. Default value is false.   generateRecurrenceToken bool Determines if a recurrence token should be generated. A recurrence token is primarily used to enable future recurring payments – with the same token – through server-to-server calls. Default value is false.   generateUnscheduledToken bool Determines if an unscheduled token should be generated. An unscheduled token is primarily used to enable future unscheduled payments – with the same token – through server-to-server calls. Default value is false. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer object The payer object containing information about the payer relevant for the payment order.   email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.   msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.   workPhoneNumber string The work phone number of the payer. Optional (increased chance for frictionless flow if set) and is related to 3-D Secure 2.   homePhoneNumber string The home phone number of the payer. Optional (increased chance for frictionless flow if set) and is related to 3-D Secure 2. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Show fields Hide fields Field Type Description   paymentOrder object The payment order object.   id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   instrument string The payment instrument used. Selected by using the Instrument Mode.   paymentToken string The payment token created if generatePaymentToken: true was used. Enables future one-click payments – with the same token.   recurrenceToken string The recurrence token created if generateRecurrenceToken: true was used. Enables future recurring payments – with the same token.   unscheduledToken string The unscheduled token created if generateUnscheduledToken: true was used. Enables future unscheduled payments – with the same token.   created string The ISO-8601 date of when the payment order was created.   updated string The ISO-8601 date of when the payment order was updated.   operation string Purchase   state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes.   currency string The currency of the payment order.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string(40) A 40 character length textual description of the purchase.   userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   language string sv-SE, nb-NO or en-US.   urls string The URL to the urls resource where all URLs related to the payment order can be retrieved.   payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   payers string The URL to the payer resource where information about the payer can be retrieved.   orderItems string The URL to the orderItems resource where information about the order items can be retrieved.   metadata string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payments string The URL to the payments resource where information about all underlying payments can be retrieved.   currentPayment string The URL to the currentPayment resource where information about the current – and sole active – payment can be retrieved.   operations array The array of operations that are possible to perform on the payment order in its current state.   Response The response should look something like this (abbreviated for brevity): Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 201 Created Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\" }, \"operations\": [ { \"href\": \"&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"method\": \"GET\", \"contentType\": \"application/javascript\" } ] } Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. operations array The array of operations that are possible to perform on the payment order in its current state. The paymentorder object is abbreviated since it’s just the id and operations we are interested in. Store the id of the Payment Order in your system to look up status on the completed payment later. info URL Storage: The id of the Payment Order should be stored for later retrieval. Read more about URL usage. Then find the view-paymentorder operation and embed its href in a &lt;script&gt; element. That script will then load the Seamless View for the Payment Menu. We will look into how to hook that up next. warning Please note that nested iframes (an iframe within an iframe) are unsupported. info orderReference must be sent as a part of the POST request to paymentorders and must represent the order ID of the webshop or merchant website. Step 2: Display the Payment Menu To load the payment menu from the JavaScript URL obtained in the back end API response, it needs to be set as a script element’s src attribute in an HTML document. You can cause a page reload and do this with backend-rendered HTML or you can avoid the page refresh by invoking the POST to create the payment order through Ajax and then create the script element with JavaScript. We will demonstrate how to do a JavaScript-based integration below. First the minimum HTML required to initialize the Payment Menu: HTML 1 2 3 4 5 6 7 8 9 10 11 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Payment Menu v2&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"payment-menu\"&gt;&lt;/div&gt; &lt;!-- Here you can specify your own JavaScript file --&gt; &lt;script src=\"&lt;Your-JavaScript-File&gt;\"&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; What happens inside &lt;Your-JavaScript-File&gt; should look something alike the following: JavaScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 var request = new XMLHttpRequest(); request.addEventListener('load', function () { response = JSON.parse(this.responseText); var script = document.createElement('script'); // The JavaScript expects a JSON response looking like the created // Payment Order, containing the operation 'view-paymentorder. var operation = response.operations.find(function (o) { return o.rel === 'view-paymentorder'; }); script.setAttribute('src', operation.href); script.onload = function () { // Initialize the Payment Menu and inject it into the 'payment-menu' // container &lt;div&gt; defined in the HTML document above. payex.hostedView.paymentMenu({ container: 'payment-menu', culture: 'sv-SE' }).open(); }; // Append the Payment Menu script to the &lt;head&gt; var head = document.getElementsByTagName('head')[0]; head.appendChild(script); }); // You should replace the address here with your own backend endpoint. request.open('POST', '&lt;Your-Backend-Endpoint&gt;', true); request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); // We will send an object containing the amount the Payment Order should be // created with. This should of course not be hard coded and you may want to // send more data from the front-end to the back-end to create a Payment Order // for your particular use-case. request.send(JSON.stringify({ amount: 1200 })); This should bring up the Payment Menu in a Seamless View. It should look like this, depending on whether the payer is identified (top) or a guest user (bottom): When the payer completes the payment, the Payment Menu script will be signaled and a full redirect to the completeUrl sent in with the Payment Order will be performed. When the completeUrl on your server is hit, you can inspect the status on the stored paymentorder.id on the server, and then perform capture. If the payment is a Sale or one-phase purchase, it will be automatically captured. A third scenario is if the goods are sent physically to the payer; then you should not do a capture until the goods are sent. You may open and close the payment menu using .open() and .close() functions. You can also invoke .refresh() to update the Payment Menu after any changes to the order. Below, you will see a complete overview of the payment menu process. Notice that there are two ways of performing the payment: Payer performs payment out of iframe. Payer performs payment within iframe. info Note that in this diagram, the Payer refers to the merchant front-end (website) while Merchant refers to the merchant back-end. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(138, 205, 195, 0.1) activate Payer note left of Payer: Payment Menu Payer -&gt;&gt;+ Merchant: Initiate Purchase deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: POST /psp/paymentorders (paymentUrl, payer) deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: rel:view-paymentorder deactivate SwedbankPay Merchant --&gt;&gt;- Payer: Display Payment Menu on Merchant Page activate Payer Payer -&gt;&gt; Payer: Initiate Payment Menu Seamless View (open iframe) Payer --&gt;&gt;+ SwedbankPay: Show Payment UI page in iframe deactivate Payer SwedbankPay -&gt;&gt;+ Payer: Do payment logic deactivate SwedbankPay opt Payer perform payment out of iFrame Payer -&gt;&gt; Payer: Redirect to 3rd party Payer -&gt;&gt;+ 3rdParty: Redirect to 3rdPartyUrl URL deactivate Payer 3rdParty --&gt;&gt;+ Payer: Redirect back to paymentUrl (merchant) deactivate 3rdParty Payer -&gt;&gt; Payer: Initiate Payment Menu Seamless View (open iframe) Payer -&gt;&gt;+ SwedbankPay: Show Payment UI page in iframe deactivate Payer SwedbankPay -&gt;&gt; Payer: Do payment logic end SwedbankPay --&gt;&gt; Payer: Payment status deactivate SwedbankPay alt If payment is completed activate Payer Payer -&gt;&gt; Payer: Event: onPaymentCompleted Payer -&gt;&gt;+ Merchant: Check payment status deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: GET &lt;paymentorder.id&gt; deactivate Merchant SwedbankPay -&gt;&gt;+ Merchant: rel: paid-paymentorder deactivate SwedbankPay opt Get PaymentOrder Details (if paid-paymentorder operation exist) activate Payer deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: GET rel: paid-paymentorder deactivate Merchant SwedbankPay --&gt;&gt; Merchant: Payment Details deactivate SwedbankPay end end opt If payment is failed activate Payer Payer -&gt;&gt; Payer: Event: OnPaymentFailed Payer -&gt;&gt;+ Merchant: Check payment status deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: GET {paymentorder.id} deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: rel: failed-paymentorder deactivate SwedbankPay opt Get PaymentOrder Details (if failed-paymentorder operation exist) activate Payer deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: GET rel: failed-paymentorder deactivate Merchant SwedbankPay --&gt;&gt; Merchant: Payment Details deactivate SwedbankPay end end activate Merchant Merchant --&gt;&gt;- Payer: Show Purchase complete opt PaymentOrder Callback (if callbackUrls is set) activate Payer deactivate Payer SwedbankPay -&gt;&gt; Merchant: POST Payment Callback end end Introduction Capture",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/payment-order.html"
  },{
    "title": "Payment Orders",
    "text": "Payment Orders The SDK works in terms of Payment Orders as used in Digital Payments. Therefore, all features of payment orders are available in the SDK by using a suitable custom configuration. The rest of the page illustrates how to use certain Payment Order features with the SDK-provided Merchant Backend Configuration. Detailed descriptions of the features will not be repeated here; please refer to the Checkout documentation instead. URLs A Payment Order created for the SDK must have urls the same way a Payment Order to be used on a web page would. The SDK context places some requirement on these urls. Field SDK Requirements hostUrls Should match the value your Configuration returns in the webViewBaseURL of ViewPaymentOrderInfo. completeUrl No special requirements. However, the SDK will intercept the navigation, so completeUrl will not actually be opened in the SDK Web View. termsOfServiceUrl No special requirements. cancelUrl No special requirements. However, the SDK will intercept the navigation, so cancelUrl will not actually be opened in the SDK Web View. paymentUrl If opened in a browser, must eventually be delivered to the SDK, bringing the containing app to the foreground. See the Android and iOS specific documentation. callbackUrl No special requirements. This is a server-to-server affair. Merchant Backend Configuration The SDK-provided Merchant Backend Configuration allows creating a set of urls that fulfill the above when used with a backend implementing the Merchant Backend API. Android 1 2 3 4 5 6 7 // backendUrl is the the backendUrl of your MerchantBackendConfiguration val urls = PaymentOrderUrls( context = context, backendUrl = backendUrl callbackUrl = callbackUrl, termsOfServiceUrl = termsOfServiceUrl ) iOS 1 2 3 4 5 6 7 8 // On iOS, the `paymentUrl` has a nonnegligible chance of actually being shown in Safari, // so we want to localize it. This is why we need the language parameter here. let urls = SwedbankPaySDK.PaymentOrderUrls( configuration: configuration, language: language, callbackUrl: callbackUrl, termsOfServiceUrl: termsOfServiceUrl ) Order Items You may want to populate the orderItems field of the paymentOrder for e.g. printing invoices. The SDK offers facilities for working with orderItems, allowing you to discover the fields of an Order Item in your IDE. Please refer to the Checkout documentation and/or the class documentation for the meaning of the fields. On Android, OrderItem is a data class, so its instances are immutable, but you can easily create copies with modified fields. Android 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 val orderItem = OrderItem( reference = \"123abc\", name = \"Thing\", // ItemType is a enum, allowing you to discover the options in your IDE type = ItemType.PRODUCT, `class` = \"Things\", // Optional Order Item fields are optional in the kotlin OrderItem class as well. // The optional fields default to null, so you do not need to specify them if // you do not use them. itemUrl = null, quantity = 1, quantityUnit = \"pcs\", unitPrice = 1000, vatPercent = 2500 // 25%, amount = 1000, vatAmount = 200 ) // OrderItem is immutable, but easy to create partially modified copies of val otherItem = orderItem.copy( reference = \"456def\", name = \"Other Thing\" ) On iOS SwedbankPaySDK.OrderItem is a struct, allowing you to store and modify them like any other Swift values. iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var orderItem = SwedbankPaySDK.OrderItem( reference: \"123abc\", name: \"Thing\", // SwedbankPaySDK.ItemType is a enum, allowing you to discover the options in your IDE type: .Product, class: \"Things\", quantity: 1, quantityUnit: \"pcs\", unitPrice: 1000, vatPercent: 2500 // 25%, amount: 1000, vatAmount: 200 ) // a SwedbankPaySDK.OrderItem var is mutable like any var orderItem.reference = \"456def\" orderItem.name = \"Other Thing\"",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/core/payment-orders.html"
  },{
    "title": "Digital Wallets",
    "text": "Apple Pay Apple Pay provides an easy and secure way to make payments. By using Face ID, Touch ID, or double-clicking their Apple Watch, payers can quickly and securely check out. Payers love the simplicity, and you’ll love the increased conversion rates and new user adoption that comes with it. Domain Verification Redirect integrations does not require a domain verification, as it will be hosted on Swedbank Pay’s domain. For Seamless View integrations, Apple needs to verify also your domain as a part of Swedbank Pay’s set up process. To do this, you need to host a verification file on the following web path: https://example.com/.well-known/apple-developer-merchantid-domain-association To make sure your file looks correct, you can copy our domain file which is already present on our server. The verification file consists of a hex string which contains a JSON. Opening it is OK, but make sure that you upload it exactly as it is. We recommend opening it as a text file or something similar, and not e.g. in Word or an editor, as it could result in unwanted formatting changes if you save it. The file does not, and should not, have a file extension. To help you validate that your file looks correct, you can compare it to this, which is already present on our server. If you are using our iOS SDK, you need to ensure that the WebViewBaseURL is set to the exact same domain as where you host the file. Otherwise, it will not validate. This file must be in place before we can activate Apple Pay for you. Accepting Donations Apple Pay provides nonprofit organizations a simple and secure way to accept donations. To register your nonprofit organization for Apple Pay, please visit Benevity. You’ll be asked to provide basic information about your organization. Note that the Apple Developer Team ID is an optional field, so this is not needed. When you get your approval from Benevity, you need to share it with Swedbank Pay before we can activate Apple Pay for you. You can e-mail it to agreement@swedbankpay.com together with Name, Organizational and Customer number. Apple Pay Terms And Conditions Apple requires Swedbank Pay to identify whether and when you have accessed the Apple Pay Platform Web Merchant Terms and Conditions, and to record whether you have accepted and agreed to them. We also need to require you to periodically incorporate updates or amendments to the terms of the Apple Pay Web Terms and Conditions, Apple Pay Web Guidelines, Apple Pay HI Guidelines, Apple Pay Best Practices Guide, or Apple Marketing Guidelines. Unless you have already accepted as part of signing your agreement with Swedbank Pay, we can provide the following links for digital signature in Sweden and Norway. If you are unable to sign the Apple Pay Web Terms and Conditions in Swedish or Norwegian digitally, please use the supplementary agreement template (click to download) in English, and e-mail it to agreement@swedbankpay.com together with Name, Organizational and Customer number. Your acceptance is needed before we can activate Apple Pay for you. Back to Get Started Click to Pay Click to Pay makes it easy for payers to check out, no matter what online payment channel they choose. All cards are stored in a portable profile they can be used securely whenever the Click to Pay icon is present. Built on EMV standards, Click to Pay is a password-free checkout option that delivers security, convenience and control to the payers. Unless you have requested Click to Pay as part of signing your agreement with Swedbank Pay, you can e-mail a request to agreement@swedbankpay.com together with Name, Organizational and Customer number. Back to Get Started Google Pay™ info Google Pay™ in apps: We do not currently support launching Google Pay™ within an in-app solution. If you want to implement Google Pay™ in your web-view application, you will need to open it in a browser and open the Checkout from there. Google Pay™ enables quicker, safer checkout in apps and websites, and makes it easy for customers to pay with their phones. With a simple integration, you can access hundreds of millions of cards saved to Google Accounts and open up your business for more business. With a click, the payers can choose any payment method saved in their Google Account and check out almost instantly across apps and sites. Merchant ID You need to sign up for a Google Developer Account and create a business profile and payment profile. After creating the business profile, you will be able to see your Merchant ID on the top right corner of the page. We need that ID in order to activate Google Pay for you. However, be sure to register your domain/package and submit screenshots of your integration for approval. Login to Google Pay™ &amp; Wallet Console, go to the Google Pay™ API tab and upload the screenshots and submit your integration for approval. The screenshots should be of the entire buyflow process (ex: add to cart, checkout, payment, confirmation - if available). Your Merchant ID will only work in production environment once Google complete their review and approve your submitted integration. Unless you have provided us with your Merchant ID as part of signing your agreement with Swedbank Pay, you can e-mail us it at agreement@swedbankpay.com together with Name, Organizational and Customer number. Implementation Paths Which Google Pay™ documentation and guidelines should you use if you are an android merchant? Google Pay Android Developer Documentation, Google Pay Android Integration Checklist and the Google Pay Android Brand Guidelines. Which Google Pay™ documentation and guidelines should you use if you are a web merchant? Google Pay Web Developer Documentation, Google Pay Web Integration Checklist and the Google Pay Web Brand Guidelines. Do you as a merchant need to take additional steps with regards to the Google Pay™ payment button or other hosted components to your website? No additional steps are required. Contact Customer Operations after signing up with Google with your Merchant ID to setup your contract. Once set up, the option to pay with Google Pay™ should appear in your implementation, as long as your payer’s device supports Google Pay™. Please remember that you do must adhere to Google Pay™ API’s Acceptable Use Policy and accept the terms defined in the Google Pay™ API’s Terms of Service. If our SDK generates an IsReadyToPayRequest or a PaymentDataRequest on behalf of you as a merchant, do you need to take additional steps before the Google Pay™ functionality is available? No additional steps are required. Contact Customer Operations after signing up with Google with your Merchant ID to setup your contract. Once set up, the option to pay with Google Pay™ should appear in your implementation, as long as your payer’s device supports Google Pay™. Please remember that you do must adhere to Google Pay™ API’s Acceptable Use Policy and accept the terms defined in the Google Pay™ API’s Terms of Service. Implementation Details Do Swedbank Pay support 3-D Secure, and will merchants have to enable it for PAN_ONLY credentials themselves? 3DS is enabled by default. Merchants will not handle any payment details or sensitive data at all during the purchase process. The data is encrypted and sent to our PCI zone, where we decrypt and handle processing of the cards. Merchants cannot selectively enable/disable what types of authorization methods they receive. We handle all kinds on our end. How do merchants set the gateway and gatewayMerchantID values? Swedbank Pay will handle both gateway and gatewayMerchantID internally during merchant onboarding, and is not an issue you need to address. Please note that Merchant ID and gatewayMerchantID is not the same. The Merchant ID is given to you in the Google Console. The gatewayMerchantID is the ID given to a merchant from the gateway. Which authorization methods do Swedbank Pay accept? We accept both PAN_ONLY and CRYPTOGRAM_3DS cards in all countries where Google Pay is supported. Which card networks methods do Swedbank Pay accept? We support Visa, Mastercard and Amex in all countries where Google Pay™ is supported. Are there any requirements regarding the billing address to be submitted by the developer for address verification? Any merchant onboarded with Swedbank Pay who’s been given access to Google Pay™, can request the payer to provide billing address in relation to shipping them physical goods. These are encrypted and can only be accessed by the merchant that requested the billing details and is deleted after 30 days. How do merchants send Google encrypted payment data and transaction data to Swedbank Pay? Merchants will not handle any of the customers payment details. The encrypted details are passed on to our backend systems, where we pass them to our internal PCI environment for processing. Within the PCI environment, a tokenized representation of the card is created, which is then used outside of the PCI environment to ensure the customers details are kept safe. Back to Get Started",
    "tags": "",
    "url": "/checkout-v3/payment-presentations.html"
  },{
    "title": "Payment Request",
    "text": "The integration consists of three main steps. Creating the payment order, displaying the payment menu, and capturing the funds. In addition, there are other post-purchase options you need. We get to them later on. Step 1: Create Payment Order When your customer has initiated a purchase, you need to create a payment order. Start by performing a POST request towards the paymentorder resource with payer information and a completeUrl. We have added productName to the payment order request in this integration. You can find it in the paymentorder field. This is required if you want to use Digital Payments. If it isn´t included in your request, you won’t get the correct operations in the response. When productName is set to checkout3, digitalProducts will be set to false by default. Supported features for this integration are subscriptions (recur, one-click and unscheduled MIT), MOTO, instrument mode, split settlement (subsite) and the possibility to use your own logo. There is also a guest mode option for the payers who don’t wish to store their information. When using Payments Only, the way to trigger this is to not include the payerReference field in your paymentOrder request. You can find it in the payer field in the example below. Sometimes you might need to abort purchases. An example could be if a payer does not complete the purchase within a reasonable timeframe. For those instances we have abort, which you can read about in the core features. You can only use abort if the payer has not completed an authorize or a sale. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Payment Order Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"productName\": \"Checkout3\", \"implementation\": \"PaymentsOnly\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], //Seamless View only \"paymentUrl\": \"https://example.com/perform-payment\", \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\" //Redirect only }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"orderReference\": \"or-123456\" } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. Payment Order Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"vatAmount\": 375, \"amount\": 1500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"PaymentsOnly\", \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/menu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/core/js/px.payment.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. Adding To Your Request The request shown above includes what you need to create the payment, but you can add more sections if you need or want. Examples can be to include order items by adding a separate node, or provide risk indicators and information about the payer to make the payment process as frictionless as possible. Read more about possible additions to the request in our feature section. Back to Introduction Display Payment UI",
    "tags": "",
    "url": "/checkout-v3/payment-request.html"
  },{
    "title": "Payment Resource",
    "text": "Payment Resource The payment resource is central to all payment instruments. All operations that target the payment resource directly produce a response similar to the example seen below. The response given contains all operations that are possible to perform in the current state of the payment. GET Payment Resource Request Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Resource Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"captures\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [{ \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales\", \"rel\": \"create-sale\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"redirect-sale\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"view-sales\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"view-payment\", \"contentType\": \"application/javascript\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/json\" } ] } Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Operations The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-payment-abort aborts the payment order before any financial transactions are performed. create-sale Creates a sales transaction without redirection to a payment page. redirect-sale Contains the redirect-URL that redirects the payer to a Swedbank Pay hosted payment page prior to creating a sales transaction. view-sales Contains the URL of the JavaScript used to create a Seamless View iframe directly for the sale transaction without redirecting the payer to a separate payment page. view-payment Contains the URL of the JavaScript used to create a Seamless View iframe directly without redirecting the payer to separate payment page.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/payment-resource.html"
  },{
    "title": "Payment Resource",
    "text": "Payment Resource The payment resource is central to all payment instruments. All operations that target the payment resource directly produce a response similar to the example seen below. The response given contains all operations that are possible to perform in the current state of the payment. GET Payment Resource Request Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Resource Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"reversals\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, }, \"operations\": [{ \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales\", \"rel\": \"create-sale\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"redirect-sale\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"view-sale\", \"contentType\": \"application/javascript\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/json\" } { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/json\" } ] } Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Operations The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-payment-abort aborts the payment order before any financial transactions are performed. paid-payment Returns the information about a payment that has the status paid. failed-payment Returns the information about a payment that has the status failed. view-sale Contains the URL of the JavaScript used to create a Seamless View iframe directly for the sale transaction without redirecting the payer to a separate payment page.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/payment-resource.html"
  },{
    "title": "Payment Resource",
    "text": "Payment Resource The payment resource is central to all payment instruments. All operations that target the payment resource directly produce a response similar to the example seen below. The response given contains all operations that are possible to perform in the current state of the payment. GET Payment Resource Request Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Resource Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [{ \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/operation=authorize\", \"rel\": \"create-authorization\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/json\" } ] } Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Operations The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-payment-abort aborts the payment order before any financial transactions are performed. redirect-authorization Contains the URL that is used to redirect the payer to the Swedbank Pay Payments containing the card authorization UI. view-authorization Contains the JavaScript href that is used to embed the card authorization UI directly on the webshop/merchant site create-capture Creates a capture transaction in order to charge the reserved funds from the payer. create-cancellation Creates a cancellation transaction that cancels a created, but not yet captured payment. paid-payment Returns the information about a payment that has the status paid. failed-payment Returns the information about a payment that has the status failed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/payment-resource.html"
  },{
    "title": "Payment Resource",
    "text": "Payment Resource The payment resource is central to all payment instruments. All operations that target the payment resource directly produce a response similar to the example seen below. The response given contains all operations that are possible to perform in the current state of the payment. GET Payment Resource Request Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Resource Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/json\" } ] } Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Operations The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-payment-abort aborts the payment order before any financial transactions are performed. redirect-authorization Contains the URL that is used to redirect the payer to the Swedbank Pay Payments containing the card authorization UI. view-authorization Contains the JavaScript href that is used to embed the card authorization UI directly on the webshop/merchant site view-payment Contains the URL of the JavaScript to create a Seamless view iframe directly without redirecting the payer to a separate payment page. create-capture Creates a capture transaction in order to charge the reserved funds from the payer. create-cancellation Creates a cancellation transaction that cancels a created, but not yet captured payment. paid-payment Returns the information about a payment that has the status paid. failed-payment Returns the information about a payment that has the status failed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/payment-resource.html"
  },{
    "title": "Payment Resource",
    "text": "Payment Resource The payment resource is central to all payment instruments. All operations that target the payment resource directly produce a response similar to the example seen below. The response given contains all operations that are possible to perform in the current state of the payment. GET Payment Resource Request Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Resource Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"DKK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"da-DK\", \"prices\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/json\" } ] } Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string da-DK, fi-FI or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Operations The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-payment-abort aborts the payment order before any financial transactions are performed. redirect-authorization Contains the URL that is used to redirect the payer to the Swedbank Pay Payments containing the card authorization UI. view-authorization Contains the JavaScript href that is used to embed the card authorization UI directly on the webshop/merchant site view-payment Contains the URL of the JavaScript to create a Seamless view iframe directly without redirecting the payer to a separate payment page. create-capture Creates a capture transaction in order to charge the reserved funds from the payer. create-cancellation Creates a cancellation transaction that cancels a created, but not yet captured payment. paid-payment Returns the information about a payment that has the status paid. failed-payment Returns the information about a payment that has the status failed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/payment-resource.html"
  },{
    "title": "Payment Resource",
    "text": "Payment Resource The payment resource is central to all payment instruments. All operations that target the payment resource directly produce a response similar to the example seen below. The response given contains all operations that are possible to perform in the current state of the payment. GET Payment Resource Request Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Payment Resource Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/json\" } ] } Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Operations The operations should be performed as described in each response and not as described here in the documentation. Always use the href and method as specified in the response by finding the appropriate operation based on its rel value. The only thing that should be hard coded in the client is the value of the rel and the request that will be sent in the HTTP body of the request for the given operation. Operation Description update-payment-abort aborts the payment order before any financial transactions are performed. redirect-authorization Contains the URL that is used to redirect the payer to the Swedbank Pay Payments containing the card authorization UI. view-authorization Contains the JavaScript href that is used to embed the card authorization UI directly on the webshop/merchant site view-payment Contains the URL of the JavaScript to create a Seamless view iframe directly without redirecting the payer to a separate payment page. create-capture Creates a capture transaction in order to charge the reserved funds from the payer. create-cancellation Creates a cancellation transaction that cancels a created, but not yet captured payment. paid-payment Returns the information about a payment that has the status paid. failed-payment Returns the information about a payment that has the status failed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/payment-resource.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the sale does not indicate whether a given transaction was successful or not, it only tells whether the sale resource itself is operational or not. To figure out the state of i.e. sale transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the sale. As long as the sale has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a sale where a Failed attempt has been made, but the payer still has attempts left to complete the sale, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the sale’s list of transactions either by expanding it when retrieving the sale, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to sale, with its state equal to Completed, you can be sure that the amount of the sale has been reserved or withdrawn and that the sale can be considered successful.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/payment-state.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the sale does not indicate whether a given transaction was successful or not, it only tells whether the sale resource itself is operational or not. To figure out the state of i.e. sale transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the sale. As long as the sale has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a sale where a Failed attempt has been made, but the payer still has attempts left to complete the sale, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the sale’s list of transactions either by expanding it when retrieving the sale, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to sale, with its state equal to Completed, you can be sure that the amount of the sale has been reserved or withdrawn and that the sale can be considered successful.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/payment-state.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the authorization does not indicate whether a given transaction was successful or not, it only tells whether the authorization resource itself is operational or not. To figure out the state of i.e. authorization transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the authorization. As long as the authorization has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a authorization where a Failed attempt has been made, but the payer still has attempts left to complete the authorization, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the authorization’s list of transactions either by expanding it when retrieving the authorization, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to authorization, with its state equal to Completed, you can be sure that the amount of the authorization has been reserved or withdrawn and that the authorization can be considered successful.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/payment-state.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the authorization does not indicate whether a given transaction was successful or not, it only tells whether the authorization resource itself is operational or not. To figure out the state of i.e. authorization transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the authorization. As long as the authorization has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a authorization where a Failed attempt has been made, but the payer still has attempts left to complete the authorization, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the authorization’s list of transactions either by expanding it when retrieving the authorization, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to authorization, with its state equal to Completed, you can be sure that the amount of the authorization has been reserved or withdrawn and that the authorization can be considered successful.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/payment-state.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the authorization does not indicate whether a given transaction was successful or not, it only tells whether the authorization resource itself is operational or not. To figure out the state of i.e. authorization transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the authorization. As long as the authorization has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a authorization where a Failed attempt has been made, but the payer still has attempts left to complete the authorization, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the authorization’s list of transactions either by expanding it when retrieving the authorization, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to authorization, with its state equal to Completed, you can be sure that the amount of the authorization has been reserved or withdrawn and that the authorization can be considered successful.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/payment-state.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the authorization does not indicate whether a given transaction was successful or not, it only tells whether the authorization resource itself is operational or not. To figure out the state of i.e. authorization transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the authorization. As long as the authorization has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a authorization where a Failed attempt has been made, but the payer still has attempts left to complete the authorization, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the authorization’s list of transactions either by expanding it when retrieving the authorization, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to authorization, with its state equal to Completed, you can be sure that the amount of the authorization has been reserved or withdrawn and that the authorization can be considered successful.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/payment-state.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the authorization does not indicate whether a given transaction was successful or not, it only tells whether the authorization resource itself is operational or not. To figure out the state of i.e. authorization transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the authorization. As long as the authorization has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a authorization where a Failed attempt has been made, but the payer still has attempts left to complete the authorization, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the authorization’s list of transactions either by expanding it when retrieving the authorization, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to authorization, with its state equal to Completed, you can be sure that the amount of the authorization has been reserved or withdrawn and that the authorization can be considered successful.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/payment-state.html"
  },{
    "title": "Payment State",
    "text": "Payment State The state field on the authorization does not indicate whether a given transaction was successful or not, it only tells whether the authorization resource itself is operational or not. To figure out the state of i.e. authorization transactions, you have two options: Paid Or Failed Operations You can perform a GET request on the authorization. As long as the authorization has been completed, successful or not, you will find the Paid or Failed operation among the operations in the response. Please note that a authorization where a Failed attempt has been made, but the payer still has attempts left to complete the authorization, you won’t see the Failed operation. It will only appear when all attempts have been made. Authorization Or Sale Transactions Find the authorization’s list of transactions either by expanding it when retrieving the authorization, or by performing a GET request towards the transactions.id URL. If you find a transaction with type equal to authorization, with its state equal to Completed, you can be sure that the amount of the authorization has been reserved or withdrawn and that the authorization can be considered successful.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/payment-state.html"
  },{
    "title": "Transactions states",
    "text": "Payment And Transaction States Both payments and transactions can be in several different states during the course of a purchase. You can find a short description of each state below. Payment States ready means that the payment has been created successfully, and is now ready for further transaction operations, like authorization, sale or abort. failed means that something went wrong during the payment process, and no further transactions can be created if the payment is in this state. Examples of possible failures are triggering of anti-fraud protection or if the payer reaches the maximum number of attempts for a given payment. aborted means that the merchant has aborted the payment before the payer has fulfilled the payment process. Aborting a payment is done by performing the update-payment-abort operation. pending is the state of a payment when a transaction is in an initialized state. See more below. As long as a payment is pending, no further transactions can be done. If you want to inspect the transactional status of a payment, read about the paid-payment, failed-payment and aborted-payment operations. Transaction States ìntialized is the transaction state when something unexpected occurred, and it is impossible to determine the exact status of the transaction. An example of this can be a network failure. No further actions can be done on a payment with a transaction in this state. completed means that the transaction has reached its intended purpose. An authorization will be completed when the funds have been authorized, a capture will be completed when the funds have been captured and a reversal will be completed when the payer has been refunded. failed means that the transaction has failed. The state is final for that specific transaction, but given that the payment is operational, it is possible to perform more transactions on the same payment, i.e. retry the authorization with another card. If the payer reaches the maximum amount of retries, the payment itself will be set to failed. awaitingActivity is in use for a selection of payment instruments. A transaction reaches this state when a payer is sent away from Swedbank Pay to do a confirmation or verification. Examples of this can be payment apps like Swish, Vipps or MobilePay, or 3-D Secure verifications for card payments.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/payment-transaction-states.html"
  },{
    "title": "Transactions states",
    "text": "Payment And Transaction States Both payments and transactions can be in several different states during the course of a purchase. You can find a short description of each state below. Payment States ready means that the payment has been created successfully, and is now ready for further transaction operations, like authorization, sale or abort. failed means that something went wrong during the payment process, and no further transactions can be created if the payment is in this state. Examples of possible failures are triggering of anti-fraud protection or if the payer reaches the maximum number of attempts for a given payment. aborted means that the merchant has aborted the payment before the payer has fulfilled the payment process. Aborting a payment is done by performing the update-payment-abort operation. pending is the state of a payment when a transaction is in an initialized state. See more below. As long as a payment is pending, no further transactions can be done. If you want to inspect the transactional status of a payment, read about the paid-payment, failed-payment and aborted-payment operations. Transaction States ìntialized is the transaction state when something unexpected occurred, and it is impossible to determine the exact status of the transaction. An example of this can be a network failure. No further actions can be done on a payment with a transaction in this state. completed means that the transaction has reached its intended purpose. An authorization will be completed when the funds have been authorized, a capture will be completed when the funds have been captured and a reversal will be completed when the payer has been refunded. failed means that the transaction has failed. The state is final for that specific transaction, but given that the payment is operational, it is possible to perform more transactions on the same payment, i.e. retry the authorization with another card. If the payer reaches the maximum amount of retries, the payment itself will be set to failed. awaitingActivity is in use for a selection of payment instruments. A transaction reaches this state when a payer is sent away from Swedbank Pay to do a confirmation or verification. Examples of this can be payment apps like Swish, Vipps or MobilePay, or 3-D Secure verifications for card payments.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/payment-transaction-states.html"
  },{
    "title": "Transactions states",
    "text": "Payment And Transaction States Both payments and transactions can be in several different states during the course of a purchase. You can find a short description of each state below. Payment States ready means that the payment has been created successfully, and is now ready for further transaction operations, like authorization, sale or abort. failed means that something went wrong during the payment process, and no further transactions can be created if the payment is in this state. Examples of possible failures are triggering of anti-fraud protection or if the payer reaches the maximum number of attempts for a given payment. aborted means that the merchant has aborted the payment before the payer has fulfilled the payment process. Aborting a payment is done by performing the update-payment-abort operation. pending is the state of a payment when a transaction is in an initialized state. See more below. As long as a payment is pending, no further transactions can be done. If you want to inspect the transactional status of a payment, read about the paid-payment, failed-payment and aborted-payment operations. Transaction States ìntialized is the transaction state when something unexpected occurred, and it is impossible to determine the exact status of the transaction. An example of this can be a network failure. No further actions can be done on a payment with a transaction in this state. completed means that the transaction has reached its intended purpose. An authorization will be completed when the funds have been authorized, a capture will be completed when the funds have been captured and a reversal will be completed when the payer has been refunded. failed means that the transaction has failed. The state is final for that specific transaction, but given that the payment is operational, it is possible to perform more transactions on the same payment, i.e. retry the authorization with another card. If the payer reaches the maximum amount of retries, the payment itself will be set to failed. awaitingActivity is in use for a selection of payment instruments. A transaction reaches this state when a payer is sent away from Swedbank Pay to do a confirmation or verification. Examples of this can be payment apps like Swish, Vipps or MobilePay, or 3-D Secure verifications for card payments.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/payment-transaction-states.html"
  },{
    "title": "Transactions states",
    "text": "Payment And Transaction States Both payments and transactions can be in several different states during the course of a purchase. You can find a short description of each state below. Payment States ready means that the payment has been created successfully, and is now ready for further transaction operations, like authorization, sale or abort. failed means that something went wrong during the payment process, and no further transactions can be created if the payment is in this state. Examples of possible failures are triggering of anti-fraud protection or if the payer reaches the maximum number of attempts for a given payment. aborted means that the merchant has aborted the payment before the payer has fulfilled the payment process. Aborting a payment is done by performing the update-payment-abort operation. pending is the state of a payment when a transaction is in an initialized state. See more below. As long as a payment is pending, no further transactions can be done. If you want to inspect the transactional status of a payment, read about the paid-payment, failed-payment and aborted-payment operations. Transaction States ìntialized is the transaction state when something unexpected occurred, and it is impossible to determine the exact status of the transaction. An example of this can be a network failure. No further actions can be done on a payment with a transaction in this state. completed means that the transaction has reached its intended purpose. An authorization will be completed when the funds have been authorized, a capture will be completed when the funds have been captured and a reversal will be completed when the payer has been refunded. failed means that the transaction has failed. The state is final for that specific transaction, but given that the payment is operational, it is possible to perform more transactions on the same payment, i.e. retry the authorization with another card. If the payer reaches the maximum amount of retries, the payment itself will be set to failed. awaitingActivity is in use for a selection of payment instruments. A transaction reaches this state when a payer is sent away from Swedbank Pay to do a confirmation or verification. Examples of this can be payment apps like Swish, Vipps or MobilePay, or 3-D Secure verifications for card payments.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/payment-transaction-states.html"
  },{
    "title": "Payment and Transactions States",
    "text": "Payment And Transaction States Both payments and transactions can be in several different states during the course of a purchase. You can find a short description of each state below. Payment States ready means that the payment has been created successfully, and is now ready for further transaction operations, like authorization, sale or abort. failed means that something went wrong during the payment process, and no further transactions can be created if the payment is in this state. Examples of possible failures are triggering of anti-fraud protection or if the payer reaches the maximum number of attempts for a given payment. aborted means that the merchant has aborted the payment before the payer has fulfilled the payment process. Aborting a payment is done by performing the update-payment-abort operation. pending is the state of a payment when a transaction is in an initialized state. See more below. As long as a payment is pending, no further transactions can be done. If you want to inspect the transactional status of a payment, read about the paid-payment, failed-payment and aborted-payment operations. Transaction States ìntialized is the transaction state when something unexpected occurred, and it is impossible to determine the exact status of the transaction. An example of this can be a network failure. No further actions can be done on a payment with a transaction in this state. completed means that the transaction has reached its intended purpose. An authorization will be completed when the funds have been authorized, a capture will be completed when the funds have been captured and a reversal will be completed when the payer has been refunded. failed means that the transaction has failed. The state is final for that specific transaction, but given that the payment is operational, it is possible to perform more transactions on the same payment, i.e. retry the authorization with another card. If the payer reaches the maximum amount of retries, the payment itself will be set to failed. awaitingActivity is in use for a selection of payment instruments. A transaction reaches this state when a payer is sent away from Swedbank Pay to do a confirmation or verification. Examples of this can be payment apps like Swish, Vipps or MobilePay, or 3-D Secure verifications for card payments.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/payment-transaction-states.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Order Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment Order as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Seamless View Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Seamless View Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Seamless View Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Seamless View Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Payment Menu Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentUrl",
    "text": "Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Seamless View Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/payment-url.html"
  },{
    "title": "PaymentAsync",
    "text": "The PaymentAsync should be called when the amount is known. It opens all available readers and waits for a payment instrument. If Alternative Payment Methods are activated it will open for that too. warning Heads up: After PaymentAsync returns there has to be a delay before next request can be made. If there is no delay the next request will fail, indicating busy and retries have to be made. Parameters totalamount - includes possible cashback amount cashback - part of total amount that will be handed to customer currency - currency code as a string representing ISO-4217 3 letter code. Has to be available in the terminal setup. The default is “SEK”. Returns A PaymentRequestResult A PayementRequestResult.ResponseResult of value Success means transaction approved. If ResponseResult is Failure there is an ErrorCondition. If ErrorCondition is Busy, wait awhile and try again. Make sure to always print the customer’s receipt when available. For an aborted PaymentAsync there might not be one available. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class NexoRequestResult { public virtual string ResponseContent { get; set; } public NexoResponseResult ResponseResult { get; set; } public string ErrorCondition { get; set; } public string ResponseText { get; set; } } public class PaymentRequestResult : NexoRequestResult { public JObject CustomerReceiptData { get; set; } public JObject MerchantReceiptData { get; set; } public string FormattedReceipt { get; set; } public string ReceiptBlob { get; set; } public JObject SettlementData { get; set; } public XElement OriginalTransaction { get; set; } public string UICulture { get; set; } public override string ResponseContent { get; set; } } CustomerReceiptData - Json object 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 { \"Cardholder\": { \"Mandatory\": { \"Acquirer\": { \"CardAcceptorNumber\": \"10020001\", \"TerminalID\": \"877888\" }, \"CardAcceptor\": { \"Address1\": \"Kungsgatan 36\", \"BankAgentName\": \"banky-bank\", \"Name\": \"Demo shop\", \"OrganisationNumber\": \"5565671-6165\", \"PostZipCode\": \"5050\", \"TownCity\": \"merchant-Base24-City\" }, \"CardDetails\": { \"ApplicationIdentifier\": \"A0000000031010\", \"CardSchemeName\": { \"ApplicationLabel\": \"Visa Debit\" }, \"PrimaryAccountNumber\": \"************4565\", \"TerminalVerificationResult\": \"0080008000\", \"TransactionStatusInformation\": \"E800\" }, \"Outcome\": { \"ApprovalCode\": \"942932\", \"AuthorisationResponder\": \"9\", \"AuthorisationResponseCode\": \"00\", \"DebitStatus\": \"00\" }, \"Payment\": { \"AuthorisationChannel\": \"1\", \"CardholderVerificationMethod\": \"a\", \"Currency\": \"SEK\", \"FinancialInstitution\": \"SWE\", \"PaymentAmount\": \"41,00\", \"ReceiptNumber\": \"8778880241\", \"SignatureBlock\": false, \"TotalAmount\": \"41,00\", \"TransactionSource\": \"C\", \"TransactionType\": \"00\" }, \"TimeStamp\": { \"DateOfPayment\": \"2023-03-16\", \"TimeOfPayment\": \"18:01\" } }, \"Optional\": { \"CardAcceptor\": { \"CountryName\": \"752\", \"PhoneNumber\": \"+4684051000\" }, \"CardDetails\": { \"CardSchemeName\": { \"ApplicationLabel\": \"Visa Debit\" } }, \"Payment\": { \"Reference\": \"1801042\" } } } } FromattedRececipt - array of lines 1 [{\"Text\":\"Demo shop \"},{\"Text\":\"Kungsgatan 36 \"},{\"Text\":\"5050 merchant-Base24-City\"},{\"Text\":\"Org nr: 5565671-6165 \"},{\"Text\":\" \"},{\"Text\":\"Butiksnr.: 10020001\"},{\"Text\":\"Termid: 877888\"},{\"Text\":\"2023-03-16 18:01\"},{\"Text\":\" \"},{\"Text\":\" KÖP \"},{\"Text\":\" \"},{\"Text\":\"SEK 41,00\"},{\"Text\":\"Total: 41,00\"},{\"Text\":\" \"},{\"Text\":\"Personlig kod \"},{\"Text\":\"************4565 \"},{\"Text\":\"Visa Debit \"},{\"Text\":\" \"},{\"Text\":\" \"},{\"Text\":\"Ca1 9 00 942932 \"},{\"Text\":\" \"},{\"Text\":\"Ref.nr: 8778880241\"},{\"Text\":\"AID: A0000000031010\"},{\"Text\":\"TVR: 0080008000\"},{\"Text\":\"TSI: E800\"},{\"Text\":\" \"},{\"Text\":\" SPARA KVITTOT \"},{\"Text\":\" KUNDENS EX. \"}] ResponseContent - The Complete Nexo Response Message 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;SaleToPOIResponse&gt; &lt;MessageHeader POIID=\"AJACQH28\" SaleID=\"1\" ServiceID=\"12\" MessageType=\"Response\" MessageCategory=\"Payment\" MessageClass=\"Service\"/&gt; &lt;PaymentResponse&gt; &lt;Response Result=\"Success\"/&gt; &lt;SaleData&gt; &lt;SaleTransactionID TimeStamp=\"2023-03-16T18:01:04+01:00\" TransactionID=\"1801042\"/&gt; &lt;/SaleData&gt; &lt;POIData&gt; &lt;POITransactionID TimeStamp=\"2023-03-16T17:00:56.684Z\" TransactionID=\"8778880241\"/&gt; &lt;/POIData&gt; &lt;PaymentResult PaymentType=\"Normal\"&gt; &lt;PaymentInstrumentData PaymentInstrumentType=\"Card\"&gt; &lt;CardData EntryMode=\"ICC\" MaskedPAN=\"458109******4565\" PaymentBrand=\"01,Visa Debit\"&gt; &lt;PaymentToken TokenValue=\"6FD955BEFC750A42A6AFC46E7679ACE20E89FD18E740D3F32F97D5F2D29BA2100A8898\" TokenRequestedType=\"Customer\"/&gt; &lt;/CardData&gt; &lt;/PaymentInstrumentData&gt; &lt;AmountsResp CashBackAmount=\"0.00\" AuthorizedAmount=\"41.00\" Currency=\"SEK\"/&gt; &lt;PaymentAcquirerData AcquirerPOIID=\"877888\" MerchantID=\"10020001\"&gt; &lt;ApprovalCode&gt;942932&lt;/ApprovalCode&gt; &lt;/PaymentAcquirerData&gt; &lt;/PaymentResult&gt; &lt;PaymentReceipt DocumentQualifier=\"CashierReceipt\"&gt; &lt;OutputContent OutputFormat=\"Text\"&gt; &lt;OutputText&gt;eyJNZXJjaGFudCI6eyJNYW5kYXRvcnkiOnsiQWNxdWlyZXIiOnsiQ2FyZEFjY2VwdG9yTnVtYmVyIjoiMTAwMjAwMDEiLCJUZXJtaW5hbElEIjoiODc3ODg4In0sIkNhcmRBY2NlcHRvciI6eyJBZGRyZXNzMSI6IkjDpGxsZXNrw6VyYW4gMjgiLCJCYW5rQWdlbnROYW1lIjoiYmFua3ktYmFuayIsIk5hbWUiOiJKw6Ryb2xkcyBHb29kaWVzIiwiT3JnYW5pc2F0aW9uTnVtYmVyIjoiNTU2NTY3MS02MTY1IiwiUG9zdFppcENvZGUiOiI1MDUwIiwiVG93bkNpdHkiOiJtZXJjaGFudC1CYXNlMjQtQ2l0eSJ9LCJDYXJkRGV0YWlscyI6eyJBcHBsaWNhdGlvbklkZW50aWZpZXIiOiJBMDAwMDAwMDAzMTAxMCIsIkNhcmRTY2hlbWVOYW1lIjp7IkFwcGxpY2F0aW9uTGFiZWwiOiJWaXNhIERlYml0In0sIlByaW1hcnlBY2NvdW50TnVtYmVyIjoiNDU4MTA5KioqKioqNDU2NSIsIlRlcm1pbmFsVmVyaWZpY2F0aW9uUmVzdWx0IjoiMDA4MDAwODAwMCIsIlRyYW5zYWN0aW9uU3RhdHVzSW5mb3JtYXRpb24iOiJFODAwIn0sIk91dGNvbWUiOnsiQXBwcm92YWxDb2RlIjoiOTQyOTMyIiwiQXV0aG9yaXNhdGlvblJlc3BvbmRlciI6IjkiLCJBdXRob3Jpc2F0aW9uUmVzcG9uc2VDb2RlIjoiMDAiLCJEZWJpdFN0YXR1cyI6IjAwIn0sIlBheW1lbnQiOnsiQXV0aG9yaXNhdGlvbkNoYW5uZWwiOiIxIiwiQ2FyZGhvbGRlclZlcmlmaWNhdGlvbk1ldGhvZCI6ImEiLCJDdXJyZW5jeSI6IlNFSyIsIkZpbmFuY2lhbEluc3RpdHV0aW9uIjoiU1dFIiwiUGF5bWVudEFtb3VudCI6IjQxLDAwIiwiUmVjZWlwdE51bWJlciI6Ijg3Nzg4ODAyNDEiLCJTaWduYXR1cmVCbG9jayI6ZmFsc2UsIlRvdGFsQW1vdW50IjoiNDEsMDAiLCJUcmFuc2FjdGlvblNvdXJjZSI6IkMiLCJUcmFuc2FjdGlvblR5cGUiOiIwMCJ9LCJUaW1lU3RhbXAiOnsiRGF0ZU9mUGF5bWVudCI6IjIwMjMtMDMtMTYiLCJUaW1lT2ZQYXltZW50IjoiMTg6MDEifX0sIk9wdGlvbmFsIjp7IkNhcmRBY2NlcHRvciI6eyJDb3VudHJ5TmFtZSI6Ijc1MiIsIlBob25lTnVtYmVyIjoiKzQ2ODQwNTEwMDAifSwiQ2FyZERldGFpbHMiOnsiQ2FyZFNjaGVtZU5hbWUiOnsiQXBwbGljYXRpb25MYWJlbCI6IlZpc2EgRGViaXQifX0sIlBheW1lbnQiOnsiUmVmZXJlbmNlIjoiMTgwMTA0MiJ9fX19&lt;/OutputText&gt; &lt;/OutputContent&gt; &lt;/PaymentReceipt&gt; &lt;PaymentReceipt DocumentQualifier=\"CustomerReceipt\"&gt; &lt;OutputContent OutputFormat=\"Text\"&gt; &lt;OutputText&gt;eyJDYXJkaG9sZGVyIjp7Ik1hbmRhdG9yeSI6eyJBY3F1aXJlciI6eyJDYXJkQWNjZXB0b3JOdW1iZXIiOiIxMDAyMDAwMSIsIlRlcm1pbmFsSUQiOiI4Nzc4ODgifSwiQ2FyZEFjY2VwdG9yIjp7IkFkZHJlc3MxIjoiSMOkbGxlc2vDpXJhbiAyOCIsIkJhbmtBZ2VudE5hbWUiOiJiYW5reS1iYW5rIiwiTmFtZSI6IkrDpHJvbGRzIEdvb2RpZXMiLCJPcmdhbmlzYXRpb25OdW1iZXIiOiI1NTY1NjcxLTYxNjUiLCJQb3N0WmlwQ29kZSI6IjUwNTAiLCJUb3duQ2l0eSI6Im1lcmNoYW50LUJhc2UyNC1DaXR5In0sIkNhcmREZXRhaWxzIjp7IkFwcGxpY2F0aW9uSWRlbnRpZmllciI6IkEwMDAwMDAwMDMxMDEwIiwiQ2FyZFNjaGVtZU5hbWUiOnsiQXBwbGljYXRpb25MYWJlbCI6IlZpc2EgRGViaXQifSwiUHJpbWFyeUFjY291bnROdW1iZXIiOiIqKioqKioqKioqKio0NTY1IiwiVGVybWluYWxWZXJpZmljYXRpb25SZXN1bHQiOiIwMDgwMDA4MDAwIiwiVHJhbnNhY3Rpb25TdGF0dXNJbmZvcm1hdGlvbiI6IkU4MDAifSwiT3V0Y29tZSI6eyJBcHByb3ZhbENvZGUiOiI5NDI5MzIiLCJBdXRob3Jpc2F0aW9uUmVzcG9uZGVyIjoiOSIsIkF1dGhvcmlzYXRpb25SZXNwb25zZUNvZGUiOiIwMCIsIkRlYml0U3RhdHVzIjoiMDAifSwiUGF5bWVudCI6eyJBdXRob3Jpc2F0aW9uQ2hhbm5lbCI6IjEiLCJDYXJkaG9sZGVyVmVyaWZpY2F0aW9uTWV0aG9kIjoiYSIsIkN1cnJlbmN5IjoiU0VLIiwiRmluYW5jaWFsSW5zdGl0dXRpb24iOiJTV0UiLCJQYXltZW50QW1vdW50IjoiNDEsMDAiLCJSZWNlaXB0TnVtYmVyIjoiODc3ODg4MDI0MSIsIlNpZ25hdHVyZUJsb2NrIjpmYWxzZSwiVG90YWxBbW91bnQiOiI0MSwwMCIsIlRyYW5zYWN0aW9uU291cmNlIjoiQyIsIlRyYW5zYWN0aW9uVHlwZSI6IjAwIn0sIlRpbWVTdGFtcCI6eyJEYXRlT2ZQYXltZW50IjoiMjAyMy0wMy0xNiIsIlRpbWVPZlBheW1lbnQiOiIxODowMSJ9fSwiT3B0aW9uYWwiOnsiQ2FyZEFjY2VwdG9yIjp7IkNvdW50cnlOYW1lIjoiNzUyIiwiUGhvbmVOdW1iZXIiOiIrNDY4NDA1MTAwMCJ9LCJDYXJkRGV0YWlscyI6eyJDYXJkU2NoZW1lTmFtZSI6eyJBcHBsaWNhdGlvbkxhYmVsIjoiVmlzYSBEZWJpdCJ9fSwiUGF5bWVudCI6eyJSZWZlcmVuY2UiOiIxODAxMDQyIn19fX0=&lt;/OutputText&gt; &lt;/OutputContent&gt; &lt;/PaymentReceipt&gt; &lt;/PaymentResponse&gt; &lt;/SaleToPOIResponse&gt; ReceiptBlob - Fast Forward To Well Formatted Receipt Information 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 Demo shop Kungsgatan 36 5050 merchant-Base24-City Org nr: 5565671-6165 Butiksnr.: 10020001 Termid: 877888 2023-03-16 18:01 KÖP SEK 41,00 Total: 41,00 Personlig kod ************4565 Visa Debit Ca1 9 00 942932 Ref.nr: 8778880241 AID: A0000000031010 TVR: 0080008000 TSI: E800 SPARA KVITTOT KUNDENS EX.",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/paymentasync.html"
  },{
    "title": "Payout",
    "text": "Introduction At the moment, our payout offering consists of Trustly Payout only, but this may be expanding going forward. There are two alternatives for implementing Trustly Payout. Select Account and Register Account. Both alternatives consist of two parts, a setup and a server-to-server call which actually triggers the payout. The setup procedures of the two options differ somewhat, so we will describe them separately. The actual payout procedure is the same, and will be described as one. Select Account Select Account should be used for all consumers who will need to pick their payout account. The initial setup handles the UI part where the payer chooses their bank account. This endpoint will return a token that can be used to represent that bank account for that payer. The second part is, as mentioned before, a server-to-server endpoint where the actual payout is triggered. This lets you reuse the token multiple times if that is desired. Select Account Setup The initial setup can be done at an earlier time than the actual payout. The payer initiates the payout process on your site. You will have to initiate a PaymentOrder towards Swedbank Pay to start the payout process. It is important to set “operation=Verify”, generateUnscheduledToken=true and restrictedToPayoutInstruments=true. The response will include an operation with a rel:redirect-checkout or a rel:view-checkout. This is where you need to redirect the payer, or display in your UI, to let them choose their bank account. Redirect payer’s browser to redirect-paymentmenu or display the rel:view-checkout. The Swedbank Pay payment UI will be loaded in Payout mode. The only option for the payer is to choose Trustly, as this is the only available payout alternative to date. The payer’s browser will be redirected to Trustly. The payer will identify themselves by BankId and choose the bank account where they want to receive the money. The payer is then redirected back to Swedbank Pay. Swedbank Pay will validate that we have received the bank account information before showing the OK message. The payer is redirected back to the completeUrl provided in the initial call. The payer’s browser is connected to the completeUrl. You then need to do a GET to check the status of the payout. You will receive a PaymentOrder response model. You can check that the status is set to Paid. If the PaymentOrder is aborted or failed, something went wrong and the attempt was unsuccessful. You will get the UnscheduledToken in the model’s paid node. Return status to the payer about the status. Register Account Register Account should be used for payouts to other business entities. This implementation requires that you already have all account information for the receiving payout account. There is no interaction needed by the receiving part in this flow. Register Account Setup You or the customer will trigger the payout process. You will have to initiate a PaymentOrder towards Swedbank Pay to start the payout process. It is important to set operation=Verify, generateUnscheduledToken=true, restrictedToPayoutInstruments=true. The response will include an operation with a rel:verify-trustly. This is where you need to do a call to register the bank account. Do a call to the verify-trustly endpoint to register the bank account details. The response will have status=Paid if everything is completed. The unscheduledToken will be provided in the response model’s Paid node. If desired, you can notify the payer that the bank account is registered. The Server-To-Server Payout Call When it is time to do a payout, you must initiate a new payment order. This time there is no interaction with the payer, so it will be handled as a server-to-server call. You must set operation=Payout and unscheduledToken=&lt;token&gt;. It is also important to include a callbackUrl as this call is async and will use callbacks to communicate status changes. Swedbank Pay will initiate the payout process against Trustly. You will get a response that the PaymentOrder is initialized. The reason for this is that it takes some time before the payout is completed. If you wish, you can now communicate to the payer that the payout is registered, but not finished. It will take some time before a payout is either OK or Failed. There can also be edge cases where the payout will get the Paid status first, and changed to failed later. It is important to design the system to handle these scenarios. If the payout is complete the following flow will happen: You will get a callback. You will need to answer the callback with an acknowledge message. You need to do a GET on the PaymentOrder to check the status. It must have status=Paid if the payout was successful. You can now inform the payer that the payout was successful. If something failed in the payout process this flow will happen. If the payout failed, you will get a callback. You will need to answer the callback with an acknowledge message. You need to do a GET on the PaymentOrder to check the status. It will have status=Aborted if the payout failed. You can now inform the payer that the payout has failed and that you will try to do the payout again. Verify Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Verify\", \"productName\": \"Checkout3\", \"currency\": \"SEK\", \"restrictedToPayoutInstruments\": true, \"generateUnscheduledToken\": true, \"description\": \"Bank account verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"http://testmerchant.url\"], \"completeUrl\": \"http://complete.url\", \"cancelUrl\": \"http://cancel.url\" }, \"payeeInfo\": { \"payeeId\": \"\", \"payeeReference\": \"\", \"payeeName\": \"Testmerchant\" }, \"payer\": { \"payerReference\": \"\", \"firstName\": \"Example\", \"lastName\": \"Name\", \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" }, \"email\": \"test@payex.com\", \"msisdn\": \"+46709876543\", \"address\": { \"streetAddress\": \"Main Street 1\", \"coAddress\": \"Apartment 123, 2 stairs up\", \"city\": \"Stockholm\", \"zipCode\": \"SE-11253\", \"countryCode\": \"SE\" } } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Must be set to Verify . check productName string Must be set to Checkout3 . check currency string The currency of the payment.   restrictedToInstruments bool Set to true to only show Payout enabled instruments (Trustly).   generateUnscheduledToken bool Set to true. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. Not needed to implement the Swedbank Pay redirect flow. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string The merchant’s unique reference to the payer.   firstName string The first name of the payer.   lastName string The last name of the payer.   nationalIdentifier object The national identifier object. This is required when using the restrictedToSocialSecurityNumber parameter. check socialSecurityNumber string The payer’s social security number.   countryCode string Country code of the payer.   email string The e-mail address of the payer.   msisdn string The mobile phone number of the Payer. The mobile number must have a country code prefix and be 8 to 15 digits in length.   address object The address object containing information about the payer’s address. ︎ streetAddress string The street address of the payer. Maximum 50 characters long.   coAddress string The payer’s CO-address (if used).   city string The payer’s city of residence.   zipCode string The postal number (ZIP code) of the payer.   countryCode string Country code for country of residence, e.g. SE, NO, or FI. Verify Response Note the new operation verify-trustly, which is available if it is activated in the merchant’s contract and the payer’s first and last name is added in the request. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"created\": \"2023-06-09T07:26:27.3013437Z\", \"updated\": \"2023-06-09T07:26:28.6979343Z\", \"operation\": \"Verify\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 510, \"vatAmount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.2\", \"language\": \"nb-NO\", \"availableInstruments\": [ \"Trustly\" ], \"implementation\": \"PaymentsOnly\", \"integration\": \"\", \"instrumentMode\": false, \"guestMode\": false, \"urls\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"rel\": \"update-order\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"rel\": \"abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/core/client/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?culture=nb-NO&amp;_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"rel\": \"verify-trustly\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Verify status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. PATCH Verify Request The PATCH request towards the verify-trustly operation, containing the bank account details. 1 2 3 4 5 6 7 8 9 10 11 12 13 PATCH /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"VerifyTrustly\", \"clearingHouse\": \"SWEDEN\", \"bankNumber\": \"6112\", \"accountNumber\": \"69706212\" } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. operation string Determines the initial operation, defining the type of payment order created. clearingHouse string The clearing house of the recipient’s bank account. Typically the name of a country in uppercase letters. bankNumber string The bank number identifying the recipient’s bank in the given clearing house. For bank accounts in IBAN format you should just provide an empty string (“”). For non-IBAN, see the example in our request or the bank number format table. accountNumber string The account number, identifying the recipient’s account in the bank. Can be either IBAN or country-specific format. See the account number format table for further information. PATCH Verify Response Note that the status in the response has changed to Paid, with the correlating disappearance of PATCH operations. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/&lt;id&gt;\", \"created\": \"2023-07-06T05:42:07.7531238Z\", \"updated\": \"2023-07-06T05:42:14.6086749Z\", \"operation\": \"Verify\", \"status\": \"Paid\", \"currency\": \"SEK\", \"amount\": 510, \"vatAmount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.3\", \"language\": \"nb-NO\", \"availableInstruments\": [ \"Trustly\" ], \"implementation\": \"Enterprise\", \"integration\": \"Direct\", \"instrumentMode\": false, \"guestMode\": true, \"urls\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/metadata\" } }, \"operations\": \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/core/client/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?culture=nb-NO&amp;_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Verify status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. Payout Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Payout\", \"productName\": \"Checkout3\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"unscheduledToken\": \"\", \"description\": \"Bank account verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"callbackUrl\": \"http://callback.url\" }, \"payeeInfo\": { \"payeeId\": \"\", \"payeeReference\": \"\", \"payeeName\": \"Testmerchant\" }, \"payer\": { \"payerReference\": \"\" } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Must be set to Payout . check productName string Must be set to Checkout3 . check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   unscheduledToken string Must be provided to specify the consumer account to be the receiver of the payout. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check urls object The urls object, containing the URLs relevant for the payment order. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string The merchant’s unique reference to the payer. Payout Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08\", \"created\": \"2023-06-09T07:35:35.1855792Z\", \"updated\": \"2023-06-09T07:35:35.6863019Z\", \"operation\": \"Payout\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 2147483647, \"vatAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.2\", \"language\": \"sv-SE\", \"availableInstruments\": [], \"implementation\": \"PaymentsOnly\", \"integration\": \"\", \"instrumentMode\": false, \"guestMode\": true, \"orderItems\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/payeeinfo\" }, \"history\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/metadata\" } }, \"operations\": [] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET Payment Order A GET performed after the callback is received on a paymentOrder with status Paid. A field called trustlyOrderId will appear among the details in the Paid node. This can be used for support correspondance. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08\", \"created\": \"2023-06-09T07:38:08.5041489Z\", \"updated\": \"2023-06-09T07:38:25.3627725Z\", \"operation\": \"Payout\", \"status\": \"Paid\", \"currency\": \"SEK\", \"amount\": 1000, \"vatAmount\": 0, \"remainingReversalAmount\": 1000, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.2\", \"language\": \"sv-SE\", \"availableInstruments\": [], \"implementation\": \"PaymentsOnly\", \"integration\": \"\", \"instrumentMode\": false, \"guestMode\": true, \"urls\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/urls\", \"callbackUrl\": \"http://test-dummy.net/payment-callback\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/payeeinfo\" }, \"history\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/paid\" \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"tokens\": [ { \"type\": \"Unscheduled\", \"token\": \"6d495aac-cb2b-4d94-a5f1-577baa143f2c\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 123456789 } }, \"cancelled\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/metadata\" } }, \"operations\": [] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. details integer Details connected to the payment. trustlyOrderId string A Trustly specific order id meant to be use if there is a support case. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. Select Account Flow Register Account Flow (https://eu.developers.trustly.com/doc/reference/registeraccount#accountnumber-format)",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/payout.html"
  },{
    "title": "Payout",
    "text": "Introduction At the moment, our payout offering consists of Trustly Payout only, but this may be expanding going forward. There are two alternatives for implementing Trustly Payout. Select Account and Register Account. Both alternatives consist of two parts, a setup and a server-to-server call which actually triggers the payout. The setup procedures of the two options differ somewhat, so we will describe them separately. The actual payout procedure is the same, and will be described as one. Select Account Select Account should be used for all consumers who will need to pick their payout account. The initial setup handles the UI part where the payer chooses their bank account. This endpoint will return a token that can be used to represent that bank account for that payer. The second part is, as mentioned before, a server-to-server endpoint where the actual payout is triggered. This lets you reuse the token multiple times if that is desired. Select Account Setup The initial setup can be done at an earlier time than the actual payout. The payer initiates the payout process on your site. You will have to initiate a PaymentOrder towards Swedbank Pay to start the payout process. It is important to set “operation=Verify”, generateUnscheduledToken=true and restrictedToPayoutInstruments=true. The response will include an operation with a rel:redirect-checkout or a rel:view-checkout. This is where you need to redirect the payer, or display in your UI, to let them choose their bank account. Redirect payer’s browser to redirect-paymentmenu or display the rel:view-checkout. The Swedbank Pay payment UI will be loaded in Payout mode. The only option for the payer is to choose Trustly, as this is the only available payout alternative to date. The payer’s browser will be redirected to Trustly. The payer will identify themselves by BankId and choose the bank account where they want to receive the money. The payer is then redirected back to Swedbank Pay. Swedbank Pay will validate that we have received the bank account information before showing the OK message. The payer is redirected back to the completeUrl provided in the initial call. The payer’s browser is connected to the completeUrl. You then need to do a GET to check the status of the payout. You will receive a PaymentOrder response model. You can check that the status is set to Paid. If the PaymentOrder is aborted or failed, something went wrong and the attempt was unsuccessful. You will get the UnscheduledToken in the model’s paid node. Return status to the payer about the status. Register Account Register Account should be used for payouts to other business entities. This implementation requires that you already have all account information for the receiving payout account. There is no interaction needed by the receiving part in this flow. Register Account Setup You or the customer will trigger the payout process. You will have to initiate a PaymentOrder towards Swedbank Pay to start the payout process. It is important to set operation=Verify, generateUnscheduledToken=true, restrictedToPayoutInstruments=true. The response will include an operation with a rel:verify-trustly. This is where you need to do a call to register the bank account. Do a call to the verify-trustly endpoint to register the bank account details. The response will have status=Paid if everything is completed. The unscheduledToken will be provided in the response model’s Paid node. If desired, you can notify the payer that the bank account is registered. The Server-To-Server Payout Call When it is time to do a payout, you must initiate a new payment order. This time there is no interaction with the payer, so it will be handled as a server-to-server call. You must set operation=Payout and unscheduledToken=&lt;token&gt;. It is also important to include a callbackUrl as this call is async and will use callbacks to communicate status changes. Swedbank Pay will initiate the payout process against Trustly. You will get a response that the PaymentOrder is initialized. The reason for this is that it takes some time before the payout is completed. If you wish, you can now communicate to the payer that the payout is registered, but not finished. It will take some time before a payout is either OK or Failed. There can also be edge cases where the payout will get the Paid status first, and changed to failed later. It is important to design the system to handle these scenarios. If the payout is complete the following flow will happen: You will get a callback. You will need to answer the callback with an acknowledge message. You need to do a GET on the PaymentOrder to check the status. It must have status=Paid if the payout was successful. You can now inform the payer that the payout was successful. If something failed in the payout process this flow will happen. If the payout failed, you will get a callback. You will need to answer the callback with an acknowledge message. You need to do a GET on the PaymentOrder to check the status. It will have status=Aborted if the payout failed. You can now inform the payer that the payout has failed and that you will try to do the payout again. Verify Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Verify\", \"productName\": \"Checkout3\", \"currency\": \"SEK\", \"restrictedToPayoutInstruments\": true, \"generateUnscheduledToken\": true, \"description\": \"Bank account verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"http://testmerchant.url\"], \"completeUrl\": \"http://complete.url\", \"cancelUrl\": \"http://cancel.url\" }, \"payeeInfo\": { \"payeeId\": \"\", \"payeeReference\": \"\", \"payeeName\": \"Testmerchant\" }, \"payer\": { \"payerReference\": \"\", \"firstName\": \"Example\", \"lastName\": \"Name\", \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" }, \"email\": \"test@payex.com\", \"msisdn\": \"+46709876543\", \"address\": { \"streetAddress\": \"Main Street 1\", \"coAddress\": \"Apartment 123, 2 stairs up\", \"city\": \"Stockholm\", \"zipCode\": \"SE-11253\", \"countryCode\": \"SE\" } } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Must be set to Verify . check productName string Must be set to Checkout3 . check currency string The currency of the payment.   restrictedToInstruments bool Set to true to only show Payout enabled instruments (Trustly).   generateUnscheduledToken bool Set to true. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. Not needed to implement the Swedbank Pay redirect flow. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string The merchant’s unique reference to the payer.   firstName string The first name of the payer.   lastName string The last name of the payer.   nationalIdentifier object The national identifier object. This is required when using the restrictedToSocialSecurityNumber parameter. check socialSecurityNumber string The payer’s social security number.   countryCode string Country code of the payer.   email string The e-mail address of the payer.   msisdn string The mobile phone number of the Payer. The mobile number must have a country code prefix and be 8 to 15 digits in length.   address object The address object containing information about the payer’s address. ︎ streetAddress string The street address of the payer. Maximum 50 characters long.   coAddress string The payer’s CO-address (if used).   city string The payer’s city of residence.   zipCode string The postal number (ZIP code) of the payer.   countryCode string Country code for country of residence, e.g. SE, NO, or FI. Verify Response Note the new operation verify-trustly, which is available if it is activated in the merchant’s contract and the payer’s first and last name is added in the request. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"created\": \"2023-06-09T07:26:27.3013437Z\", \"updated\": \"2023-06-09T07:26:28.6979343Z\", \"operation\": \"Verify\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 510, \"vatAmount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.2\", \"language\": \"nb-NO\", \"availableInstruments\": [ \"Trustly\" ], \"implementation\": \"PaymentsOnly\", \"integration\": \"\", \"instrumentMode\": false, \"guestMode\": false, \"urls\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"rel\": \"update-order\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"rel\": \"abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/core/client/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?culture=nb-NO&amp;_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/b60d08b8-0509-4abf-a722-08db68bad644\", \"rel\": \"verify-trustly\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Verify status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. PATCH Verify Request The PATCH request towards the verify-trustly operation, containing the bank account details. 1 2 3 4 5 6 7 8 9 10 11 12 13 PATCH /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"VerifyTrustly\", \"clearingHouse\": \"SWEDEN\", \"bankNumber\": \"6112\", \"accountNumber\": \"69706212\" } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. operation string Determines the initial operation, defining the type of payment order created. clearingHouse string The clearing house of the recipient’s bank account. Typically the name of a country in uppercase letters. bankNumber string The bank number identifying the recipient’s bank in the given clearing house. For bank accounts in IBAN format you should just provide an empty string (“”). For non-IBAN, see the example in our request or the bank number format table. accountNumber string The account number, identifying the recipient’s account in the bank. Can be either IBAN or country-specific format. See the account number format table for further information. PATCH Verify Response Note that the status in the response has changed to Paid, with the correlating disappearance of PATCH operations. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/&lt;id&gt;\", \"created\": \"2023-07-06T05:42:07.7531238Z\", \"updated\": \"2023-07-06T05:42:14.6086749Z\", \"operation\": \"Verify\", \"status\": \"Paid\", \"currency\": \"SEK\", \"amount\": 510, \"vatAmount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.3\", \"language\": \"nb-NO\", \"availableInstruments\": [ \"Trustly\" ], \"implementation\": \"Enterprise\", \"integration\": \"Direct\", \"instrumentMode\": false, \"guestMode\": true, \"urls\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/1e7e8e00-dc76-4ea5-0d7d-08db7c962a83/metadata\" } }, \"operations\": \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.stage.payex.com/checkout/core/client/checkout/a8ff4fa9821b500dbb657bcba68422e20b9ba8dd2652bbc3f0f456b93774023f?culture=nb-NO&amp;_tc_tid=96f4d7cef4984a84b380e5478b7f6632\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Verify status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. Payout Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Payout\", \"productName\": \"Checkout3\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"unscheduledToken\": \"\", \"description\": \"Bank account verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"callbackUrl\": \"http://callback.url\" }, \"payeeInfo\": { \"payeeId\": \"\", \"payeeReference\": \"\", \"payeeName\": \"Testmerchant\" }, \"payer\": { \"payerReference\": \"\" } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Must be set to Payout . check productName string Must be set to Checkout3 . check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   unscheduledToken string Must be provided to specify the consumer account to be the receiver of the payout. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check urls object The urls object, containing the URLs relevant for the payment order. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   payer object The payer object containing information about the payer relevant for the payment order.   payerReference string The merchant’s unique reference to the payer. Payout Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08\", \"created\": \"2023-06-09T07:35:35.1855792Z\", \"updated\": \"2023-06-09T07:35:35.6863019Z\", \"operation\": \"Payout\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 2147483647, \"vatAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.2\", \"language\": \"sv-SE\", \"availableInstruments\": [], \"implementation\": \"PaymentsOnly\", \"integration\": \"\", \"instrumentMode\": false, \"guestMode\": true, \"orderItems\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/payeeinfo\" }, \"history\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/f4e47e61-37a5-4281-a5f3-08db68bc1d08/metadata\" } }, \"operations\": [] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET Payment Order A GET performed after the callback is received on a paymentOrder with status Paid. A field called trustlyOrderId will appear among the details in the Paid node. This can be used for support correspondance. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08\", \"created\": \"2023-06-09T07:38:08.5041489Z\", \"updated\": \"2023-06-09T07:38:25.3627725Z\", \"operation\": \"Payout\", \"status\": \"Paid\", \"currency\": \"SEK\", \"amount\": 1000, \"vatAmount\": 0, \"remainingReversalAmount\": 1000, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"PostmanRuntime/7.32.2\", \"language\": \"sv-SE\", \"availableInstruments\": [], \"implementation\": \"PaymentsOnly\", \"integration\": \"\", \"instrumentMode\": false, \"guestMode\": true, \"urls\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/urls\", \"callbackUrl\": \"http://test-dummy.net/payment-callback\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/payeeinfo\" }, \"history\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/paid\" \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"tokens\": [ { \"type\": \"Unscheduled\", \"token\": \"6d495aac-cb2b-4d94-a5f1-577baa143f2c\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 123456789 } }, \"cancelled\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/3c265183-e7ee-438b-a5f4-08db68bc1d08/metadata\" } }, \"operations\": [] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payer string The URL to the payer resource where information about the payer can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. details integer Details connected to the payment. trustlyOrderId string A Trustly specific order id meant to be use if there is a support case. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. Select Account Flow Register Account Flow (https://eu.developers.trustly.com/doc/reference/registeraccount#accountnumber-format)",
    "tags": "",
    "url": "/checkout-v3/features/optional/payout.html"
  },{
    "title": "Plain Webview",
    "text": "Quick Fix List Here is a list of common gotchas. Please read through the whole document, though. On Android, you need to set webView.settings.javaScriptEnabled = true On Android, you need to set webView.settings.domStorageEnabled = true (used by some 3D-Secure pages) Web Views will not launch apps by themselves. You must intercept navigations and launch apps yourself. See External Applications for details. On Android, @JavascriptInterface methods only take primitive arguments. You will need to JSON.stringify any complex arguments. Some 3D-Secure pages will not work if you open them in a Web View. This appears to be related to them launching an external application, which, in turn, opens a url in the browser app. See Dealing with Picky Web Pages for strategies. Some pages make use of Javascript dialogs. Web Views do not display these on their own; you must add support by your WebCromeClient or WKUIDelegate. On Android, remember to call webView.onResume() and webView.onPause(). Remember that you can debug Web View contents! The Mobile SDK And You A major goal for the Mobile SDK is to provide a platform where you can start developing your mobile e-commerce application rapidly, in a regular, native mobile application development workflow. Hence, it is designed to be a fairly self-contained whole, with a prescribed interface between the mobile client side and the backend server side. This, of course, means that to use the SDK, your backend must integrate with the SDK architecture. If you already have a working solution for web pages, this may not be ideal; indeed, you may wish to reuse your existing web page using Checkout or Payments, and expect to embed it inside your mobile application using a web view. Indeed, on a high level this is what the SDK mobile client components do, in addition to providing native Swift and Kotlin APIs to the servie. The SDK internally generates a web page that shows the Checkout payment menu, so the developer need not concern themselves with html or other web-specific technologies. An exisiting web implementation would not really benefit from the extra discoverability and quality-of-life improvements of a mobile-native API, so the SDK’s value proposition seems to be little benefit for substantial reimplementation work. That said, there are important considerations in embedding a Swedbank-Pay-enabled web page in a web view; considerations, which have been taken into account in the development of the SDK. There are currently no plans to offer any first-party components to help with embedding an existing Swedbank Pay web page, but this page shall serve as best-effort documentation for anyone attempting such. Basics Let us assume that the urls of the payment are as follows: https://example.com/perform-payment is the page containing the Payment Menu or Payment Seamless View, i.e. the paymentUrl https://example.com/payment-completed is the completeUrl https://example.com/payment-cancelled is the cancelUrl Swedbank Pay payments use JavaScript, so that needs to be enabled: iOS 1 2 3 4 5 6 7 8 9 10 11 // WKPreferences.javaScriptEnabled is true by default, // so usually there is no need to to do this. // Other properties of WKWebViewConfiguration will be // needed for later steps, though, so it is good to have // it from the beginning. let configuration = WKWebViewConfiguration() configuration.preferences.javaScriptEnabled = true // Note: You can only set a configuration by using this initializer. // You cannot set a configuration in Interface Builder. let webView = WKWebView(frame: .zero, configuration: configuration) Android 1 2 3 4 5 6 7 val webView = WebView(context) // or get it from a layout // WebSettings.javaScriptEnabled is false by default, // so failing to do this will result in the payment page not working. // Setting javaScriptEnabled to true causes a linter warning, // which can be suppressed with an annotation. webView.settings.javaScriptEnabled = true Some pages use the DOM Storage API, which must be enabled separately on Android: Android 1 webView.settings.domStorageEnabled = true With this setup, you can load to the web view the page that shows the Payment Menu or the Payment Seamless View, and see what happens. You should be able to see the Swedbank Pay payment interface, and in many cases also complete a payment. It is not unlikely, though, that some payment methods will not work as expected. Also, you will be more or less stuck after the payment is complete. iOS 1 2 let paymentUrl = URL(string: \"https://example.com/perform-payment\")! webView.load(URLRequest(url: paymentUrl)) Android 1 webView.loadUrl(\"https://example.com/perform-payment\") Completion There are two ways of being notified of payment completion: listening for navigations, or using JavaScript hooks. Which one you want to use is partly a matter of taste, but if your existing system does some processing in the completeUrl page, it may be easier to use JavaScript hooks. Listening for Navigations The iOS WKNavigationDelegate protocol and Android WebViewClient class can be used to listen for navigations, and change their behavior. iOS 1 2 3 // This example uses Self as the delegate. // It could be a separate object also. webView.navigationDelegate = self 1 2 3 extension MyClass : WKNavigationDelegate { // WKNavigationDelegate methods } Android 1 2 3 webView.webViewClient = object : WebViewClient() { // WebViewClient methods } In the simplest case you could listen for a navigation to the completeUrl or cancelUrl, and intercept it. iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 func webView( _ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, decisionHandler: @escaping (WKNavigationActionPolicy) -&gt; Void ) { switch navigationAction.request.url?.absoluteString { case \"https://example.com/payment-completed\": decisionHandler(.cancel) // Handle payment completion (success/failure) case \"https://example.com/payment-cancelled\": decisionHandler(.cancel) // Handle payment cancellation default: decisionHandler(.allow) } } Android 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 override fun shouldOverrideUrlLoading( view: WebView?, url: String? ): Boolean { return when (url) { \"https://example.com/payment-completed\" -&gt; { // Handle payment completion (success/failure) true } \"https://example.com/payment-cancelled\" -&gt; { // Handle payment cancellation true } else -&gt; false } } If your completeUrl, or cancelUrl for that matter, do some processing and redirect further, you can adapt these patterns to listen to your custom urls instead. Adding JavaScript Hooks On both iOS and Android, it is possible to add custom JavaScript interfaces to a web view. These interfaces then result in callbacks to native (Swift/Kotlin/ObjC/Java) methods, where you can execute your application specific actions. To observe payment completion and cancellation this way, you need to modify your completeUrl and cancelUrl pages to call these mobile-app-specific JavaScript interfaces. How you do this is beyond our scope here. JavaScript Hooks: iOS On iOS, JavaScript interfaces are added through the WKUserContentController of the WKWebView. The WKUserContentController is set by the WKWebViewConfiguration used when creating the WKWebView; you cannot change the WKUserContentController of a WKWebView. You can, however, modify the WKUserContentController of a live WKWebView, if you want more fine-grained control on which interfaces are exposed at what time. iOS 1 2 3 4 5 6 7 8 9 10 11 let userContentController = webView .configuration .userContentController // Alternatively, add the script message handler(s) // to configuration.userContentController // before creating the WKWebView. // This example uses Self as the handler. // It could be a separate object also. userContentController.add(self, name: \"completed\") userContentController.add(self, name: \"cancelled\") 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 extension MyClass : WKScriptMessageHandler { func userContentController( _ userContentController: WKUserContentController, didReceive message: WKScriptMessage ) { switch message.name { case \"completed\": // Handle payment completion (success/failure) case \"cancelled\": // Handle payment cancellation } // the argument of the call is available at message.body } } On iOS, the interfaces added by WKUserContentController.add(_:name:) are exposed in JavaScript as window.webkit.messageHandlers.&lt;name&gt;.postMessage(body), so your completeUrl and cancelUrl pages would need to eventually execute code like 1 window.webkit.messageHandlers.completed.postMessage(\"success\") 1 window.webkit.messageHandlers.cancelled.postMessage() JavaScript Hooks: Android warning Security Warning: Never use WebView.addJavascriptInterface on Android versions earlier than 4.2 (Build.VERSION_CODES.JELLY_BEAN_MR1)! On Android, JavaScript interfaces are added by the WebView.addJavascriptInterface method. Any public methods with the @JavascriptInterface annotation of the passed-in object are exposed in JavaScript. Android 1 2 3 4 webView.addJavascriptInterface( MyJsInterface(), \"callbacks\" ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class MyJsInterface { // IMPORTANT! // Methods annotated with @JavascriptInterface are // NOT called on the main thread. They are called on // a private, background, WebView thread. // Make sure to only call methods that are safe // to call in a background thread, or move execution to // the main thread, e.g. by ViewModel.viewModelScope // or LifecycleOwner.lifecycleScope (remember that // FragmentActivity and Fragment implement LifecycleOwner). @JavascriptInterface fun completed(status: String) { // Handle payment completion (success/failure) } @JavascriptInterface fun cancelled() { // Handle payment cancellation } } On Android, the objects added by WebView.addJavascriptInterface are exposed as globals with the specified name, and their @JavascriptInterface public methods with their JVM names (N.B! Be careful not to break the JVM names with Proguard or similar). Thus, your completeUrl and cancelUrl pages would need to eventually execute code like 1 callbacks.completed(\"success\") 1 callbacks.cancelled() External Applications Before starting to implement lauching external applications, you should try to get at least one card payment working. With completion observing in place, you should be able to complete a payment flow, at least using the External Integration environment and its test cards. Sometimes, a payment flow calls for launching an external application, like BankID or Swish. A web page does this by opening a url that is handled by the app in question. To accommodate for this, we extend the “Listening for Navigations” approach above. If you opted for JavaScript hooks for completion, you will now need to add a navigation listener for external apps. Determining whether a url should launch an external app is straightforward, though on Android it involves a bit of a judgement call. Let us take a look at the arguably simpler iOS case first. External Applications: iOS You cannot query the system for an arbitrary url to see if it can be opened – this is a deliberate privacy measure. What can be done, and what also happens to be exactly what we want to do, is to attempt to open a url and receive a callback telling us whether it succeeded. Nowadays, the recommended way of opening external applications is to use Universal Links, anyway, which are, on the surface, indistiguishable from web links. iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 func webView( _ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, decisionHandler: @escaping (WKNavigationActionPolicy) -&gt; Void ) { // Check for completeUrl and cancelUrl here, if applicable. if let url = navigationAction.request.url { openInExternalApp( url: url, decisionHandler: decisionHandler ) } else { // N.B. This should never happen. decisionHandler(.allow) } } private func openInExternalApp( url: URL, decisionHandler: @escaping (WKNavigationActionPolicy) -&gt; Void ) { // First, check for universal link UIApplication.shared.open( url, options: [.universalLinksOnly: true] ) { universalLinkOpened in if universalLinkOpened { // Url was opened in external app, so do not open it in WKWebView. decisionHandler(.cancel) } else { // Url was not opened in external app, see if WKWebView can handle it. if let scheme = url.scheme, WKWebView.handlesURLScheme(scheme) { // Regular http(s) url, proceed. decisionHandler(.allow) } else { // Custom-scheme url. Try to open it. UIApplication.shared.open(url) // Cancel the navigation regardless of the result, // as WKWebView does not know what to do with the url anyway. decisionHandler(.cancel) } } } } External Applications: Android On Android, web pages attempting to launch external apps happens in one of three ways: Custom-scheme links Http(s) links matching a pattern Intent-scheme links Each of these maps into an Intent. For custom-scheme and patterned http(s) links, that Intent has the original url as its uri, an action of android.intent.action.VIEW, and the categories android.intent.category.BROWSABLE and android.intent.category.DEFAULT. An Intent created from an intent-scheme url can have any action and categories, although they too should have an implicit android.intent.category.BROWSABLE category. Their uri is parsed from the intent-scheme url, but we need not trouble ourselves with the specifics here. When the WebView navigates to a new page, your app should check if the page url should launch an app instead. The custom-scheme and intent-scheme cases are simple: try to start an Activity with the Intent parsed from the url as described above. If that fails (by throwing an ActivityNotFoundException), then a suitable app was not installed. If the navigation was to an intent-scheme url, that url may contain a fallback url that can be substituted. Otherwise, there is little your app can do beyond notifying the user about the missing app. When the WebView navigates to an http(s) url, your app should not simply start an Activity with the url, as that would usually mean opening the url in the browser. Instead, the Activity should only be started if it is not a browser. Since Android 11 there is an Intent flag that does exactly that. On earlier versions, your app must first query the system about which app would be launched. Because of privacy enhancements in Android 11, it is not possible to use this method on Android 11; you must use the non-browser flag instead. Android 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 override fun shouldOverrideUrlLoading( view: WebView?, url: String? ): Boolean { // Check for completeUrl and cancelUrl here, if applicable. if (url == null) return false // should never happen val uri = Uri.parse(url) if (openInExternalApp(uri)) { return true } else { // uri was not opened in a external app. // Let WebView take care of it, if it is // a normal http(s) url. return when (uri.scheme) { \"http\", \"https\" -&gt; false else -&gt; true } } } private fun openInExternalApp(uri: Uri): Boolean { try { // Create an Intent from the Uri. val intent = Intent.parseUri( uri.toString(), Intent.URI_INTENT_SCHEME ) // Web pages should only be allowed to start activities // with CATEGORY_BROWSABLE. intent.addCategory(Intent.CATEGORY_BROWSABLE) // Only start an Activiy if it is not a browser if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) { intent.addFlags(Intent.FLAG_ACTIVITY_REQUIRE_NON_BROWSER) } else { legacyRequireNonBrowser(intent) } startActivity(intent) return true } catch (_: URISyntaxException) { return false } catch (_: ActivityNotFoundException) { return false } } private fun legacyRequireNonBrowser(intent: Intent) { // For Android &lt; 11, need to simulate FLAG_ACTIVITY_REQUIRE_NON_BROWSER. // This is just one way of doing it. val scheme = intent.scheme if (scheme == \"http\" || scheme == \"https\") { // Resolve the Intent. If null, then we don't have the app installed. val resolveInfo = packageManager.resolveActivity( intent, PackageManager.MATCH_DEFAULT_ONLY ) ?: throw ActivityNotFoundException() // Using \"host\" match category as a heuristic here. // An app that handles http(s) uris for any host is more than likely a browser. // Could use e.g. a list of package ids instead. val matchCategory = resolveInfo.match and IntentFilter.MATCH_CATEGORY_MASK if (matchCategory &lt; IntentFilter.MATCH_CATEGORY_HOST) { throw ActivityNotFoundException() } } } Getting Back from External Applications In some cases on Android, getting back from the external application requires no further setup. In particular, this is the case with BankID, if the web page launches it in the recommended manner. In other cases, including any scenario on iOS, the external app will attempt to return to the payment by opening the paymentUrl. Assuming the paymentUrl is an https url, it would normally be opened in the browser application (usually Safari or Chrome), so we need to build a system that gets it back to the application where the payment is being processed in a web view. Using a Custom-Scheme paymentUrl Perhaps the simplest way of making paymentUrl open in the application is to make it a custom-scheme url rather than an https url. This does come with a few disadvantages, though: On iOS, the system will show a confirmation popup, which cannot be customized, before opening a custom-scheme url Related to the above, there is no way of making sure your application is the only one installed that handles the scheme paymentUrl is passed to systems outside Swedbank Pay; systems that may only be compatible with http(s) urls It is somewhat of a Quick and Dirty solution. We do not recommend this approach. iOS: Make paymentUrl A Universal Link On iOS, the recommended way of assigning urls to apps is to use Universal Links. This fits our use-case quite well, and indeed it is what the SDK is designed to do too. When an external app executes the UIApplication.shared.open(\"https://example.com/perform-payment\"), then, assuming Universal Links are configured correctly, that url will not be opened in Safari, but will instead be opened in the application. You must then examine the url, determine that it is a paymentUrl from your app, and reload the paymentUrl in your web view. The payment process should then continue normally. Make sure that any navigation listeners and JavaScript hooks are in place before loading the paymentUrl. Now, Universal Links depend on correct configuration, and during development you may find yourself with a broken configuration from time to time. But perhaps even more importantly, Universal Links cannot really be 100% guaranteed to work every time. Please see the iOS SDK documentation for some discussion, but also note that even with correct configuration, the system could fail to retrieve your apple-app-site-association file for any given installation, which could render your universal links temporarily inoperable on that device. This means that your paymentUrl needs to show some sensible content in case it is opened in Safari. There are a few ways of going at this, but one possibility, assuming you have a working implementation for web in place, is to show your regular payment page, allow the payment to complete there, and then try to launch your application, perhaps by a custom-scheme url, or a universal link to a separate domain. Take a look at what the SDK does to not be trapped by unhappy circumstances. Note that the Universal Links documentation is not explicit on which UIApplicationDelegate method is called when an application opens a universal link with UIApplication.open(_:options:completionHandler:) (i.e. application(_:open:options:) or application(_:continue:restorationHandler:)). It is probably best to implement both. Universal Links opened from Safari will callback to application(_:continue:restorationHandler:). Android: Add An Intent Filter For The PaymentUrl Android has always supported apps handling urls matching a pattern. Therefore, it seems sensible to just create an intent filter matching any paymentUrl you might create. As paymentUrls are entirely under your control, you can design a system where they fit a pattern that can be realized as an intent filter. You then receive the url in the relevant app component in the normal manner, and proceed to reload the paymentUrl in your web view. The payment process will then continue normally. The downsides of this are: You are restricted in how you can change the way you form paymentUrls There are other apps that can also handle the paymentUrl, namely the browser Because of the latter, when an external application opens paymentUrl, there are three things that can happen: paymentUrl is opened in your app paymentUrl is opened in another app, e.g. Chrome an app chooser is shown The second one is obviously undesirable. The last one is also not great. The user is not expecting to “open a url”, and may well make the “wrong” choice here, and it is anyway a bad user experience. Autoverify To The Rescue? Since Android 6.0 it has been possible to use a mechanism very similar to Apple’s Universal Links to “strongly” assing http(s) urls to applications. This works by adding an android:autoVerify=\"true\" attribute to the intent filter, plus a .well-known/assetlinks.json file to the server. This could solve the problems above, but it has its own issues, namely: Requires Android 6.0 Is really quite cumbersome to setup The SDK does not use this method. Android: Have PaymentUrl Redirect To An Intent Url Another option on Android is to allow the https paymentUrl to be opened in Chrome normally, but have that url redirect to an intent url. That intent url can be made specific to your application, making it so that unless the user has installed an application with the same package id (from a non-Google-Play source, presumably), it will always be opened in your app. This is what the SDK does. The SDK does this by having paymentUrl return an html page that immediately redirects. In some cases the redirect will be blocked, so the page also contains a link to the same url, so the user can manually follow the redirect. Now, as here we seem to want to have paymentUrl be the url loaded in the WebView, this does not work out-of-the-box. One option is to override shouldInterceptRequest in your WebViewClient, and special-case the loading of paymentUrl. Another solution could be loading paymentUrl normally, but adding a script to the page that checks for a JavaScript interface you provide in the WebView, and it is not there, then it would issue the redirect to the intent url. For reference, the way the SDK handles paymentUrls on Android looks like this from the perspective of the backend: Request 1 2 GET /perform-payment HTTP/1.1 Host: example.com Response 1 2 3 4 5 6 7 8 9 10 11 12 HTTP/1.1 200 OK Content-Type: text/html &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Payment&lt;/title&gt; &lt;meta http-equiv=\"refresh\" content=\"0;url=intent://example.com/perform-payment#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=com.example.app;end;\"&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=\"intent://example.com/perform-payment#Intent;scheme=https;action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=com.example.app;end;\"&gt;Back to app&lt;/a&gt; &lt;/body&gt; &lt;/html&gt; It uses an action defined by the SDK, and the package name of the containing application, making sure the intent is routed to the correct application, and to the correct SDK component. Note that the uri of the resulting intent is the paymentUrl. Dealing with Picky Web Pages Testing has shown, that on iOS some 3D-Secure pages do not like being opened in a web view. It does seem that this is mostly related to BankID integrations. We believe the problem stems from a configuration that sets a cookie in the browser, launches BankID, then BankID opens a different web page (not the paymentUrl), which expects to find that cookie. Now, if the first page was opened in a web view, the cookie is in that web view, but as the second page will be opened in Safari, the cookie will be nowhere to be found. Furthermore, at least in one instance, the original page in the web view will not receive any notification on the BankID process, despite being launched from there. We have not encountered this on Android, but it is quite possible for a similar situation to happen there also. Now, all of the above is speculation, and not really worth getting too deep into. The end result, however, is that some 3DS pages must be opened in Safari on iOS. The jury is still out if the same is true on Android. As we already have a way of getting back to the app (ref. paymentUrl), the simple thing to do would be to open any url not tested to work in Safari. Unfortunately, matters are further complicated by some pages not working if we do that. The two pages found in testing are now added to the list of known good pages (as the do work in the web view), but others may be out there. The current best solution is therefore to open the current page in Safari if it tries to navigate to an unknown page. This is what the SDK does: if it encounters a navigation that does not match the goodlist, it will take the current page url of the web view, and open that with UIApplication.shared.open(url) and call the decisionHandler with .cancel. (It will never happen in practice, but if the payment menu would be the current page in this situation, it will load the new url instead). The payment will eventually navigate to paymentUrl in Safari, and should return to the app. It should be noted, though, that in many cases the initial navigation to paymentUrl will be opened in Safari instead of the app in these cases. This acerbates the need for fallback mechanisms. The iOS (and possibly Android) SDKs will contain a list of known-good 3DS pages. Feel free to use this as a resource in your own implementation. Process Diagrams",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/plain-webview.html"
  },{
    "title": "Post-Purchase",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end The purchase should now be complete. But what if the purchase is cancelled or the payer wants to return goods? For these instances, we have cancel and reversal. Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction To cancel a previously created payment, you must perform the cancel operation against the accompanying href returned in the operations list. You can only cancel a payment - or part of a payment - which has not been captured yet. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The transaction object. check description string A textual description of why the transaction is cancelled. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response If the cancel request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you perform a cancel after doing a partial capture, you will cancel the remaining authorized amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Create Reversal Transaction If we want to reverse a previously captured amount, we need to perform reversal against the accompanying href returned in the operations list. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Reversal of captured transaction\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check description string Textual description of why the transaction is reversed. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. Reversal Response If the reversal request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"reversal\": { \"id\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/pcreditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-26T14:00:03.4725904Z\", \"updated\": \"2022-01-26T14:00:04.3851302Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 71100730898, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Reversing the capture amount\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\" \"isOperational\": false, \"reconciliationNumber\": 738180, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this reversal transaction belongs to. reversals object The reversal object, containing information about the reversal transaction. id string The relative URL of the reversal transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational boolean true if the transaction is operational; otherwise false . reconciliationNumber string The number of the reconciliation batch file where the transaction can be found. operations array The array of operations that are possible to perform on the payment order in its current state. Implement Redirect Implement Seamless View",
    "tags": "",
    "url": "/checkout-v3/enterprise/post-purchase.html"
  },{
    "title": "Post-Purchase",
    "text": "warning Two-phase payments: When dealing in physical goods using two-phase payment instruments, all goods must be shipped before you capture the authorized amount. This is regulated in part by the Swedish Distance and Doorstep Sales Act, required in our terms and (for card payments) required by Visa and Mastercard. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end The purchase should now be complete. But what if the purchase is cancelled or the payer wants to return goods? For these instances, we have cancel and reversal. Cancel The cancellations resource lists the cancellation transactions on a specific payment. Create Cancel Transaction To cancel a previously created payment, you must perform the cancel operation against the accompanying href returned in the operations list. You can only cancel a payment - or part of a payment - which has not been captured yet. Cancel Request Request 1 2 3 4 5 6 7 8 9 10 11 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancellations HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Test Cancellation\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The transaction object. check description string A textual description of why the transaction is cancelled. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Cancel Response If the cancel request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Cancel Sequence Diagram Cancel can only be done on a authorized transaction. If you perform a cancel after doing a partial capture, you will cancel the remaining authorized amount. sequenceDiagram participant SwedbankPay as Swedbank Pay Merchant-&gt;&gt;SwedbankPay: POST &lt; cancellation&gt; activate Merchant activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: transaction resource deactivate SwedbankPay deactivate Merchant Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Create Reversal Transaction If we want to reverse a previously captured amount, we need to perform reversal against the accompanying href returned in the operations list. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Reversal of captured transaction\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check description string Textual description of why the transaction is reversed. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. Reversal Response If the reversal request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"reversal\": { \"id\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/pcreditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-26T14:00:03.4725904Z\", \"updated\": \"2022-01-26T14:00:04.3851302Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 71100730898, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Reversing the capture amount\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\" \"isOperational\": false, \"reconciliationNumber\": 738180, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this reversal transaction belongs to. reversals object The reversal object, containing information about the reversal transaction. id string The relative URL of the reversal transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational boolean true if the transaction is operational; otherwise false . reconciliationNumber string The number of the reconciliation batch file where the transaction can be found. operations array The array of operations that are possible to perform on the payment order in its current state. Add To Your Payment Request",
    "tags": "",
    "url": "/checkout-v3/post-purchase.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types. Swish Payments Type Description Swish Always Swish",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/prices.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/prices.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types. Invoice Payments Type Description Invoice Always Invoice",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/prices.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types. Card Payments Type Description Creditcard Enables all brands activated for merchant Visa Visa MasterCard MasterCard Amex American Express Dankort Dankort (only available with currency DKK) Diners Diners Club Finax Finax Jcb JCB IkanoFinansDK Ikano Finans Denmark Maestro MasterCard Maestro",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/prices.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types. MobilePay Online Payments Type Description Mobilepay Always MobilePay",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/prices.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types. Vipps Payments Type Description Vipps Always Vipps",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/prices.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/prices.html"
  },{
    "title": "Prices",
    "text": "Prices The prices resource lists the prices related to a specific payment. In short, it is where you enter the payment’s amount. It consists of the payment’s id and the priceList, which again contains the payment’s type, amount and vatAmount. The type refers to the payment instrument, like Swish, Trustly or Creditcard. Read more about the types below the code example and table. The amount refers to the full amount (incl. VAT) for the payment, and vatAmount indicates how much of the full amount which is VAT. GET Prices Request Request 1 2 3 4 GET /psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Prices Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\", \"priceList\": [ { \"type\": \"VISA\", \"amount\": 2350, \"vatAmount\": 0 }, { \"type\": \"MasterCard\", \"amount\": 2350, \"vatAmount\": 0 } ] } } Field Type Description payment string The relative URL and unique identifier of the payment resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. prices object The prices resource. id string The relative URL and unique identifier of the prices resource this prices belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. priceList array The array of price objects. Note: Even if you specify CreditCard in the input message the system will return all your configured card brands instead when you expan the priceList. type string The type of the price object. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. Prices Object Types Each payment instrument have one or more prices object types. Usually there is only one, whichs corresponds with the name of the payment instrument, like Vipps, Swish or Mobilepay. The most common occurrence of several object types is for card payments. While it is possible to group them all as Creditcard, you can also differentiate on card types as shown in the example above. This is useful if certain card brands have additional fees, others have discounts or something similar. If you do differentiate, you need to add all accepted card brands as a separate object types.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/prices.html"
  },{
    "title": "Problems",
    "text": "Problems When using the Merchant Backend Configuration, most errors in the payment process will result in Problem responses from the backend. The SDK contains utilities for processing these in your application. On Android, if any operation fails due to a Problem, the resulting exception will be of the type RequestProblemException, which allows access to the Problem object. Problem is a JVM representation of the Problem JSON response, allowing for easy access to standard fields. You are free to use Problem as-is for modeling your own problem types. The Merchant Backend Configuration further defines a subclass of Problem, MerchantBackendProblem, which is a sealed class containing all the problem types expected to occur with a Merchant Backend server. All problems reported by the Merchant Backenc Configuration are of this type, allowing you to use kotlin’s powerful when expression to handle the different errors: Android 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 when (problem) { is MerchantBackendProblem.Client.MobileSDK.Unauthorized -&gt; handleUnauthorized() is MerchantBackendProblem.Client -&gt; handleOtherClientError() is MerchantBackendProblem.Server.MobileSDK -&gt; handleMerchantBackendError() is MerchantBackendProblem.Server.SwedbankPay.ConfigurationError -&gt; handleConfigurationError() is MerchantBackendProblem.Server.SwedbankPay -&gt; handleSwedbankPayError() else -&gt; handleUnknownError() } On iOS, if any operation fails due to a Problem, the resultig error will be SwedbankPaySDK.MerchantBackendError.problem, and it will have the problem as an associated value, of type SwedbankPaySDK.Problem. SwedbankPaySDK.Problem is a enum with a similar structure to the Android MerchantBackendProblem, allowing for idiomatic error handling. iOS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 if case SwedbankPaySDK.MerchantBackendError.problem(let problem) = error { switch problem { case .client(.mobileSDK(.unauthorized)): handleUnauthorized() case .client: handleOtherClientError() case .server(.mobileSDK): handleMerchantBackendError() case .server(.swedbankPay): handleSwedbankPayError() default: handleUnknownError() } }",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Card Problems There are a few problems specific to the creditcard resource that you may want to guard against in your integrations. All credit card problem types will have the following URL structure: https://api.payex.com/psp/errordetail/creditcard/&lt;error-type&gt; Contractual Problem Types Type Status Description cardbranddisabled 403 The card brand is disabled. accountholdertyperejected 403 The account holder type is rejected. cardtyperejected 403 The card type is rejected. 3dsecurerequired 403 The transaction was rejected by 3-D Secure. authenticationstatusrejected 403 The authentication status was rejected. frauddetected 403 The transaction was fraudulent. 3dsecuredeclined 403 3-D Secure declined the transaction. velocitycheck 429 Indicates that the limit for how many times a card or different cards can be used for attempting a purchase has been reached. Acquirer and 3-D Secure Problem Types Type Status Description 3dsecureerror 400 3-D Secure is not working. Try again after some time. badrequest 400 Bad request. Try again after some time. cardblacklisted 400 The card is blacklisted. The payer needs to contact their card issuing bank. 3dsecureusercancelled 403 Transaction was cancelled during 3-D Secure verification. 3dsecuredeclined 403 Transaction was declined during 3-D Secure verification. acquirercardblacklisted 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirercardexpired 403 The expiry date is wrong, or the card has expired. The payer needs to contact their card issuing bank. acquirercardstolen 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirererror 403 The acquirer responded with a generic error. acquirerinsufficientfunds 403 The card does not have sufficient funds. The payer needs to contact their card issuing bank. acquirerinvalidamount 403 Amount not valid by acquirer. Contact teknisksupport@swedbankpay.com. acquirerpossiblefraud 403 Transaction declined due to possible fraud. The payer needs to contact their card issuing bank. authenticationrequired 403 Transaction declined due to missing 3-D Secure credentials. The payer needs to initiate a new transaction. carddeclined 403 The card was declined. frauddetected 403 Fraud detected. The payer needs to contact their card issuing bank. paymenttokenerror 403 There was an error with the payment token. internalservererror 500 Server error. Try again after some time. 3dsecureacquirergatewayerror 502 Problems reaching 3-D Secure verification. Try again after some time. acquirergatewayerror 502 Problems reaching acquirers gateway. Try again after some time. badgateway 502 Problems reaching the gateway. Try again after some time. acquirergatewaytimeout 504 Problems reaching acquirers gateway. Try again after some time. Invoice Problems There are a few problems specific to the invoice resource that you may want to guard against in your integrations. All invoice error types will have the following URL structure: https://api.payex.com/psp/errordetail/invoice/&lt;error-type&gt; Type Status Description inputerror 400 10 - ValidationWarning inputerror 400 30 - ValidationError inputerror 400 3010 - ClientRequestInvalid forbidden 403 Any other error code externalerror 500 No error code externalerror 502 40 - Error externalerror 502 50 - SystemConfigurationError externalerror 502 60 - SystemError externalerror 502 9999 - ServerOtherServer Swish Problems There are a few problems specific to the swish resource that you may want to guard against in your integrations. All Swish problem types will have the following URL structure: https://api.payex.com/psp/errordetail/&lt;error-type&gt; bankidalreadyinuse Caused By: The payer’s BankID is already in use Example response bankidalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidalreadyinuse\", \"title\": \"BankID Already in Use\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's BankID is already in use.\" } bankidcancelled Caused By: The payer cancelled BankID authorization. Example response bankidcancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidcancelled\", \"title\": \"BankID Authorization cancelled\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled BankID authorization.\" } bankiderror Caused By: Something went wrong with the payer’s BankID authorization. Example response bankiderror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankiderror\", \"title\": \"BankID error\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Something went wrong with the payer's BankID authorization.\" } configerror Caused By: Payee alias is missing or not correct. PaymentReference is invalid. Amount value is missing or not a valid number. Amount is less than agreed minimum. Amount value is too large. Invalid or missing currency. Wrong formatted message. Amount value is too large, or amount exceeds the amount of the original payment minus any previous refunds. Counterpart is not activated. Payee not enrolled. Example response configerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/configerror\", \"title\": \"Config error\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Payee alias is missing or not correct.\" } inputerror Caused By: MSISDN is invalid. Payer’s MSISDN is not enrolled at Swish. Example response inputerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 400 Bad Request Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/inputerror\", \"title\": \"Input error\", \"status\": 400, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Msisdn is invalid.\" } paymentagelimitnotmet Caused By: The payer does not meet the payment’s age limit. Example response paymentagelimitnotmet 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/paymentagelimitnotmet\", \"title\": \"Payment Age Limit Not Met\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer does not meet the payment's age limit.\" } socialsecuritynumbermismatch Caused By: The payer’s social security number does not match with the one required by this payment. Example response socialsecuritynumbermismatch 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/socialsecuritynumbermismatch\", \"title\": \"Social Security Number Mismatch\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's social security number does not match with the one required by this payment.\" } swishalreadyinuse Caused By: The payer’s Swish is already in use. Example response swishalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishalreadyinuse\", \"title\": \"Error in Swish\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's Swish is already in use.\" } swishdeclined Caused By: Original payment not found or original payment is more than than 13 months old. It appears that merchant’s organization number has changed since sale was made. The MSISDN of the original payer seems to have changed owner. Transaction declined. Could be that the payer has exceeded their swish limit or have insufficient founds. Payment request not cancellable. Example response swishdeclined 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishdeclined\", \"title\": \"Swish Declined\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The MSISDN of the original payer seems to have changed owner.\" } swisherror Caused By: Bank system processing error. Swish timed out waiting for an answer from the banks after payment was started. Example response swisherror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swisherror\", \"title\": \"Error in Swish\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Bank system processing error.\" } swishgatewaytimeout Caused By: During a create a sale call to e-com, Swish responded with 504 (Gateway Timeout). Example response swishgatewaytimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 504 Gateway Timeout Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishgatewaytimeout\", \"title\": \"Swish Gateway Timeout\", \"status\": 504, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Request to Swish timed out.\" } swishtimeout Caused By: Swish timed out before the payment was started. Example response swishtimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishtimeout\", \"title\": \"Swish Timed Out\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Swish timed out before the payment was started.\" } systemerror Example response systemerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 500 Internal Server Error Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/systemerror\", \"title\": \"Error in System\", \"status\": 500, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"A system error occurred. We are working on it.\" } usercancelled Caused By: The payer cancelled the payment in the Swish app. Example response usercancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/usercancelled\", \"title\": \"User cancelled\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled the payment in the Swish app.\" } Trustly Problems There are a few problems specific to the trustly resource that you may want to guard against in your integrations. All Trustly problem types will have the following URL structure: https://api.payex.com/psp/errordetail/trustly/&lt;error-type&gt; Type Status Description systemerror 502 Happens if Trustly is experiencing technical difficulties, a contract is configured with bad account name / password, or if the operation (i.e. reversal) is not allowed on the payment due to its current state on Trustly’s end. Vipps Problems There are a few problems specific to the vipps resource that you may want to guard against in your integrations. All Vipps problem types will have the following URL structure: https://api.payex.com/psp/errordetail/vipps/&lt;error-type&gt; Problem Types from Vipps (Init-call) Type Status Note vipps_error 403 All errors Problem Types from Vipps (Callback) Type Status Note vipps_declined 400 Any status that is not successful Problem Types from Acquirer Type Status card_blacklisted 400 acquirer_card_blacklisted 403 acquirer_card_expired 403 acquirer_card_stolen 403 acquirer_error 403 acquirer_insufficient_funds 403 acquirer_invalid_amount 403 acquirer_possible_fraud 403 card_declined 403 fraud_detected 403 payment_token_error 403 bad_request 500 internal_server_error 500 unknown_error 500 acquirer_gateway_error 502 bad_gateway 502 acquirer_gateway_timeout 504",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Card Problems There are a few problems specific to the creditcard resource that you may want to guard against in your integrations. All credit card problem types will have the following URL structure: https://api.payex.com/psp/errordetail/creditcard/&lt;error-type&gt; Contractual Problem Types Type Status Description cardbranddisabled 403 The card brand is disabled. accountholdertyperejected 403 The account holder type is rejected. cardtyperejected 403 The card type is rejected. 3dsecurerequired 403 The transaction was rejected by 3-D Secure. authenticationstatusrejected 403 The authentication status was rejected. frauddetected 403 The transaction was fraudulent. 3dsecuredeclined 403 3-D Secure declined the transaction. velocitycheck 429 Indicates that the limit for how many times a card or different cards can be used for attempting a purchase has been reached. Acquirer and 3-D Secure Problem Types Type Status Description 3dsecureerror 400 3-D Secure is not working. Try again after some time. badrequest 400 Bad request. Try again after some time. cardblacklisted 400 The card is blacklisted. The payer needs to contact their card issuing bank. 3dsecureusercancelled 403 Transaction was cancelled during 3-D Secure verification. 3dsecuredeclined 403 Transaction was declined during 3-D Secure verification. acquirercardblacklisted 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirercardexpired 403 The expiry date is wrong, or the card has expired. The payer needs to contact their card issuing bank. acquirercardstolen 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirererror 403 The acquirer responded with a generic error. acquirerinsufficientfunds 403 The card does not have sufficient funds. The payer needs to contact their card issuing bank. acquirerinvalidamount 403 Amount not valid by acquirer. Contact teknisksupport@swedbankpay.com. acquirerpossiblefraud 403 Transaction declined due to possible fraud. The payer needs to contact their card issuing bank. authenticationrequired 403 Transaction declined due to missing 3-D Secure credentials. The payer needs to initiate a new transaction. carddeclined 403 The card was declined. frauddetected 403 Fraud detected. The payer needs to contact their card issuing bank. paymenttokenerror 403 There was an error with the payment token. internalservererror 500 Server error. Try again after some time. 3dsecureacquirergatewayerror 502 Problems reaching 3-D Secure verification. Try again after some time. acquirergatewayerror 502 Problems reaching acquirers gateway. Try again after some time. badgateway 502 Problems reaching the gateway. Try again after some time. acquirergatewaytimeout 504 Problems reaching acquirers gateway. Try again after some time. Invoice Problems There are a few problems specific to the invoice resource that you may want to guard against in your integrations. All invoice error types will have the following URL structure: https://api.payex.com/psp/errordetail/invoice/&lt;error-type&gt; Type Status Description inputerror 400 10 - ValidationWarning inputerror 400 30 - ValidationError inputerror 400 3010 - ClientRequestInvalid forbidden 403 Any other error code externalerror 500 No error code externalerror 502 40 - Error externalerror 502 50 - SystemConfigurationError externalerror 502 60 - SystemError externalerror 502 9999 - ServerOtherServer Swish Problems There are a few problems specific to the swish resource that you may want to guard against in your integrations. All Swish problem types will have the following URL structure: https://api.payex.com/psp/errordetail/&lt;error-type&gt; bankidalreadyinuse Caused By: The payer’s BankID is already in use Example response bankidalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidalreadyinuse\", \"title\": \"BankID Already in Use\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's BankID is already in use.\" } bankidcancelled Caused By: The payer cancelled BankID authorization. Example response bankidcancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidcancelled\", \"title\": \"BankID Authorization cancelled\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled BankID authorization.\" } bankiderror Caused By: Something went wrong with the payer’s BankID authorization. Example response bankiderror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankiderror\", \"title\": \"BankID error\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Something went wrong with the payer's BankID authorization.\" } configerror Caused By: Payee alias is missing or not correct. PaymentReference is invalid. Amount value is missing or not a valid number. Amount is less than agreed minimum. Amount value is too large. Invalid or missing currency. Wrong formatted message. Amount value is too large, or amount exceeds the amount of the original payment minus any previous refunds. Counterpart is not activated. Payee not enrolled. Example response configerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/configerror\", \"title\": \"Config error\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Payee alias is missing or not correct.\" } inputerror Caused By: MSISDN is invalid. Payer’s MSISDN is not enrolled at Swish. Example response inputerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 400 Bad Request Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/inputerror\", \"title\": \"Input error\", \"status\": 400, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Msisdn is invalid.\" } paymentagelimitnotmet Caused By: The payer does not meet the payment’s age limit. Example response paymentagelimitnotmet 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/paymentagelimitnotmet\", \"title\": \"Payment Age Limit Not Met\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer does not meet the payment's age limit.\" } socialsecuritynumbermismatch Caused By: The payer’s social security number does not match with the one required by this payment. Example response socialsecuritynumbermismatch 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/socialsecuritynumbermismatch\", \"title\": \"Social Security Number Mismatch\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's social security number does not match with the one required by this payment.\" } swishalreadyinuse Caused By: The payer’s Swish is already in use. Example response swishalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishalreadyinuse\", \"title\": \"Error in Swish\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's Swish is already in use.\" } swishdeclined Caused By: Original payment not found or original payment is more than than 13 months old. It appears that merchant’s organization number has changed since sale was made. The MSISDN of the original payer seems to have changed owner. Transaction declined. Could be that the payer has exceeded their swish limit or have insufficient founds. Payment request not cancellable. Example response swishdeclined 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishdeclined\", \"title\": \"Swish Declined\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The MSISDN of the original payer seems to have changed owner.\" } swisherror Caused By: Bank system processing error. Swish timed out waiting for an answer from the banks after payment was started. Example response swisherror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swisherror\", \"title\": \"Error in Swish\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Bank system processing error.\" } swishgatewaytimeout Caused By: During a create a sale call to e-com, Swish responded with 504 (Gateway Timeout). Example response swishgatewaytimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 504 Gateway Timeout Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishgatewaytimeout\", \"title\": \"Swish Gateway Timeout\", \"status\": 504, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Request to Swish timed out.\" } swishtimeout Caused By: Swish timed out before the payment was started. Example response swishtimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishtimeout\", \"title\": \"Swish Timed Out\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Swish timed out before the payment was started.\" } systemerror Example response systemerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 500 Internal Server Error Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/systemerror\", \"title\": \"Error in System\", \"status\": 500, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"A system error occurred. We are working on it.\" } usercancelled Caused By: The payer cancelled the payment in the Swish app. Example response usercancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/usercancelled\", \"title\": \"User cancelled\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled the payment in the Swish app.\" } Trustly Problems There are a few problems specific to the trustly resource that you may want to guard against in your integrations. All Trustly problem types will have the following URL structure: https://api.payex.com/psp/errordetail/trustly/&lt;error-type&gt; Type Status Description systemerror 502 Happens if Trustly is experiencing technical difficulties, a contract is configured with bad account name / password, or if the operation (i.e. reversal) is not allowed on the payment due to its current state on Trustly’s end. Vipps Problems There are a few problems specific to the vipps resource that you may want to guard against in your integrations. All Vipps problem types will have the following URL structure: https://api.payex.com/psp/errordetail/vipps/&lt;error-type&gt; Problem Types from Vipps (Init-call) Type Status Note vipps_error 403 All errors Problem Types from Vipps (Callback) Type Status Note vipps_declined 400 Any status that is not successful Problem Types from Acquirer Type Status card_blacklisted 400 acquirer_card_blacklisted 403 acquirer_card_expired 403 acquirer_card_stolen 403 acquirer_error 403 acquirer_insufficient_funds 403 acquirer_invalid_amount 403 acquirer_possible_fraud 403 card_declined 403 fraud_detected 403 payment_token_error 403 bad_request 500 internal_server_error 500 unknown_error 500 acquirer_gateway_error 502 bad_gateway 502 acquirer_gateway_timeout 504",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Swish Problems There are a few problems specific to the swish resource that you may want to guard against in your integrations. All Swish problem types will have the following URL structure: https://api.payex.com/psp/errordetail/&lt;error-type&gt; bankidalreadyinuse Caused By: The payer’s BankID is already in use Example response bankidalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidalreadyinuse\", \"title\": \"BankID Already in Use\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's BankID is already in use.\" } bankidcancelled Caused By: The payer cancelled BankID authorization. Example response bankidcancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidcancelled\", \"title\": \"BankID Authorization cancelled\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled BankID authorization.\" } bankiderror Caused By: Something went wrong with the payer’s BankID authorization. Example response bankiderror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankiderror\", \"title\": \"BankID error\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Something went wrong with the payer's BankID authorization.\" } configerror Caused By: Payee alias is missing or not correct. PaymentReference is invalid. Amount value is missing or not a valid number. Amount is less than agreed minimum. Amount value is too large. Invalid or missing currency. Wrong formatted message. Amount value is too large, or amount exceeds the amount of the original payment minus any previous refunds. Counterpart is not activated. Payee not enrolled. Example response configerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/configerror\", \"title\": \"Config error\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Payee alias is missing or not correct.\" } inputerror Caused By: MSISDN is invalid. Payer’s MSISDN is not enrolled at Swish. Example response inputerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 400 Bad Request Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/inputerror\", \"title\": \"Input error\", \"status\": 400, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Msisdn is invalid.\" } paymentagelimitnotmet Caused By: The payer does not meet the payment’s age limit. Example response paymentagelimitnotmet 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/paymentagelimitnotmet\", \"title\": \"Payment Age Limit Not Met\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer does not meet the payment's age limit.\" } socialsecuritynumbermismatch Caused By: The payer’s social security number does not match with the one required by this payment. Example response socialsecuritynumbermismatch 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/socialsecuritynumbermismatch\", \"title\": \"Social Security Number Mismatch\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's social security number does not match with the one required by this payment.\" } swishalreadyinuse Caused By: The payer’s Swish is already in use. Example response swishalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishalreadyinuse\", \"title\": \"Error in Swish\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's Swish is already in use.\" } swishdeclined Caused By: Original payment not found or original payment is more than than 13 months old. It appears that merchant’s organization number has changed since sale was made. The MSISDN of the original payer seems to have changed owner. Transaction declined. Could be that the payer has exceeded their swish limit or have insufficient founds. Payment request not cancellable. Example response swishdeclined 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishdeclined\", \"title\": \"Swish Declined\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The MSISDN of the original payer seems to have changed owner.\" } swisherror Caused By: Bank system processing error. Swish timed out waiting for an answer from the banks after payment was started. Example response swisherror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swisherror\", \"title\": \"Error in Swish\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Bank system processing error.\" } swishgatewaytimeout Caused By: During a create a sale call to e-com, Swish responded with 504 (Gateway Timeout). Example response swishgatewaytimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 504 Gateway Timeout Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishgatewaytimeout\", \"title\": \"Swish Gateway Timeout\", \"status\": 504, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Request to Swish timed out.\" } swishtimeout Caused By: Swish timed out before the payment was started. Example response swishtimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishtimeout\", \"title\": \"Swish Timed Out\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Swish timed out before the payment was started.\" } systemerror Example response systemerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 500 Internal Server Error Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/systemerror\", \"title\": \"Error in System\", \"status\": 500, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"A system error occurred. We are working on it.\" } usercancelled Caused By: The payer cancelled the payment in the Swish app. Example response usercancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/usercancelled\", \"title\": \"User cancelled\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled the payment in the Swish app.\" }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Trustly Problems There are a few problems specific to the trustly resource that you may want to guard against in your integrations. All Trustly problem types will have the following URL structure: https://api.payex.com/psp/errordetail/trustly/&lt;error-type&gt; Type Status Description systemerror 502 Happens if Trustly is experiencing technical difficulties, a contract is configured with bad account name / password, or if the operation (i.e. reversal) is not allowed on the payment due to its current state on Trustly’s end.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Invoice Problems There are a few problems specific to the invoice resource that you may want to guard against in your integrations. All invoice error types will have the following URL structure: https://api.payex.com/psp/errordetail/invoice/&lt;error-type&gt; Type Status Description inputerror 400 10 - ValidationWarning inputerror 400 30 - ValidationError inputerror 400 3010 - ClientRequestInvalid forbidden 403 Any other error code externalerror 500 No error code externalerror 502 40 - Error externalerror 502 50 - SystemConfigurationError externalerror 502 60 - SystemError externalerror 502 9999 - ServerOtherServer",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Card Problems There are a few problems specific to the creditcard resource that you may want to guard against in your integrations. All credit card problem types will have the following URL structure: https://api.payex.com/psp/errordetail/creditcard/&lt;error-type&gt; Contractual Problem Types Show fields Hide fields Type Status Description cardbranddisabled 403 The card brand is disabled. accountholdertyperejected 403 The account holder type is rejected. cardtyperejected 403 The card type is rejected. 3dsecurerequired 403 The transaction was rejected by 3-D Secure. authenticationstatusrejected 403 The authentication status was rejected. frauddetected 403 The transaction was fraudulent. 3dsecuredeclined 403 3-D Secure declined the transaction. velocitycheck 429 Indicates that the limit for how many times a card or different cards can be used for attempting a purchase has been reached. Acquirer and 3-D Secure Problem Types Show fields Hide fields Type Status Description 3dsecureerror 400 3-D Secure is not working. Try again after some time. badrequest 400 Bad request. Try again after some time. cardblacklisted 400 The card is blacklisted. The payer needs to contact their card issuing bank. 3dsecureusercancelled 403 Transaction was cancelled during 3-D Secure verification. 3dsecuredeclined 403 Transaction was declined during 3-D Secure verification. acquirercardblacklisted 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirercardexpired 403 The expiry date is wrong, or the card has expired. The payer needs to contact their card issuing bank. acquirercardstolen 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirererror 403 The acquirer responded with a generic error. acquirerinsufficientfunds 403 The card does not have sufficient funds. The payer needs to contact their card issuing bank. acquirerinvalidamount 403 Amount not valid by acquirer. Contact teknisksupport@swedbankpay.com. acquirerpossiblefraud 403 Transaction declined due to possible fraud. The payer needs to contact their card issuing bank. authenticationrequired 403 Transaction declined due to missing 3-D Secure credentials. The payer needs to initiate a new transaction. carddeclined 403 The card was declined. frauddetected 403 Fraud detected. The payer needs to contact their card issuing bank. paymenttokenerror 403 There was an error with the payment token. internalservererror 500 Server error. Try again after some time. 3dsecureacquirergatewayerror 502 Problems reaching 3-D Secure verification. Try again after some time. acquirergatewayerror 502 Problems reaching acquirers gateway. Try again after some time. badgateway 502 Problems reaching the gateway. Try again after some time. acquirergatewaytimeout 504 Problems reaching acquirers gateway. Try again after some time.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Vipps Problems There are a few problems specific to the vipps resource that you may want to guard against in your integrations. All Vipps problem types will have the following URL structure: https://api.payex.com/psp/errordetail/vipps/&lt;error-type&gt; Problem Types from Vipps (Init-call) Type Status Note vipps_error 403 All errors Problem Types from Vipps (Callback) Type Status Note vipps_declined 400 Any status that is not successful Problem Types from Acquirer Type Status card_blacklisted 400 acquirer_card_blacklisted 403 acquirer_card_expired 403 acquirer_card_stolen 403 acquirer_error 403 acquirer_insufficient_funds 403 acquirer_invalid_amount 403 acquirer_possible_fraud 403 card_declined 403 fraud_detected 403 payment_token_error 403 bad_request 500 internal_server_error 500 unknown_error 500 acquirer_gateway_error 502 bad_gateway 502 acquirer_gateway_timeout 504",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Card Problems There are a few problems specific to the creditcard resource that you may want to guard against in your integrations. All credit card problem types will have the following URL structure: https://api.payex.com/psp/errordetail/creditcard/&lt;error-type&gt; Contractual Problem Types Type Status Description cardbranddisabled 403 The card brand is disabled. accountholdertyperejected 403 The account holder type is rejected. cardtyperejected 403 The card type is rejected. 3dsecurerequired 403 The transaction was rejected by 3-D Secure. authenticationstatusrejected 403 The authentication status was rejected. frauddetected 403 The transaction was fraudulent. 3dsecuredeclined 403 3-D Secure declined the transaction. velocitycheck 429 Indicates that the limit for how many times a card or different cards can be used for attempting a purchase has been reached. Acquirer and 3-D Secure Problem Types Type Status Description 3dsecureerror 400 3-D Secure is not working. Try again after some time. badrequest 400 Bad request. Try again after some time. cardblacklisted 400 The card is blacklisted. The payer needs to contact their card issuing bank. 3dsecureusercancelled 403 Transaction was cancelled during 3-D Secure verification. 3dsecuredeclined 403 Transaction was declined during 3-D Secure verification. acquirercardblacklisted 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirercardexpired 403 The expiry date is wrong, or the card has expired. The payer needs to contact their card issuing bank. acquirercardstolen 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirererror 403 The acquirer responded with a generic error. acquirerinsufficientfunds 403 The card does not have sufficient funds. The payer needs to contact their card issuing bank. acquirerinvalidamount 403 Amount not valid by acquirer. Contact teknisksupport@swedbankpay.com. acquirerpossiblefraud 403 Transaction declined due to possible fraud. The payer needs to contact their card issuing bank. authenticationrequired 403 Transaction declined due to missing 3-D Secure credentials. The payer needs to initiate a new transaction. carddeclined 403 The card was declined. frauddetected 403 Fraud detected. The payer needs to contact their card issuing bank. paymenttokenerror 403 There was an error with the payment token. internalservererror 500 Server error. Try again after some time. 3dsecureacquirergatewayerror 502 Problems reaching 3-D Secure verification. Try again after some time. acquirergatewayerror 502 Problems reaching acquirers gateway. Try again after some time. badgateway 502 Problems reaching the gateway. Try again after some time. acquirergatewaytimeout 504 Problems reaching acquirers gateway. Try again after some time. Invoice Problems There are a few problems specific to the invoice resource that you may want to guard against in your integrations. All invoice error types will have the following URL structure: https://api.payex.com/psp/errordetail/invoice/&lt;error-type&gt; Type Status Description inputerror 400 10 - ValidationWarning inputerror 400 30 - ValidationError inputerror 400 3010 - ClientRequestInvalid forbidden 403 Any other error code externalerror 500 No error code externalerror 502 40 - Error externalerror 502 50 - SystemConfigurationError externalerror 502 60 - SystemError externalerror 502 9999 - ServerOtherServer Swish Problems There are a few problems specific to the swish resource that you may want to guard against in your integrations. All Swish problem types will have the following URL structure: https://api.payex.com/psp/errordetail/&lt;error-type&gt; bankidalreadyinuse Caused By: The payer’s BankID is already in use Example response bankidalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidalreadyinuse\", \"title\": \"BankID Already in Use\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's BankID is already in use.\" } bankidcancelled Caused By: The payer cancelled BankID authorization. Example response bankidcancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidcancelled\", \"title\": \"BankID Authorization cancelled\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled BankID authorization.\" } bankiderror Caused By: Something went wrong with the payer’s BankID authorization. Example response bankiderror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankiderror\", \"title\": \"BankID error\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Something went wrong with the payer's BankID authorization.\" } configerror Caused By: Payee alias is missing or not correct. PaymentReference is invalid. Amount value is missing or not a valid number. Amount is less than agreed minimum. Amount value is too large. Invalid or missing currency. Wrong formatted message. Amount value is too large, or amount exceeds the amount of the original payment minus any previous refunds. Counterpart is not activated. Payee not enrolled. Example response configerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/configerror\", \"title\": \"Config error\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Payee alias is missing or not correct.\" } inputerror Caused By: MSISDN is invalid. Payer’s MSISDN is not enrolled at Swish. Example response inputerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 400 Bad Request Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/inputerror\", \"title\": \"Input error\", \"status\": 400, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Msisdn is invalid.\" } paymentagelimitnotmet Caused By: The payer does not meet the payment’s age limit. Example response paymentagelimitnotmet 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/paymentagelimitnotmet\", \"title\": \"Payment Age Limit Not Met\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer does not meet the payment's age limit.\" } socialsecuritynumbermismatch Caused By: The payer’s social security number does not match with the one required by this payment. Example response socialsecuritynumbermismatch 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/socialsecuritynumbermismatch\", \"title\": \"Social Security Number Mismatch\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's social security number does not match with the one required by this payment.\" } swishalreadyinuse Caused By: The payer’s Swish is already in use. Example response swishalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishalreadyinuse\", \"title\": \"Error in Swish\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's Swish is already in use.\" } swishdeclined Caused By: Original payment not found or original payment is more than than 13 months old. It appears that merchant’s organization number has changed since sale was made. The MSISDN of the original payer seems to have changed owner. Transaction declined. Could be that the payer has exceeded their swish limit or have insufficient founds. Payment request not cancellable. Example response swishdeclined 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishdeclined\", \"title\": \"Swish Declined\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The MSISDN of the original payer seems to have changed owner.\" } swisherror Caused By: Bank system processing error. Swish timed out waiting for an answer from the banks after payment was started. Example response swisherror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swisherror\", \"title\": \"Error in Swish\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Bank system processing error.\" } swishgatewaytimeout Caused By: During a create a sale call to e-com, Swish responded with 504 (Gateway Timeout). Example response swishgatewaytimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 504 Gateway Timeout Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishgatewaytimeout\", \"title\": \"Swish Gateway Timeout\", \"status\": 504, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Request to Swish timed out.\" } swishtimeout Caused By: Swish timed out before the payment was started. Example response swishtimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishtimeout\", \"title\": \"Swish Timed Out\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Swish timed out before the payment was started.\" } systemerror Example response systemerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 500 Internal Server Error Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/systemerror\", \"title\": \"Error in System\", \"status\": 500, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"A system error occurred. We are working on it.\" } usercancelled Caused By: The payer cancelled the payment in the Swish app. Example response usercancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/usercancelled\", \"title\": \"User cancelled\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled the payment in the Swish app.\" } Trustly Problems There are a few problems specific to the trustly resource that you may want to guard against in your integrations. All Trustly problem types will have the following URL structure: https://api.payex.com/psp/errordetail/trustly/&lt;error-type&gt; Type Status Description systemerror 502 Happens if Trustly is experiencing technical difficulties, a contract is configured with bad account name / password, or if the operation (i.e. reversal) is not allowed on the payment due to its current state on Trustly’s end. Vipps Problems There are a few problems specific to the vipps resource that you may want to guard against in your integrations. All Vipps problem types will have the following URL structure: https://api.payex.com/psp/errordetail/vipps/&lt;error-type&gt; Problem Types from Vipps (Init-call) Type Status Note vipps_error 403 All errors Problem Types from Vipps (Callback) Type Status Note vipps_declined 400 Any status that is not successful Problem Types from Acquirer Type Status card_blacklisted 400 acquirer_card_blacklisted 403 acquirer_card_expired 403 acquirer_card_stolen 403 acquirer_error 403 acquirer_insufficient_funds 403 acquirer_invalid_amount 403 acquirer_possible_fraud 403 card_declined 403 fraud_detected 403 payment_token_error 403 bad_request 500 internal_server_error 500 unknown_error 500 acquirer_gateway_error 502 bad_gateway 502 acquirer_gateway_timeout 504",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/problems.html"
  },{
    "title": "Problems",
    "text": "Problems When performing operations against a resource in the Swedbank Pay API Platform, it will respond with a problem message that contain details of the error type if the request could not be successfully performed. Regardless of why the error occurred, the problem message will follow the same structure as specified in the Problem Details for HTTP APIs (RFC 7807) specification. We generally use the problem message type and status code to identify the nature of the problem. The problems array contains objects with name and description that will often help narrow down the specifics of the problem, usually to the field in the request that was missing or contained invalid data. The structure of a problem message will look like this: Problem Example 1 2 3 4 5 6 7 8 9 10 11 { \"type\": \"https://api.payex.com/psp/errordetail/&lt;resource&gt;/inputerror\", \"title\": \"There was an input error\", \"detail\": \"Please correct the errors and retry the request\", \"instance\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"status\": 400, \"problems\": [{ \"name\": \"CreditCardParameters.Issuer\", \"description\": \"minimum one issuer must be enabled\" }] } Field Type Description type string The URL that identifies the error type. This is the only field usable for programmatic identification of the type of error! When dereferenced, it might lead you to a human readable description of the error and how it can be recovered from. title string The title contains a human readable description of the error. detail string A detailed, human readable description of the error and how you can recover from it. instance string The identifier of the error instance. This might be of use to Swedbank Pay support personnel in order to find the exact error and the context it occurred in. status integer The HTTP status code that the problem was served with. action string The action indicates how the error can be recovered from. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Common Problems All common problem types will have a URL in the format https://api.payex.com/psp/errordetail/&lt;error-type&gt;. The URL is an identifier that you can hard-code and implement logic around. It is currently not not possible to dereference this URL, although that might be possible in the future. Type Status Description inputerror 400 The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size to large, invalid request). configurationerror 403 A error relating to configuration issues. forbidden 403 The request was valid, but the server is refusing the action. The necessary permissions to access the resource might be lacking. notfound 404 The requested resource could not be found, but may be available in the future. Subsequent requests are permissible. systemerror 500 A generic error message. Card Problems There are a few problems specific to the creditcard resource that you may want to guard against in your integrations. All credit card problem types will have the following URL structure: https://api.payex.com/psp/errordetail/creditcard/&lt;error-type&gt; Contractual Problem Types Type Status Description cardbranddisabled 403 The card brand is disabled. accountholdertyperejected 403 The account holder type is rejected. cardtyperejected 403 The card type is rejected. 3dsecurerequired 403 The transaction was rejected by 3-D Secure. authenticationstatusrejected 403 The authentication status was rejected. frauddetected 403 The transaction was fraudulent. 3dsecuredeclined 403 3-D Secure declined the transaction. velocitycheck 429 Indicates that the limit for how many times a card or different cards can be used for attempting a purchase has been reached. Acquirer and 3-D Secure Problem Types Type Status Description 3dsecureerror 400 3-D Secure is not working. Try again after some time. badrequest 400 Bad request. Try again after some time. cardblacklisted 400 The card is blacklisted. The payer needs to contact their card issuing bank. 3dsecureusercancelled 403 Transaction was cancelled during 3-D Secure verification. 3dsecuredeclined 403 Transaction was declined during 3-D Secure verification. acquirercardblacklisted 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirercardexpired 403 The expiry date is wrong, or the card has expired. The payer needs to contact their card issuing bank. acquirercardstolen 403 The card is blacklisted. The payer needs to contact their card issuing bank. acquirererror 403 The acquirer responded with a generic error. acquirerinsufficientfunds 403 The card does not have sufficient funds. The payer needs to contact their card issuing bank. acquirerinvalidamount 403 Amount not valid by acquirer. Contact teknisksupport@swedbankpay.com. acquirerpossiblefraud 403 Transaction declined due to possible fraud. The payer needs to contact their card issuing bank. authenticationrequired 403 Transaction declined due to missing 3-D Secure credentials. The payer needs to initiate a new transaction. carddeclined 403 The card was declined. frauddetected 403 Fraud detected. The payer needs to contact their card issuing bank. paymenttokenerror 403 There was an error with the payment token. internalservererror 500 Server error. Try again after some time. 3dsecureacquirergatewayerror 502 Problems reaching 3-D Secure verification. Try again after some time. acquirergatewayerror 502 Problems reaching acquirers gateway. Try again after some time. badgateway 502 Problems reaching the gateway. Try again after some time. acquirergatewaytimeout 504 Problems reaching acquirers gateway. Try again after some time. Invoice Problems There are a few problems specific to the invoice resource that you may want to guard against in your integrations. All invoice error types will have the following URL structure: https://api.payex.com/psp/errordetail/invoice/&lt;error-type&gt; Type Status Description inputerror 400 10 - ValidationWarning inputerror 400 30 - ValidationError inputerror 400 3010 - ClientRequestInvalid forbidden 403 Any other error code externalerror 500 No error code externalerror 502 40 - Error externalerror 502 50 - SystemConfigurationError externalerror 502 60 - SystemError externalerror 502 9999 - ServerOtherServer Swish Problems There are a few problems specific to the swish resource that you may want to guard against in your integrations. All Swish problem types will have the following URL structure: https://api.payex.com/psp/errordetail/&lt;error-type&gt; bankidalreadyinuse Caused By: The payer’s BankID is already in use Example response bankidalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidalreadyinuse\", \"title\": \"BankID Already in Use\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's BankID is already in use.\" } bankidcancelled Caused By: The payer cancelled BankID authorization. Example response bankidcancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 409 Conflict Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankidcancelled\", \"title\": \"BankID Authorization cancelled\", \"status\": 409, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled BankID authorization.\" } bankiderror Caused By: Something went wrong with the payer’s BankID authorization. Example response bankiderror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/bankiderror\", \"title\": \"BankID error\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Something went wrong with the payer's BankID authorization.\" } configerror Caused By: Payee alias is missing or not correct. PaymentReference is invalid. Amount value is missing or not a valid number. Amount is less than agreed minimum. Amount value is too large. Invalid or missing currency. Wrong formatted message. Amount value is too large, or amount exceeds the amount of the original payment minus any previous refunds. Counterpart is not activated. Payee not enrolled. Example response configerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/configerror\", \"title\": \"Config error\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Payee alias is missing or not correct.\" } inputerror Caused By: MSISDN is invalid. Payer’s MSISDN is not enrolled at Swish. Example response inputerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 400 Bad Request Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/inputerror\", \"title\": \"Input error\", \"status\": 400, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Msisdn is invalid.\" } paymentagelimitnotmet Caused By: The payer does not meet the payment’s age limit. Example response paymentagelimitnotmet 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/paymentagelimitnotmet\", \"title\": \"Payment Age Limit Not Met\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer does not meet the payment's age limit.\" } socialsecuritynumbermismatch Caused By: The payer’s social security number does not match with the one required by this payment. Example response socialsecuritynumbermismatch 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/socialsecuritynumbermismatch\", \"title\": \"Social Security Number Mismatch\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's social security number does not match with the one required by this payment.\" } swishalreadyinuse Caused By: The payer’s Swish is already in use. Example response swishalreadyinuse 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishalreadyinuse\", \"title\": \"Error in Swish\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer's Swish is already in use.\" } swishdeclined Caused By: Original payment not found or original payment is more than than 13 months old. It appears that merchant’s organization number has changed since sale was made. The MSISDN of the original payer seems to have changed owner. Transaction declined. Could be that the payer has exceeded their swish limit or have insufficient founds. Payment request not cancellable. Example response swishdeclined 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishdeclined\", \"title\": \"Swish Declined\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The MSISDN of the original payer seems to have changed owner.\" } swisherror Caused By: Bank system processing error. Swish timed out waiting for an answer from the banks after payment was started. Example response swisherror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 502 Bad Gateway Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swisherror\", \"title\": \"Error in Swish\", \"status\": 502, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Bank system processing error.\" } swishgatewaytimeout Caused By: During a create a sale call to e-com, Swish responded with 504 (Gateway Timeout). Example response swishgatewaytimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 504 Gateway Timeout Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishgatewaytimeout\", \"title\": \"Swish Gateway Timeout\", \"status\": 504, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Request to Swish timed out.\" } swishtimeout Caused By: Swish timed out before the payment was started. Example response swishtimeout 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/swishtimeout\", \"title\": \"Swish Timed Out\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"Swish timed out before the payment was started.\" } systemerror Example response systemerror 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 500 Internal Server Error Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/systemerror\", \"title\": \"Error in System\", \"status\": 500, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"A system error occurred. We are working on it.\" } usercancelled Caused By: The payer cancelled the payment in the Swish app. Example response usercancelled 1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 403 Forbidden Content-Type: application/json { \"sessionId\": \"570ad610-3bd5-43d2-a270-ca1510562972\", \"type\": \"https://api.payex.com/psp/errordetail/usercancelled\", \"title\": \"User cancelled\", \"status\": 403, \"instance\": \"https://api.payex.com/psp/swish/payments/0cf55e0f-9931-476b-249d-08d7a3ee4e14/sales\", \"detail\": \"The payer cancelled the payment in the Swish app.\" } Trustly Problems There are a few problems specific to the trustly resource that you may want to guard against in your integrations. All Trustly problem types will have the following URL structure: https://api.payex.com/psp/errordetail/trustly/&lt;error-type&gt; Type Status Description systemerror 502 Happens if Trustly is experiencing technical difficulties, a contract is configured with bad account name / password, or if the operation (i.e. reversal) is not allowed on the payment due to its current state on Trustly’s end. Vipps Problems There are a few problems specific to the vipps resource that you may want to guard against in your integrations. All Vipps problem types will have the following URL structure: https://api.payex.com/psp/errordetail/vipps/&lt;error-type&gt; Problem Types from Vipps (Init-call) Type Status Note vipps_error 403 All errors Problem Types from Vipps (Callback) Type Status Note vipps_declined 400 Any status that is not successful Problem Types from Acquirer Type Status card_blacklisted 400 acquirer_card_blacklisted 403 acquirer_card_expired 403 acquirer_card_stolen 403 acquirer_error 403 acquirer_insufficient_funds 403 acquirer_invalid_amount 403 acquirer_possible_fraud 403 card_declined 403 fraud_detected 403 payment_token_error 403 bad_request 500 internal_server_error 500 unknown_error 500 acquirer_gateway_error 502 bad_gateway 502 acquirer_gateway_timeout 504",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/problems.html"
  },{
    "title": "Process Diagrams",
    "text": "Initialization To use the SDK, you must have a valid Configuration for it. The API for this is a bit different in Android and iOS, but generally you will only need one Configuration for your app. On Android set it to PaymentFragment.defaultConfiguration; on iOS store it in a convenient variable. If you are using a backend implementing the Merchant Backend API, there is a Configuration ready for you in the SDK. If you are designing your own backend API, you will need to create the Configuration yourself. sequenceDiagram alt Using Merchant Backend alt Android App -&gt;&gt; SDK: MerchantBackendConfiguration.Builder(backendUrl)...build() SDK --&gt;&gt; App: configuration App -&gt;&gt; SDK: PaymentFragment.defaultConfiguration = configuration else iOS App -&gt;&gt; SDK: SwedbankPaySDK.MerchantBackendConfiguration.init(backendUrl: backendUrl) SDK --&gt;&gt; App: configuration end else Using Custom Backend alt Android App -&gt;&gt; App: class MyConfiguration : Configuration() App -&gt;&gt; SDK: PaymentFragment.defaultConfiguration = configuration else iOS App -&gt;&gt; App: struct/class MyConfiguration : SwedbankPaySDK.Configuration end end When you want to make a payment, create a PaymentFrament or SwedbankPaySDKController. SwedbankPaySDKController’s designated initializer takes all the required arguments; for PaymentFrament you should use PaymentFragment.ArgumentsBuilder to create the arguments bundle. The meaning of the arguments depends on your Configuration. If you are using MerchantBackendConfiguration, you will always need a PaymentOrder argument. A very important part of the PaymentOrder is the urls field. The SDK has convenience methods for creating one; unless your use-case is advanced, you should use these. On Android use the PaymentOrderUrls(context, backendUrl, [callbackUrl], [termsOfServiceUrl]) constructor; on iOS use the PaymentOrderUrls.init(configuration:language:[callbackUrl:][termsOfServiceUrl:]) initializer. In both cases the convenience method depends on your MerchantBackendConfiguration (backendUrlis part of the MerchantBackendConfiguration), so be careful if you have multiple MerchantBackendConfigurations in your app. Additionally, you may construct a Consumer if you wish to identify the payer. This enables saving payment details for further payments. If you are using a custom Configuration, you may use the PaymentOrder or Consumer arguments if you wish. Additionally you can use a generic data argument (of type Any, though on Android it must implement either Parcelable or Serializable). By default, the existence of the Consumer argument controls whether the consumer identfication happens, but you can also specify it explicitly. sequenceDiagram participant User participant App participant SDK User -&gt;&gt; App : Begin payment rect rgba(138, 205, 195, 0.1) note right of App: Build Payment Order alt Android App -&gt;&gt; SDK: PaymentOrder(...) or PaymentOrder.Builder()...build() SDK --&gt;&gt; App: paymentOrder else iOS App -&gt;&gt; SDK: SwedbankPaySDK.PaymentOrder.init(...) SDK --&gt;&gt; App: paymentOrder end end opt Build Consumer alt Android App -&gt;&gt; SDK: Consumer(...) SDK --&gt;&gt; App: consumer else iOS App -&gt;&gt; SDK: Consumer.init(...) SDK --&gt;&gt; App: consumer end end rect rgba(138, 205, 195, 0.1) note right of App: Create and configure payment UI component alt Android App -&gt;&gt; SDK: PaymentFragment.ArgumentsBuilder()...build() SDK --&gt;&gt; App: arguments App -&gt;&gt; SDK: PaymentFragment() SDK --&gt;&gt; App: paymentFragment App -&gt;&gt; SDK: paymentFragment.arguments = arguments App -&gt;&gt; SDK: activity.paymentViewModel.[rich]state.observe(...) else iOS App -&gt;&gt; SDK: SwedbankPaySDKController.init(...) SDK --&gt;&gt; App: swedbankPaySDKController App -&gt;&gt; SDK: swedbankPaySDKController.delegate = ... end end App -&gt;&gt; App : Show payment UI component Merchant Backend: Discover Endpoints This is an implementation detail of the Merchant Backend configuration; it is not necessary to replicate this step in a your own systems. The Merchant Backend is specified with a single static entry point; other interfaces are accessed by following links from previous responses. A request to the static entry point currently returns links to the consumers and paymentorders endpoints. In most cases the response to this request can be cached, and thus only needs to be made once per App session. sequenceDiagram participant SDK participant Backend SDK -&gt;&gt; Backend: GET / Backend --&gt;&gt; SDK: { \"consumers\": \"[consumers]\", \"paymentorders\": \"[paymentorders]\" } Optional Checkin Optionally, the payment beings with a “checkin” flow, where the payer is identified. This allows for saving payment details for later payments. The checkin flow is simple: first a request is made to begin a checkin session, then an html page is constructed using the script link received from that request, and when that page successfully identifies the payer, a javascript callback is received. The consumerProfileRef received from that callback is then used when creating the payment order in the next step. sequenceDiagram participant Conf as Configuration participant SDK participant Backend participant SwedbankPay as Swedbank Pay participant WebView participant User SDK -&gt;&gt; Conf: postConsumers alt Merchant Backend Conf -&gt;&gt; Backend: POST [consumers] { \"operation\": \"initiate-consumer-session\", ... } else Custom Backend Conf -&gt;&gt; Backend: Custom protocol end Backend -&gt;&gt; SwedbankPay: POST /psp/consumers/ { \"operation\": \"initiate-consumer-session\", ... } SwedbankPay --&gt;&gt; Backend: { \"operations\": [{ \"rel\": \"view-consumer-identification\", \"href\": \"[consumer-script]\" }] } alt Merchant Backend Backend --&gt;&gt; Conf: { \"operations\": [{ \"rel\": \"view-consumer-identification\", \"href\": \"[consumer-script]\" }] } else Custom Backend Backend --&gt;&gt; Conf: Custom protocol end Conf --&gt; SDK: ViewConsumerIdentificationInfo SDK -&gt;&gt; WebView: &lt;html&gt;...&lt;script src=\"[consumer-script]\"&gt;...payex.hostedView.consumer(...)...&lt;/html&gt; WebView -&gt;&gt; User: Show checkin UI User -&gt;&gt; WebView: Enter personal details WebView -&gt;&gt; SDK: onConsumerIdentified({ \"consumerProfileRef\" : \"...\" }) SDK -&gt;&gt; SDK: store consumerProfileRef for checkout Begin Checkout With the Payment Order ready, the SDK begins the “checkout” flow, where the actual payment is made. The checkout flow begins similarly to the checkin flow: a request is made to create a Payment Order, then an html page is constructed and displayed to the user. In the case of the “create Payment Order” request, however, it is expected that the Merchant Backend processes the request and response: Setting of payeeId and paymentReference in particular seems better left to the backend; similarly the backend is probably interested in storing the id of the created Payment Order for capture and other possible operations. At this point the user is interacting with the payment menu; the next step depends on the exact payment method chosen. sequenceDiagram participant Conf as Configuration participant SDK participant Backend participant SwedbankPay as Swedbank Pay participant WebView participant User SDK -&gt;&gt; Conf: postPaymentorders alt Merchant Backend Conf -&gt;&gt; Backend: POST [paymentorders] { paymentorder: {...} } else Custom Backend Conf -&gt;&gt; Backend: Custom protocol end Backend -&gt;&gt; Backend: Preprocess payment order (e.g. create payeeReference) Backend -&gt;&gt; SwedbankPay: POST /psp/paymentorders/ { paymentorder: {...} } SwedbankPay --&gt;&gt; Backend: { \"id\": \"...\", \"operations\": [{ \"rel\": \"view-paymentorder\", \"href\": \"[paymentorder-script]\" }], ... } Backend -&gt;&gt; Backend: Postprocess payment order (e.g. store id) alt Merchant Backend Backend --&gt;&gt; Conf: { \"id\": \"...\", \"operations\": [{ \"rel\": \"view-paymentorder\", \"href\": \"[paymentorder-script]\" }], ... } else Custom Backend Backend -&gt;&gt; Conf: Custom protocol end Conf --&gt;&gt; SDK: ViewPaymentOrderInfo SDK -&gt;&gt; WebView: &lt;html&gt;...&lt;script src=\"[paymentorder-script]\"&gt;...payex.hostedView.paymentMenu(...)...&lt;/html&gt; WebView -&gt;&gt; User: Show checkout UI User -&gt;&gt; WebView: Choose payment method and enter details External Content While some payments may be completed inside the payment menu in their entirety, others will require interaction with some external web page, and/or application. In most cases external web pages can be opened in the same web view used to show the payment menu, and when they want to return to the payment menu, they signal this by attempting to navigate to the url set as paymentUrl in the Payment Order. We intercept this navigation, and reload the payment menu, as appropriate. When an external application is launched, the flow signals the return to the payment menu by again opening paymentUrl. This time, however, we cannot intercept it. The system then handles opening that url the usual way. For maximum compatibility, paymentUrl is a regular https url. On iOS, paymentUrl is designed to be in format that is registered as a Universal Link to the app, which causes the system to open paymentUrl in the app. The example backend serves a /.well-known/apple-app-site-association file that assigns the paths under /sdk-callback/ to be Universal Links to the application set in the configuration. The SDK defaults to building paymentUrl under this path. Combined with the proper configuration in the app and backend, this makes paymentUrls be Universal Links. On Android 6.0 and later it is possible to do a similar thing, but it is much more difficult to set up on the server side, and we need a solution for earlier versions anyway. Therefore, on Android, paymentUrl will be opened in the browser. Finally, in our testing, we have seen that certain external pages used with certain payment instruments do not work correctly inside a web view, and must be shown in the browser instead. If we determine that the external page is one of these pages, it is opened in the browser. Again, return to the payment menu is signaled by a navigation to paymentUrl, which will, in this case be opened in the browser on both platforms (but see below for iOS details). sequenceDiagram participant App participant SDK participant WebView participant System participant Browser participant Ext as External App participant User WebView -&gt;&gt; SDK: Navigate to another page alt Navigation is to a regular http(s) URL SDK -&gt;&gt; SDK: Check web view compatibility alt Compatible with Web View SDK -&gt;&gt; WebView: Proceed with navigation normally ① WebView -&gt;&gt; SDK: Navigate to paymentUrl ② SDK -&gt;&gt; SDK: Recognize paymentUrl SDK -&gt;&gt; WebView: Cancel navigation else Not Compatible with Web View SDK -&gt;&gt; WebView: Cancel navigation SDK -&gt;&gt; System: Open URL System -&gt;&gt; Browser: Open URL in Browser User -&gt;&gt; Browser: Handle external flow Browser -&gt;&gt; User: Handle external flow Browser -&gt; Browser: Open paymentUrl in Browser end else Navigation is to an app-specific URL (custom scheme, Android Deep Link/App Link, iOS Universal Link) SDK -&gt;&gt; WebView: Cancel navigation SDK -&gt;&gt; System: Open URL System -&gt;&gt; Ext: Launch URL-appropriate app User -&gt;&gt; Ext: Handle external flow Ext -&gt;&gt; User: Handle external flow Ext -&gt;&gt; System: Open paymentUrl alt Android System -&gt;&gt; Browser: Open paymentUrl in Browser ③ else iOS System -&gt;&gt; App: Launch app with paymentUrl ④ end end ① The same check is repeated for any further navigation inside the WebView ② All properly configured authentication flows must end up here ③ On Android, paymentUrl is an https URL that redirects to an Android Intent URL. ④ On iOS, paymentUrl is a Universal Link. When an app open a Universal Link to another app, it should be routed to that app instead of the Browser. However, Universal Links are finicky things, and it is not impossible that it gets opened in the Browser instead. In that case, the flow continues with “paymentUrl opened in Browser” below instead. Return From Browser If the external flow ended with paymentUrl opened in the browser, we need a way to get back to the app. On Android, this is simple to accomplish by redirecting to an Android Intent Uri; the SDK and backend work together to construct the Intent Uri to point to the correct app. This Intent will cause the app to be brought back into focus, and the PaymentFragment will recognize the paymentUrl and reload the payment menu. We still need to have an actual html page served at paymentUrl, though, as the redirect may be blocked in some scenarios. If that happens, the page will also contain a link the user can tap on, which opens the same Intent Uri. On iOS, the situation is more complicated. As mentioned above, paymentUrl is a Universal Link, and navigation to it should be routed to the app. However, Universal Links are a bit unreliable, in that they require certain conditions to be fulfilled; otherwise, they are opened in the browser like regular links. Unfortunately, one of the conditions, namely that the navigation originated from the user pressing on a link, is often not fulfilled in the external pages used by payment methods. Therefore, we must have a system that works correctly, even if paymentUrl is opened in the browser. On iOS, we use the following system: paymentUrl redirects (301) to a trampoline page hosted at a different domain the trampoline page has a button pressing that button navigates to paymentUrl but with an extra parameter paymentUrl with the extra parameter redirects to a custom-scheme url The trampoline page is on a different domain due to another requirement of Universal Links: they are only routed to the app if opened from a different domain. Now, both paymentUrl and paymentUrl with the extra parameter are Universal Links, and as the second navigation is “forced” to originate from User Interaction, it should be routed to the app. However, if something still goes sideways, and experience says it can, and even this “augmented” paymentUrl is opened in the browser, then we finally redirect to a custom-scheme url, which has no choice but to be routed to the app. The reason we do not do this immediately is because using custom schemes triggers a confirmation dialog the developer has no control over, and we want to avoid that. When the app is then launched with paymentUrl, the augmented paymentUrl, or the custom-scheme url constructed from paymentUrl, the Application Delegate must then forward the url to the SDK using the SwedbankPaySDK.open(url:) or SwedbankPaySDK.continue(userActivity:) method, as the case may be. The SDK will then proceed to reload the payment menu as appropriate. This system does have the drawback of requiring a custom url scheme, which will almost always be left unused. As we gather more data, we may be able to remove the requirement in the future. Please see this diagram for an illustration of the different steps in the process: sequenceDiagram participant User participant Browser participant Backend participant Trampoline as Universal Link Trampoline participant System participant SDK participant App alt Android Browser -&gt;&gt; Merchant: Load paymentUrl Merchant --&gt;&gt; Browser: Html document that redirects to an Intent URL ⑤ Browser -&gt;&gt; Browser: Parse Android Intent URL Browser -&gt;&gt; System: Start activity with the parsed Intent, where the Intent Uri is paymentUrl System -&gt;&gt; SDK: Start callback activity SDK -&gt;&gt; SDK: Recognize paymentUrl else iOS alt Happiest Path Browser -&gt;&gt; Browser: Recognize that paymentUrl is a Universal Link for App Browser -&gt;&gt; System: Launch app with paymentUrl ⑥ else Less Happy Path Browser -&gt;&gt; Merchant: Load paymentUrl Merchant --&gt;&gt; Browser: 301 Moved Permanently ⑦ Browser -&gt;&gt; Trampoline: Load trampoline page Browser -&gt;&gt; User: Show trampoline page ⑧ User -&gt;&gt; Browser: Press \"Return to App\" button Browser -&gt;&gt; Browser: Navigate to paymentUrl&amp;fallback=true alt Less Happy Path (contd.) Browser -&gt;&gt; Browser : Recognize that paymentUrl&amp;fallback=true is a Universal Link for App Browser -&gt;&gt; System : Launch app with paymentUrl&amp;fallback=true else Sad Path ⑨ Browser -&gt;&gt; Merchant: Load paymentUrl&amp;fallback=true Merchant --&gt;&gt; Browser: 301 Moved Permanently ⑩ Browser -&gt;&gt; User: Show confirmation dialog User -&gt;&gt; Browser: Accept app launch Browser -&gt;&gt; System: Launch app with customscheme://[paymentUrl-without-scheme]&amp;fallback=true end end System -&gt;&gt; App: Call URL handler ⑪ App -&gt;&gt; SDK: SwedbankPaySDK.open(url:) or SwedbankPaySDK.continue(userActivity:) SDK -&gt;&gt; SDK: Recognize paymentUrl or modified paymentUrl end ⑤ intent://[paymentUrl-without-scheme]/#Intent;scheme=[paymentUrl-scheme];action=com.swedbankpay.mobilesdk.VIEW_PAYMENTORDER;package=[app-package];end; ⑥ Universal Links have certain conditions for them to be activated. One of these is that the navigation must have started from a user interaction. As many 3D-Secure pages have an automatic redirect, this can cause the link to be opened in the Browser instead. Therefore the chance for this path to be taken is low. (N.B. It does seem than iOS 13.4 has made some change to the logic, causing this happiest path to be hit more often.) ⑦ Location: https://ecom.stage.payex.com/externalresourcehost/trampoline?target=paymentUrl%26fallback=true ⑧ The “Trampoline Page” has a button, which links back to paymentUrl, but with an additional query parameter (actually this extra parameter is added by the backend when generating the redirect to the trampoline page). Importantly, the Trampoline is on a different domain than paymentUrl, as Universal Links are only forwarded to the app if they are opened from a different domain than the link’s domain. ⑨ All cases should be caught by one of these two flows. However, Universal Links remain finicky, and therefore it is good to provide one final fallback. ⑩ Location: customscheme://[paymentUrl-without-scheme]&amp;fallback=true. customscheme is a URL scheme unique to the App. ⑪ Universal links result in a call to UIApplicationDelegate.application(_:continue:restorationHandler:), while custom-scheme links result in a call to UIApplicationDelegate.application(_:open:options:). Payment Completion When the payment is completed, possibly after reloading the payment menu after a navigation to paymentUrl, the payment menu will report success by attempting to navigate to completeUrl. The SDK intercepts this and invokes a callback to your app. It is your app’s responsibility to then remove the payment UI from view and notify the user. Similarly, if the payment is cancelled, the SDK intercepts the navigation to cancelUrl and reports the cancellation status to your app. sequenceDiagram participant User participant App participant SDK participant WebView SDK -&gt;&gt; WebView: Reload &lt;html&gt;...&lt;script src=\"[paymentorder-script]\"&gt;...payex.hostedView.paymentMenu(...)...&lt;/html&gt; WebView -&gt;&gt; SDK: Navigate to completeUrl SDK -&gt;&gt; WebView: Cancel navigation alt Android SDK -&gt;&gt; SDK: PaymentViewModel.state &lt;- SUCCESS SDK -&gt;&gt; App: Observer&lt;PaymentViewModel.State&gt;.onChanged(SUCCESS) else iOS SDK -&gt;&gt; App: SwedbankPaySDKDelegate.paymentComplete() end App -&gt;&gt; App: Remove payment UI component App -&gt;&gt; User: Report payment result Back: Other Features Using a Web View Instead",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/process-diagrams.html"
  },{
    "title": "Public Migration Key",
    "text": "Key size: 4096 bits RealName: SwedbankPay UserID: SwedbankPay &lt;support.ecom@payex.com&gt; Fingerprint: 49BE 1843 4104 3DC6 DB36 9F77 67F0 0E68 7F80 104A Key ID: 67F0 0E68 7F80 104A To encrypt files with Swedbank Pay’s Public Migration Key, you need copy and paste it from below and save it to a file called SwedbankPay.key. Public Key 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 -----BEGIN PGP PUBLIC KEY BLOCK----- mQINBF9kf58BEADlsQpmtsDwieUC/Zw0Vrfsc5/wT3BpIwJoMEK5YkjwrX4vx3yC pVi7+fJgpZ8DZjmkZf+i5MiFCbS8myJ/2een3ngOhEoMVjbWP01nQbW4MVoGL1yk nB3TOs/oC6xg/Aa0WlpOTrqoSvXLtrUKnWySmXgCBiUVKBaN1rfHYS4A39AXlL/H g1n1OiW4u9psgJk3GRBXXV2WE+J+qMuDUI1kwj+IbB/CDCXJ0ULXHHLY3QoSmAoy zRAJzq470jcrygaotgXvFmq3HJxXTquonxDtXXr7GqctsFVAeXvJM9JHZoOP/t3/ lvZiiNQU42yfzOZJkNXoyPopsdWHynBUiAEy3GQdjwapgRIO2Jm6LDuWUI98n+mI 5dXrTVGXKzoqzBFMdvJ8GBMMeGBW8WxjWF8eiqI5foMex8GS150aor930VIFlOk/ PapmhjXEjvmR7fNuNqeD23CtSR+/vViD7VnCmpVtwvPiQlIFsPy94Se6IL0Rnxke iStodqloOXbxtYAzTEcdxZykm6NK6UTyB1kL0h4+2D32p7FRXdbYhXj6nUF1THaO X/EaNThP+8m3eoeiVIDYW3TPAfVwFfWFSVOc1HG3osSPZ9TkneBlzglhQKkvyTcq yxvnhIpS3k8lvKoUllx6H6TWndAD3aLXvv7wS3UugCuCzUzK9yAy0+YXNQARAQAB tCRTd2VkYmFua1BheSA8c3VwcG9ydC5lY29tQHBheWV4LmNvbT6JAk4EEwEIADgW IQRJvhhDQQQ9xts2n3dn8A5of4AQSgUCX2R/nwIbAwULCQgHAgYVCgkICwIEFgID AQIeAQIXgAAKCRBn8A5of4AQShebEADJ9cfBbgNQb9IydtM2Nz+KClwO9sHls7vh XQL0C7m2CRNGa2efSyqYpSoieXoDi+2nOT079aI8bfqK0TQr9F2Ygy1udPrAzOER xxBPIMfGbWnkiE1L6e1apVXy1EBmxnN3l6SK70iJ7bfQzddQjVn1FvNlPL6Iqim5 FNsK7wf+4TR20BjrYfTJ8/5ANQGl9vdqTqsEih1i3M1Td4cUhRrs4Q0vsxeiSwcJ 8lcZ9vTEvumJXIF2JJlN1y7hGINgHlpOYV6HpxkZcl4akXv0AtqHem4+FGR8xFnI XYhR0vaPSx6b2PPWGjIRuUqfSW271pZn4aPh55aJzxhe7md+zLwjU2/pbtqgIrBm BB8zmYT6N7GByLSqPlFxZJLf3CJT47vXzX6CqWxQZyVE4XdexYEG9ZHUc2hsrBEP Cn130r7qMArGWg7PCDQ3SQmWzjetgqb4LJNv1M5skNDEG9IOXeMAgu1NGQlSbR4I Wwspc+SdicXk/s19vdY+aQTCSQmqWiD/oNUy8UI9JruiX3aLzlYCjr9lhfLY0eYw UIRWgugbOwJTLM0Cth2OWAc8vPBaFXRpptL0UuzvcJAklLdmX40ataH1EznqFsaf qk52sqiyzX1qSUp6C3JkBrZioHUoo3eggPFFLJJF18ViCNhLGRhCVNx3jY5u+7BF 0Ojs1omadLkCDQRfZH+fARAAzh3fVoxL1xALjcPgwJjkZG0nmwFo7xDmw3makyzx ptNfRZrW/7xgN9V5txCMEe6A1ztUSPZe6AxKDkNADjfKRc+IV2gd/Nk3rVec7jHV WSvFCPm59NzoWT08F380AfMQtvddyq/ZfOrfg/HgdoXr0Uzz+SoPBqXueK+m7xYl zTsJ/5JJvU8ujlsFJSjXFVomyu6+I0+kECDWip/FcwbQWMlfYNHMFMa6mW13rE1y 1XDILnlnULIEx7do0fZxEUSmX8zRHrYRb9M4Iwe/azvBuYFYRtr2ZKcYfH+tYafp IXwOqlCUwwMNdufJ8XnGywARC2uMtSW5K1lr3UoJBgUbUV+llJ/oqhUaOUHYjw6F UXHScC7MYphYbz87M8HnTdZ6RJ6puRgVSIfWoHMVHSLsDyKUh6yrf5CYUOd/GTFu xxcJywmpKemYYin4Uv6N9Uy2gt8bXuz9km0KS7jG1wXqS0QH/Bdg6k2UBnBfDEHi tNf2XQ8hHr+GP3wmzhtmcGi0TcRk8K+H02NZoKiH88cjCwmyW9QIPM8BgwaJKiM2 pWUZ4rz1KVKtfLJp0nVCS/JlWsWyAhAEkrEbeOCmw9ByhvlX7KP2MW4Wbfsbown2 5CNf64QxXwLfyOqbXMymIxFUj3G4e/XIeMcs7eir6WShIEQL1UBeVhw/JBtv0RuZ 5TkAEQEAAYkCNgQYAQgAIBYhBEm+GENBBD3G2zafd2fwDmh/gBBKBQJfZH+fAhsM AAoJEGfwDmh/gBBKDd4QAK6WChVNivQTu0K3mZmljAS1fKBEaLpeLTl5D0tDhtgm yFslqqfyOmNeSg0G0FJgh1dbjRObCmHrSAerD9rGE+kNlwwsXdX7kFEEvNA7prew x9BdOs9yV5sWk/lRh6Eup/IaTRgu/0U/B6TwfKCmI/+dQeDtTsfO0ULR5tyEp0rg aBTkB+3fSSQx/hgWMzk9h1iTxT2DgcQMTiWVCm+mSiA7RBrsYkt/w0QnH1kib37k sIHM5t67tlIph7AhJS0LOzWZSsZ6aC72IoixcBp3AyKj0TnkrgTtyp8QucpFCcJv xjklcYBt4dGIFGid1iPDz2yN+NkQKKtEZbC581H4jkyI1XTZEgXImr/ZtEYigqNS ucSWraT8bRvB2NvuChXtq8qGVcK6A+8X4eVfKEgB0bwsqxOJcV95XnIBxXc/B8JH 2fsAviMGJpok8cLWC0HzMP+Q4zYNxdZqJbYm07gQWU71ToSVGMGS1Ccm0EB48eQ9 A3IrhvMv++B5QhtUgPkc9AviShBb/GIkctH9SL/JhOQCHaNgGwQjDaMku5bt9A5S 3rEYz2sYb76Z9YPSH6hQfn7o6p5YOyPCxViXQVYMOYD7wi+TG593ME7gslvkvDqu mhehY+P6ozgVKhPQOIXmV+449jvBnL7Wn4wKIaRK55jGo0J1RfW9oZR7CrYWGyxv =U4Wq -----END PGP PUBLIC KEY BLOCK----- To encrypt files with Swedbank Pay’s Public Migration Key, you must import it with the following command: Import Key 1 gpg2 --import SwedbankPay.key After this is imported, you should verify the key with comparing the fingerprint on key, with the fingerprint on this information site. If this is a match, you should mark the key as trusted with the following command: Trust Key 1 gpg2 --edit-key SwedbankPay Select trust and 5 You can now encrypt files with Swedbank Pay’s Public Migration Key with the following command: Encrypt File 1 gpg2 --armor --encrypt -r SwedbankPay CARDDATA.csv When the above command has executed, the gpg tool will have created a file named CARDDATA.csv.asc, which contains the encrypted data.",
    "tags": "",
    "url": "/checkout-v3/resources/public-migration-key.html"
  },{
    "title": "Purchase Payments",
    "text": "Purchase Payments The Purchase operation is used in all common purchase scenarios. It is the default in the SDK, so you usually do not need to specify it. Android 1 2 3 4 val paymentOrder = PaymentOrder( operation = Operation.PURCHASE ... ) iOS 1 paymentOrder.operation = .Purchase",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/core/purchase.html"
  },{
    "title": "Purchase",
    "text": "Purchase A Purchase payment is a straightforward way to charge the card of the payer. It is followed up by posting a capture, cancellation or reversal transaction. An example of a request is provided below. Each individual field of the JSON document is described in the following section. Purchase Operation Posting a payment (operation Purchase) returns the options of aborting the payment altogether or creating an authorization transaction through the redirect-authorization hyperlink. Request 1 2 3 4 5 { \"payment\": { \"operation\": \"Purchase\" } } Card Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 POST /psp/creditcard/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"generatePaymentToken\": false, \"generateRecurrenceToken\": false, \"generateUnscheduledToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\", }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or123\", \"subsite\": \"mySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"cardholder\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"homePhoneNumber\": \"+4787654321\", \"workPhoneNumber\": \"+4776543210\", \"shippingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"billingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"accountInfo\": { \"accountAgeIndicator\": \"01\", \"accountChangeIndicator\": \"01\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", \"addressMatchIndicator\": \"false\" } }, \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } }, \"creditCard\": { \"rejectCreditCards\": false, \"rejectDebitCards\": false, \"rejectConsumerCards\": false, \"rejectCorporateCards\": false, \"no3DSecure\": false } } Show fields Hide fields Required Field Type Description check payment object The payment object check operation string Determines the initial operation, defining the type of payment order created. check intent string Authorization. Reserves the amount, and is followed by a Cancel or Capture of funds. AutoCapture. A one phase option that enables the Capture of funds automatically after authorization.   paymentToken string If a paymentToken is included in the request, the card details stored in the paymentToken will be prefilled on the payment page. The payer still has to enter the cvc to complete the purchase. This is called a “One Click” purchase. check currency string NOK, SEK, DKK, USD or EUR. check prices array The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase.   generatePaymentToken boolean true or false. Set this to true if you want to create a paymentToken for future use as One Click.   generateRecurrenceToken boolean true or false. Set this to true if you want to create a recurrenceToken for future use Recurring purchases (subscription payments).   generateUnscheduledToken boolean true or false. Set this to true if you want to create a unscheduledToken for future use Unscheduled purchases (merchant initiated transactions). check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. check︎ urls object The object containing URLs relevant for the payment. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   cardholder object Optional. Cardholder object that can hold information about a buyer (private or company). The information added increases the chance for frictionless flow and is related to 3-D Secure 2.0..   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   homePhoneNumber string Optional (increased chance for frictionless flow if set)   workPhoneNumber string Optional (increased chance for frictionless flow if set)   shippingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set)   lastName string Optional (increased chance for frictionless flow if set)   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   billingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   accountInfo object Optional (increased chance for frictionless flow if set). If cardholder is known by merchant and have some kind of registered user then these fields can be set.   accountAgeIndicator string Optional (increased chance for frictionless flow if set). Indicates the length of time that the payments account was enrolled in the cardholder’s account with merchant.01 (No account, guest)02 (Created during transaction)03 (Less than 30 days)04 (30-60 days)05 (More than 60 days)   accountChangeIndicator string Optional (increased chance for frictionless flow if set). Length of time since the cardholder’s account information with the merchant was changed. Including billing etc.01 (Changed during transaction)02 (Less than 30 days)03 (30-60 days)04 (More than 60 days)   accountPwdChangeIndicator string Optional (increased chance for frictionless flow if set). Indicates the length of time since the cardholder’s account with the merchant had a password change or account reset.01 (No change)02 (Changed during transaction)03 (Less than 30 days)04 (30-60 days)05 (More than 60 days)   shippingAddressUsageIndicator string Optional (increased chance for frictionless flow if set). Indicates when the shipping address used for this transaction was first used with the merchant.01 (This transaction)02 (Less than 30 days)03 (30-60 days)04 (More than 60 days)   shippingNameIndicator string Optional (increased chance for frictionless flow if set). Indicates if the Cardholder Name on the account is identical to the shipping Name used for this transaction.01 (Account name identical to shipping name)02 (Account name different than shipping name)   suspiciousAccountActivity string Optional (increased chance for frictionless flow if set). Indicates whether merchant has experienced suspicious activity (including previous fraud) on the cardholder account.01 (No suspicious activity has been observed)02 (Suspicious activity has been observed)   addressMatchIndicator boolean Optional (increased chance for frictionless flow if set) Allows the 3-D Secure Requestor to indicate to the ACS whether the cardholder’s billing and shipping address are the same.   riskIndicator object This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   creditCard object The credit card object.   rejectDebitCards boolean true if debit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectCreditCards boolean true if credit cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectConsumerCards boolean true if consumer cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   rejectCorporateCards boolean true if corporate cards should be declined; otherwise false per default. Default value is set by Swedbank Pay and can be changed at your request.   no3DSecure boolean true if 3-D Secure should be disabled for this payment in the case a stored card is used; otherwise false per default. To use this feature it has to be enabled on the contract with Swedbank Pay.   noCvc boolean true if the CVC field should be disabled for this payment in case a stored card is used; otherwise false per default. This feature is commonly used when One-Click Payments is enabled. To use this feature it has to be enabled on the contract with Swedbank Pay. Card Payment Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"CreditCard\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"rel\": \"update-payment-abort\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"rel\": \"redirect-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"text/html\" }, { \"rel\": \"view-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"view-payment\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"direct-authorization\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\", \"method\": \"POST\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/purchase.html"
  },{
    "title": "Recur",
    "text": "Recur A recur payment is a payment which uses a recurrenceToken generated through a previous payment in order to charge the same card or account at a later time. As the name implies, these payments are used for transactions which happen on a recurring basis. Common use cases could be subscriptions for magazines, newspapers or streaming services. Please note that you need to do a capture after sending the recur request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the recurrenceToken is generated and connected. You do that by adding the field generateRecurrenceToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. (Read more about deleting the recurrence token here.) Initial Recur Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateRecurrenceToken\": true, \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateRecurrenceToken boolean true or false. Set to true if you want to generate an recurrenceToken for future recurring purchases.   check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.     implementation string Indicates which implementation to use.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.     streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)     zipCode string The postal number (ZIP code) of the payer.     city string The city of the payer.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Recur Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. recurrenceToken string The generated recurrence token if operation: recur or generaterecurrenceToken: true was used. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token The token can be retrieved by performing a GET towards paid. It will be visible under tokens in the paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json As an alternative, you can also retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Recurring Purchase When you are ready to perform the recurring purchase, simply add the recurrenceToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Recurring Purchase Please remember that the recur request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the recurring purchase. You can also Cancel it if needed. Recur Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Recur\", \"recurrenceToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Recurrence\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"productName\": \"Checkout3\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] } } Show fields Hide fields Required Field Type Description check payment object The payment object. check operation object Recur. check recurrenceToken string The created recurrenceToken if operation: Recur or generateRecurrenceToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO, da-DK, en-US or fi-FI. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/recur.html"
  },{
    "title": "Recur",
    "text": "Recur A recur payment is a payment which uses a recurrenceToken generated through a previous payment in order to charge the same card or account at a later time. As the name implies, these payments are used for transactions which happen on a recurring basis. Common use cases could be subscriptions for magazines, newspapers or streaming services. Please note that you need to do a capture after sending the recur request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the recurrenceToken is generated and connected. You do that by adding the field generateRecurrenceToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. (Read more about deleting the recurrence token here.) Initial Recur Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateRecurrenceToken\": true, \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateRecurrenceToken boolean true or false. Set to true if you want to generate an recurrenceToken for future recurring purchases.   check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.     implementation string Indicates which implementation to use.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.     streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)     zipCode string The postal number (ZIP code) of the payer.     city string The city of the payer.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Recur Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. recurrenceToken string The generated recurrence token if operation: recur or generaterecurrenceToken: true was used. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token The token can be retrieved by performing a GET towards paid. It will be visible under tokens in the paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json As an alternative, you can also retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Recurring Purchase When you are ready to perform the recurring purchase, simply add the recurrenceToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Recurring Purchase Please remember that the recur request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the recurring purchase. You can also Cancel it if needed. Recur Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Recur\", \"recurrenceToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Recurrence\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"productName\": \"Checkout3\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] } } Show fields Hide fields Required Field Type Description check payment object The payment object. check operation object Recur. check recurrenceToken string The created recurrenceToken if operation: Recur or generateRecurrenceToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/features/optional/recur.html"
  },{
    "title": "Recur",
    "text": "Trustly Recurring A service where payer interaction is not possible, where the payment is pulled from the payer’s bank account by sending a request to Trustly. warning Please note that this feature is only available through Payment Order, and the service is asynchronous which will require a compatible implementation. Using a similar implementation to Credit Card Recur will therefore not work. Prerequisites Prior to making any server-to-server requests, you need to make sure the directDebitEnabled setting in your Trustly contract is set to true. Then you need to supply the payment instrument details and a payment token to Swedbank Pay by initial purchase or select account verification. Note that the email field must be set, as this is a required parameter. If the email is missing, Trustly will not be available for selection from the payments menu. If you enable callbackEnabled and send a callbackUrl, you can expect to get a callback when the payment is finised. The alternative is setting up polling to poll for a state. There are two ways to initiate recurring payments procedures, depending on if you want to make an initial charge or not: Initiate a recurring payment flow and charge the bank account. This is done by creating a “Purchase Payment” and generating a recurrence token. Initiate a recurring payment flow without charging the bank account. This is done by creating a “Verify Payment” and generating a recurrence token. Generate Recurrence Token When posting a Purchase payment, you need to make sure that the field generateRecurrenceToken is set to true. Field 1 \"generateRecurrenceToken\": true When posting a Verify payment, you need to make sure that the the field generateRecurrenceToken is set to true. Field 1 \"generateRecurrenceToken\": true Creating The Payment You need to POST a Purchase payment / and generate a recurrence token (for later recurring use). As mentioned, the email parameter MUST be set for trustly to appear as an available option. You need to POST a Verify payment / and generate a recurrence token (for later recurring use). As mentioned, the email parameter MUST be set for trustly to appear as an available option. Delete Recurrence Token You can delete a created recurrence token. Please see technical reference for details here. Recurring Purchases When you have a Recurrence token, you can use the same token in a subsequent recurring payment POST. This will be a server-to-server affair, as we have both payment instrument details and recurrence token from the initial payment. Verify A Verify payment lets you post verifications to confirm the validity of one of your bank accounts, without reserving or charging any amount. This option is often used to initiate a recurring payment flow where you do not want to charge the payer right away.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/optional/recur.html"
  },{
    "title": "Recur",
    "text": "Recurring Payments A recurring payment enables you to charge a card without payer interaction. When an initial payment token is generated, subsequent payments are made through server-to-server requests. Prerequisites Prior to making any server-to-server requests, you need to supply the payment instrument details and a payment token to Swedbank Pay by initial purchase. Initiate a recurring payment flow and charge the credit card. This is done by creating a “Purchase Payment” and generating a recurrence token. Generate RecurrenceToken When posting a Purchase payment, you need to make sure that the field generateRecurrenceToken is set to true. Field 1 \"generateRecurrenceToken\": true Creating The Payment You need to POST a Purchase payment / and generate a recurrence token (safekeep for later recurring use). Retrieve The Recurrence Token You can retrieve the recurrence token by doing a GET request against the payment. You need to store this recurrenceToken in your system and keep track of the corresponding payerReference. Delete The Recurrence Token You can delete a created recurrence token. Please see technical reference for details here. Recurring Purchases When you have a Recurrence token stored away. You can use the same token in a subsequent recurring payment POST. This will be a server-to-server affair, as we have both payment instrument details and recurrence token from the initial payment. Please note that you need to do a capture after sending the recur request. We have added a capture section at the end of this page for that reason. Recur Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 POST /psp//payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Recur\", \"intent\": \"Authorization\", \"recurrenceToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Recurrence\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"metadata\": { \"key1\": \"value1\", \"key2\": 2, \"key3\": 3.1, \"key4\": false } } } Show fields Hide fields Required Field Type Description check payment object The payment object. check operation object Recur. check intent string The intent of the payment identifies how and when the charge will be effectuated. This determine the type transactions used during the payment process. Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. AutoCapture is a one phase-option that enable capture of funds automatically after authorization. check recurrenceToken string The created recurrenceToken, if operation: Verify, operation: Recur or generateRecurrenceToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The User-Agent string of the payer’s web browser. check language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. info Please note that this POSTrequest is made directly on the payment level, and will not create a payment order. Options after a payment You have the following options after a server-to-server Recur payment POST. Authorization (intent) Authorization (two-phase): If you want the credit card to reserve the amount, you will have to specify that the intent of the purchase is Authorization. The amount will be reserved but not charged. You will later (i.e. when you are ready to ship the purchased products) have to make a Capture or Cancel request. Capture (intent) AutoCapture (one-phase): If you want the credit card to be charged right away, you will have to specify that the intent of the purchase is AutoCapture. This is only allowed if the payer purchases digital products. The card will be charged and you don’t need to do any more financial operations to this purchase.​​​​​ General Defining CallbackURL: When implementing a scenario, it is optional to set a CallbackURL in the POST request. If callbackURL is set Swedbank Pay will send a postback request to this URL when the payer has fulfilled the payment. Verify A card verification lets you post verifications to confirm the validity of card information, without reserving or charging any amount. You can use it for generating paymentTokens, but do not use it when generating recurrenceTokens. This is because banks are rejecting recurring transactions where the amount is higher than the initial transaction. If the initial transaction amount is e.g. 1000, your subsequent recurring transaction amounts can be up to 1000 too, but 1001 will most likely be rejected. Since Verify transaction amounts are always 0, this can cause issues for you in the future. info Please note that all boolean credit card attributes involving rejection of certain card types are optional and set on contract level. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Test Verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"generatePaymentToken\": true, \"generateRecurrenceToken\": false, \"urls\": { \"hostUrls\": [ \"https://example.com\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"creditCard\": { \"rejectCreditCards\": false, \"rejectDebitCards\": false, \"rejectConsumerCards\": false, \"rejectCorporateCards\": false } } Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": {\"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/creditcard/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://ecom.externalintegration.payex.com/psp/creditcard/confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\", \"rel\": \"direct-verification\", \"contentType\": \"application/json\" } ] } Capture The capture transaction is where you ensure that the funds are charged from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s card, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture resource contains information about the capture transaction made against a card payment. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user in the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A human readable description of maximum 40 characters of the transaction payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the transaction in its current state. List Capture Transactions The captures resource list the capture transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a creditcard payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [ captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/recur.html"
  },{
    "title": "Recur",
    "text": "Recur A recur payment is a payment which uses a recurrenceToken generated through a previous payment in order to charge the same card or account at a later time. As the name implies, these payments are used for transactions which happen on a recurring basis. Common use cases could be subscriptions for magazines, newspapers or streaming services. Please note that you need to do a capture after sending the recur request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the recurrenceToken is generated and connected. You do that by adding the field generateRecurrenceToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. (Read more about deleting the recurrence token here.) Initial Recur Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateRecurrenceToken\": true, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateRecurrenceToken boolean true or false. Set to true if you want to generate an recurrenceToken for future recurring purchases.   check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.     implementation string Indicates which implementation to use.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.     streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)     zipCode string The postal number (ZIP code) of the payer.     city string The city of the payer.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Recur Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. recurrenceToken string The generated recurrence token if operation: recur or generaterecurrenceToken: true was used. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token You can retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Recurring Purchase When you are ready to perform the recurring purchase, simply add the recurrenceToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Recurring Purchase Please remember that the recur request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the recurring purchase. You can also Cancel it if needed. Recur Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Recur\", \"recurrenceToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Recurrence\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] } } Show fields Hide fields Required Field Type Description check payment object The payment object. check operation object Recur. check recurrenceToken string The created recurrenceToken if operation: Recur or generateRecurrenceToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Step 5: Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform create-paymentorder-capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:create-paymentorder-capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/recur.html"
  },{
    "title": "Recur",
    "text": "Recur A recur payment is a payment which uses a recurrenceToken generated through a previous payment in order to charge the same card or account at a later time. As the name implies, these payments are used for transactions which happen on a recurring basis. Common use cases could be subscriptions for magazines, newspapers or streaming services. Please note that you need to do a capture after sending the recur request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the recurrenceToken is generated and connected. You do that by adding the field generateRecurrenceToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. (Read more about deleting the recurrence token here.) Initial Recur Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateRecurrenceToken\": true, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateRecurrenceToken boolean true or false. Set to true if you want to generate an recurrenceToken for future recurring purchases.   check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.     implementation string Indicates which implementation to use.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.     streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)     zipCode string The postal number (ZIP code) of the payer.     city string The city of the payer.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Recur Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. recurrenceToken string The generated recurrence token if operation: recur or generaterecurrenceToken: true was used. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token You can retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Recurring Purchase When you are ready to perform the recurring purchase, simply add the recurrenceToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Recurring Purchase Please remember that the recur request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the recurring purchase. You can also Cancel it if needed. Recur Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Recur\", \"recurrenceToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Recurrence\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ] } } Show fields Hide fields Required Field Type Description check payment object The payment object. check operation object Recur. check recurrenceToken string The created recurrenceToken if operation: Recur or generateRecurrenceToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Also used in Payer Aware Payment Menu. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/recur.html"
  },{
    "title": "Redirect",
    "text": "The Enterprise Redirect integration consists of three main steps. Creating the payment order, displaying the payment menu, and capturing the funds. In addition, there are other post-purchase options you need. We get to them later on. Step 1: Create Payment Order When the purchase is initiated, you need to create a payment order. Start by performing a POST request towards the paymentorder resource with payer information and a completeUrl. We have added productName to the payment order request in this integration. You can find it in the paymentorder field. This is required if you want to use Digital Payments. If it isn´t included in your request, you won’t get the correct operations in the response. When productName is set to checkout3, digitalProducts will be set to false by default. Supported features for this integration are subscriptions (recur and unscheduled MIT), instrument mode, split settlement (subsite) and the possibility to use your own logo. There is also a guest mode option for the payers who don’t wish to store their information. When using Enterprise, the way to trigger this is to not include the payerReference or nationalIdentifier field in your paymentOrder request. You find them in the payer field in the example below. Sometimes you might need to abort purchases. An example could be if a payer does not complete the purchase within a reasonable timeframe. For those instances we have abort, which you can read about in the core features. You can only use abort if the payer has not completed an authorize or a sale. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Payment Order Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\" }, \"payer\": { \"digitalProducts\": false, \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" }, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.   check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.     implementation string Indicates which implementation to use.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. , check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     nationalIdentifier object The national identifier object.     socialSecurityNumber string The payer’s social security number.     countryCode string The country code of the payer.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     payerReference string A reference used in Enterprise integrations to recognize the payer in the absence of SSN and/or a secure login. Read more about this in the payerReference feature section.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.     billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.   ︎ streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)     zipCode string The postal number (ZIP code) of the payer.     city string The city of the payer.     countryCode string SE, NO, or FI.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Payment Order Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"integration\": \"Redirect\", \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/menu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for the payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is an initialized payment, the available operations are abort, update-order and redirect-checkout or view-checkout, depending on the integration. See Operations for details. Step 2: Display Payment Menu Among the operations in the POST paymentOrders response, you will find the redirect-checkout. This is the one you need to display payment menu. Response 1 2 3 4 5 6 7 8 9 10 11 { \"paymentOrder\": { \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/menu/b934d6f84a89a01852eea01190c2bbcc937ba29228ca7502df8592975ee3bb0d?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, ] } How It Looks The redirect link opens the payment menu on a new page with the payer information displayed above the menu. The payer can select their preferred payment instrument and pay. Once the payer has completed the purchase, you can perform a GET towards the paymentOrders resource to see the purchase state. You are now ready to capture the funds. Follow the link below to read more about capture and the other options you have after the purchase. Introduction Post-Purchase",
    "tags": "",
    "url": "/checkout-v3/enterprise/redirect.html"
  },{
    "title": "Redirect",
    "text": "Step 2: Display Redirect There are a couple of decisions to be made when you are presenting your payment UI. You have the choice between a payment menu with all the payment instruments you want to offer, or to present the paymentOrder with a single available payment instrument using instrument mode. Regardless of the number of instruments available to the payer, you also need to choose between Redirect and Seamless View. With Redirect, the payer is sent to a Swedbank Pay page where we handle the purchase process. The payer is redirected back to you when the purchase is completed or if the payer aborts the purchase. The page will be styled by Swedbank Pay. With Seamless View, the payer stays at your site and you initiate the Swedbank Pay purchase module in an iframe. The purchase component will be styled by Swedbank Pay. Among the operations in the POST paymentOrders response, you will find the redirect-checkout. This is the one you need to display payment menu. Response 1 2 3 4 5 6 7 8 9 10 11 { \"paymentOrder\": { \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/menu/b934d6f84a89a01852eea01190c2bbcc937ba29228ca7502df8592975ee3bb0d?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-checkout\", \"contentType\": \"text/html\" }, ] } How Redirect Looks The redirect link opens the payment menu on a new page with the payer information displayed above the menu. The payer can select their preferred payment instrument and pay. Once the payer has completed the purchase, you can perform a GET towards the paymentOrders resource to see the purchase state. You are now ready to capture the funds. Follow the link below to read more about capture and the other options you have after the purchase. Redirect Sequence Diagram info Note that in this diagram, the Payer refers to the merchant front-end (website) while Merchant refers to the merchant back-end. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant 3rdParty rect rgba(238, 112, 35, 0.05) activate Payer Payer -&gt;&gt;+ Merchant: Initiate Purchase deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: POST /psp/paymentorders (completeUrl, payer information) deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: rel:redirect-checkout deactivate SwedbankPay Merchant --&gt;&gt;- Payer: Redirect payer to SwedbankPay purchase page. activate SwedbankPay activate Payer Payer -&gt;&gt; Payer: Initiate Purchase step deactivate Payer SwedbankPay -&gt;&gt;+ Payer: Do purchase logic Payer -&gt;&gt; SwedbankPay: Do purchase logic deactivate Payer deactivate SwedbankPay opt Payer perform purchase out of iFrame activate Payer Payer -&gt;&gt; Payer: Redirect to 3rd party Payer -&gt;&gt;+ 3rdParty: Redirect to 3rdPartyUrl URL deactivate Payer 3rdParty --&gt;&gt;+ Payer: Redirect back to SwedbankPay deactivate 3rdParty Payer -&gt;&gt; Payer: Initiate Payment Menu Payer -&gt;&gt;+ SwedbankPay: Show Purchase UI page in iframe deactivate Payer end activate SwedbankPay SwedbankPay --&gt;&gt; Payer: Purchase status deactivate SwedbankPay alt If Purchase is completed activate Payer Payer -&gt;&gt; Payer: Redirect back to CompleteUrl Payer -&gt;&gt;+ Merchant: Check Purchase status deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: GET &lt;paymentorder.id&gt; deactivate Merchant SwedbankPay -&gt;&gt;+ Merchant: Status: Paid deactivate SwedbankPay end activate Merchant Merchant --&gt;&gt;- Payer: Show Purchase complete opt PaymentOrder Callback (if callbackUrls is set) ① activate SwedbankPay SwedbankPay -&gt;&gt; Merchant: POST Purchase Callback deactivate SwedbankPay end end rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;PaymentInstruments that support &lt;br&gt;Authorizations. end ① Read more about callback handling in the technical reference. Display Payment UI Post-Purchase",
    "tags": "",
    "url": "/checkout-v3/display-payment-ui/redirect.html"
  },{
    "title": "Redirect",
    "text": "Introduction When the payer starts the purchase process, you make a POST request towards Swedbank Pay with the collected Purchase information. This will generate a payment object with a unique paymentID. You either receive a Redirect URL to a hosted page or a JavaScript source in response. You need to redirect the payer to the payment page to enter the Swish registered mobile number. This triggers the initiation of a sales transaction. Swedbank Pay handles the dialog with Swish and the payer confirms the purchase in the Swish app. Swedbank Pay will redirect the payer’s browser to - or display directly in the iFrame - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. The payer is redirected to Swedbank Pay hosted pages and prompted to insert their phone number to initiate the sales transaction. Swish is a one-phase payment instrument that is based on sales transactions not involving capture or cancellation operations. link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. Step 1: Create A Purchase All valid options when posting in a payment with operation equal to Purchase. The Purchase example shown below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Redirect Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 POST /psp/swish/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"prices\": [ { \"type\": \"Swish\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [ \"https://example.com\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"ref-123456\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+46739000001\" } }, \"swish\": { \"enableEcomOnly\": false, \"paymentRestrictedToAgeLimit\": 18, \"paymentRestrictedToSocialSecurityNumber\": \"199710202392\" } } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string The operation that the payment is supposed to perform. The Purchase operation is used in our example. check intent string Sale. check currency string SEK. check prices object The prices array lists the prices related to a specific payment. check type string Swish. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase.   paymentAgeLimit integer Positive number sets required age limit to fulfill the payment. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object The urls resource lists urls that redirects users to relevant sites. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object An object holding information which, when available, will be prefilled on the payment page.   msisdn string Number will be prefilled on payment page, if valid. The mobile number must have a country code prefix and be 8 to 15 digits in length.   swish object An object that holds different scenarios for Swish payments.   enableEcomOnly boolean true if to only enable Swish on browser based transactions.; otherwise false to also enable Swish transactions via in-app payments.   paymentRestrictedToAgeLimit integer Positive number that sets the required age needed to fulfill the payment. To use this feature it has to be configured in the contract.   paymentRestrictedToSocialSecurityNumber string When provided, the payment will be restricted to a specific social security number to make sure its the same logged in customer who is also the payer. Format: yyyyMMddxxxx. To use this feature it has to be configured in the contract. Redirect Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"Swish\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"captures\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales\", \"rel\": \"create-sale\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/swish/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-sale\", }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, ] } Redirect Sequence Diagram The sequence diagram below shows the requests you have to send to Swedbank Pay to make a purchase. The Callback response is a simplified example in this flow. Go to the Callback section to view the complete flow. sequenceDiagram activate Browser Browser-&gt;&gt;-Merchant: Start purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST &lt;Swish create payment&gt; (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: Payment resource activate Merchant Merchant--&gt;&gt;-Browser: Response with redirectUrl activate Browser Browser-&gt;&gt;-SwedbankPay: Redirect to Payment page note left of SwedbankPay: Redirect to Swedbank Pay activate Browser Browser-&gt;&gt;-SwedbankPay: Enter mobile number activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST &lt;Sale transaction&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Transaction Resource activate SwedbankPay SwedbankPay--x-Browser: Tell payer to open Swish app Swish_API-&gt;&gt;Swish_App: Ask for payment confirmation activate Swish_App Swish_App--&gt;&gt;-Swish_API: Payer confirms payment activate Swish_API alt Callback Swish_API--&gt;&gt;-SwedbankPay: Payment status activate SwedbankPay SwedbankPay--&gt;&gt;-Swish_API: Callback response activate Swish_API SwedbankPay--&gt;-Merchant: Transaction callback end activate SwedbankPay SwedbankPay-&gt;&gt;-Browser: Redirect to merchant activate Browser Browser--&gt;&gt;-Merchant: Redirect activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET &lt;Swish payment&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Payment response activate Merchant Merchant--&gt;&gt;-Browser: Payment Status Direct Seamless View",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/redirect.html"
  },{
    "title": "Redirect",
    "text": "Introduction When properly set up in your merchant/webshop site and the payer starts the purchase process, you need to make a POST request towards Swedbank Pay with your Purchase information. This will generate a payment resource with a unique id. You will receive a redirect URL to a Swedbank Pay payment page (redirect-sale operation). You need to redirect the payer’s browser to that specified URL so that the payer can enter the payment details in a secure Swedbank Pay environment. Swedbank Pay will redirect the payer’s browser to one of two specified URLs, depending on whether the payment session is followed through completely. Please note that both a successful and rejected payment reach completion. When you detect that the payer reach your completeUrl, you need to do a GET request to receive the state of the transaction, containing the id URL generated in the first step, to receive the state of the transaction. Step 1: Create A Payment link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. To initiate the payment process, you need to make a POST request to Swedbank Pay. Redirect Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 POST /psp/trustly/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"prices\": [ { \"type\": \"Trustly\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"hostUrls\": [ \"https://example.com\" ], \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"PR123\", \"payeeName\": \"Merchant1\", \"productCategory\": \"PC1234\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"firstName\": \"Ola\", \"lastName\": \"Nordmann\" } } } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string The operation that the payment is supposed to perform. For Trustly, this will always be Purchase as it is currently the only available operation. check intent string Sale is the only intent option for Trustly. Performs the payment when the payer gets redirected and completes the payment, and is followed by a reversal of funds. check currency string SEK, EUR. The currency of the provided amount. check prices object The prices resource lists the prices related to a specific payment. check type string Use the Trustly type here check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object The urls resource lists urls that redirects users to relevant sites. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl array The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   hostUrl array The array of URLs valid for embedding of Swedbank Pay Seamless View. If not supplied, view-operation will not be available.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string(30*) A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object Object representing information of what the UI text fields should be populated with   firstName string Prefilled value to put in the first name text box.   lastName string Prefilled value to put in the last name text box. Redirect Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 99590008046, \"created\": \"2020-05-26T12:31:19.3106483Z\", \"updated\": \"2020-05-26T12:31:19.4513673Z\", \"instrument\": \"Trustly\", \"operation\": \"Purchase\", \"intent\": \"Sale\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"urls\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales\", \"rel\": \"create-sale\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/trustly/payments/sales/8f3ba6c8f4e3f6125ae6c18bec15c612747cf2c35dc5cac35d4bebc10cf7317e\", \"rel\": \"redirect-sale\" } ] } Redirect Sequence Diagram This is an example of the Redirect scenario. For other integrations, take a look at the respective sections. The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. Swedbank Pay Trustly Payments uses the Deposit to perform a payment. After this, the payer will be presented with the returned iframe URL in order to perform the payment with their preferred bank. Once the user has completed the payment, Swedbank Pay will receive a notification asynchronously from Trustly, hence why the UI will initiate polling toward our back-end. The payment status after being redirect to completeUrl will then indicate if the payment was successful or not, or if the payment is still in progress. If the payment is still in progress, when reaching completeUrl, the Swedbank Pay has then not received a notification from Trustly that the payment has gone through yet. sequenceDiagram participant SwedbankPay as Swedbank Pay participant Merchant participant Consumer participant Trustly Consumer-&gt;&gt;Merchant: Start purchase activate Merchant note left of Merchant: First API request Merchant-&gt;&gt;-SwedbankPay: POST &lt;Trustly Payment&gt; (operation=Purchase) activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Consumer: authorization page activate Consumer note left of Consumer: redirect to Swedbank Pay Consumer-&gt;&gt;-SwedbankPay: enter consumer details activate SwedbankPay SwedbankPay--&gt;-Trustly: perform payment in Trustly activate Trustly Trustly--&gt;&gt;-Consumer: redirect to merchant activate Consumer note left of Consumer: redirect back to Merchant Consumer-&gt;&gt;-Merchant: access merchant page activate Merchant note left of Merchant: Second API request Merchant-&gt;&gt;-SwedbankPay: GET &lt;Trustly payment&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Consumer: display purchase result Options After Posting A Payment Head over to after payment to see what you can do when a payment is completed. Here you will also find info on Abort and Reversal. Introduction Seamless View",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/redirect.html"
  },{
    "title": "Redirect",
    "text": "report_problem Availability: Note that this invoice integration is no longer available in Sweden. If you are a Swedish merchant and wish to offer invoice as a payment option, this has to be done through our payment order implementation. Introduction When properly set up in your merchant/webshop site and the payer starts the purchase process, you need to make a POST request towards Swedbank Pay with your Purchase information. This will generate a payment object with a unique paymentID. You will receive a redirect URL to a Swedbank Pay payment page. You need to redirect the payer’s browser to that specified URL so that the payer can enter the invoice details in a secure Swedbank Pay environment. Swedbank Pay will redirect the payer’s browser to - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. When you detect that the payer reach your completeUrl , you need to do a GET request to receive the state of the transaction, containing the paymentID generated in the first step, to receive the state of the transaction. Step 1: Create The Payment An invoice payment is always two-phased based - you create an Authorize transaction, that is followed by a Capture or Cancel request. link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. To initiate the payment process, you need to make a POST request to Swedbank Pay. Our payment example below uses the [FinancingConsumer] (/old-implementations/payment-instruments-v1/invoice/features/technical-reference/financing-consumer) value. All valid options when posting a payment with operation equal to FinancingConsumer, are described in features. How It Looks Financing Consumer Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 POST /psp/invoice/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"FinancingConsumer\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [ { \"type\": \"Invoice\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"generatePaymentToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"PR123\", \"payeeName\": \"Merchant1\", \"productCategory\": \"PC1234\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"invoice\": { \"invoiceType\": \"PayExFinancingSe\" } } } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string The operation that the payment is supposed to perform. The FinancingConsumer operation is used in our example. check intent string Authorization is the only intent option for invoice. Reserves the amount, and is followed by a cancellation or capture of funds. check currency string NOK, SEK, DKK, USD or EUR. check prices object The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object The urls resource lists urls that redirects users to relevant sites.   hostUrl array The array of URLs valid for embedding of Swedbank Pay Seamless Views. If not supplied, view-operation will not be available. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true. Financing Consumer Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"Invoice\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"FinancingConsumer\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 0, \"remainingCaptureAmount\": 1000, \"remainingCancellationAmount\": 1000, \"remainingReversalAmount\": 500, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"payeeInfo\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"settings\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" }, \"approvedLegalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/approvedlegaladdress\" }, \"maskedApprovedLegalAddress\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/maskedapprovedlegaladdress\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\" }, { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\", \"rel\": \"create-authorize\", \"method\": \"POST\" }, { \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/approvedlegaladdress\", \"rel\": \"create-approved-legal-address\", \"method\": \"POST\" } ] } Invoice Flow The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The diagram also shows the process of a complete purchase in high level. sequenceDiagram Payer-&gt;&gt;Merchant: Start purchase activate Merchant note left of Merchant: First API request Merchant-&gt;&gt;-Swedbank Pay: POST &lt;Invoice Payment&gt; (operation=FinancingConsumer) activate Swedbank Pay Swedbank Pay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: authorization page activate Payer note left of Payer: redirect to Swedbank Pay Payer-&gt;&gt;-Swedbank Pay: enter Payer details activate Swedbank Pay Swedbank Pay--&gt;&gt;-Payer: redirect to merchant activate Payer note left of Payer: redirect back to Merchant Payer-&gt;&gt;-Merchant: access merchant page activate Merchant note left of Merchant: Second API request Merchant-&gt;&gt;-Swedbank Pay: GET &lt;Invoice payment&gt; activate Swedbank Pay Swedbank Pay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: display purchase result Options after posting a payment Head over to after payment to see what you can do when a payment is completed. Here you will also find info on Cancel, and Reversal. Introduction Seamless View",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/redirect.html"
  },{
    "title": "Redirect",
    "text": "When properly set up in your merchant/webshop site and the payer starts the purchase process, you need to make a POST request towards Swedbank Pay with your Purchase information. This will generate a payment object with a unique paymentID. You will receive a redirect URL to a Swedbank Pay payment page. Step 1: Create A Purchase A Purchase payment is a straightforward way to charge the card of the payer. It is followed up by posting a capture, cancellation or reversal transaction. An example of an abbreviated POST request is provided below. Each individual field of the JSON document is described in the following section. An example of an expanded POST request is available in the other features section. link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Purchase A Purchase payment is a straightforward way to charge the card of the payer. It is followed up by posting a capture, cancellation or reversal transaction. An example of a request is provided below. Each individual field of the JSON document is described in the following section. Purchase Operation Posting a payment (operation Purchase) returns the options of aborting the payment altogether or creating an authorization transaction through the redirect-authorization hyperlink. Request 1 2 3 4 5 { \"payment\": { \"operation\": \"Purchase\" } } Card Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 POST /psp/creditcard/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\", }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or123\", \"subsite\": \"mySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"cardholder\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"homePhoneNumber\": \"+4787654321\", \"workPhoneNumber\": \"+4776543210\", \"shippingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, }, \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description check payment object The payment object check operation string Determines the initial operation, defining the type of payment order created. check intent string Authorization. Reserves the amount, and is followed by a Cancel or Capture of funds. AutoCapture. A one phase option that enables the Capture of funds automatically after authorization.   paymentToken string If a paymentToken is included in the request, the card details stored in the paymentToken will be prefilled on the payment page. The payer still has to enter the cvc to complete the purchase. This is called a “One Click” purchase. check currency string NOK, SEK, DKK, USD or EUR. check prices array The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase.   generatePaymentToken boolean true or false. Set this to true if you want to create a paymentToken for future use as One Click.   generateRecurrenceToken boolean true or false. Set this to true if you want to create a recurrenceToken for future use Recurring purchases (subscription payments).   generateUnscheduledToken boolean true or false. Set this to true if you want to create a unscheduledToken for future use Unscheduled purchases (merchant initiated transactions). check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. check︎ urls object The object containing URLs relevant for the payment. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   cardholder object Optional. Cardholder object that can hold information about a buyer (private or company). The information added increases the chance for frictionless flow and is related to 3-D Secure 2.0..   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   homePhoneNumber string Optional (increased chance for frictionless flow if set)   workPhoneNumber string Optional (increased chance for frictionless flow if set)   shippingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set)   lastName string Optional (increased chance for frictionless flow if set)   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   billingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Card Payment Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"CreditCard\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"rel\": \"update-payment-abort\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"rel\": \"redirect-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"text/html\" }, { \"rel\": \"view-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"view-payment\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"direct-authorization\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\", \"method\": \"POST\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. When you receive the redirect url from Swedbank Pay, you redirect the payer there to complete the payment. This ensures that card details and other personal information is entered in a secure environment. Swedbank Pay handles all authentication during this phase. After an attempted payment, Swedbank Pay will redirect the Payer to one of two specified URLs: completeUrl or cancelUrl. If the payer cancels at any point, the payer will be redirected to the cancelUrl. If the payment is followed through completely the payer will reach the completeUrl. info Important: Both successful and rejected payments are labeled as completed. This means that when you reach this point, you need to make sure that the payment has gone through before you let the payer know that the payment was successful. You do this by doing a GET request. This request has to include the payment Id generated from the initial POST request, so that you can receive the state of the transaction. If you have chosen Seamless View, the completeUrl and cancelUrl will display directly inside the iframe. How It Looks Transactions in the currency SEK might look like this, with a debit/credit selection available: Sequence Diagram sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay activate Payer Payer-&gt;&gt;-Merchant: start purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST /psp/creditcard/payments activate SwedbankPay note left of Payer: First API request SwedbankPay--&gt;&gt;-Merchant: rel: redirect-authorization ① activate Merchant Merchant--&gt;&gt;-Payer: Redirect to authorization page activate Payer Payer-&gt;&gt;-SwedbankPay: Access authorization page activate SwedbankPay note left of Payer: redirect to SwedbankPay ② SwedbankPay--&gt;&gt;-Payer: Display purchase information activate Payer Payer-&gt;&gt;Payer: Input creditcard information ③ Payer-&gt;&gt;-SwedbankPay: Submit creditcard information opt If 3-D Secure required note left of Payer: Authentication Challenge ④ SwedbankPay--&gt;&gt;Payer: Redirect to IssuingBank activate Payer Payer-&gt;&gt;-IssuingBank: 3-D Secure authentication process activate IssuingBank IssuingBank--&gt;&gt;-Payer: 3-D Secure authentication process response activate Payer Payer-&gt;&gt;-SwedbankPay: Access authentication page activate SwedbankPay end SwedbankPay--&gt;&gt;-Payer: Redirect to CompleteUrl ⑤ activate Payer Payer-&gt;&gt;-Merchant: Access CompleteUrl alt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;-Merchant: POST Payment Callback end activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; ⑥ activate SwedbankPay note left of Payer: Second API request SwedbankPay--&gt;&gt;-Merchant: Payment result activate Merchant Merchant--&gt;&gt;-Payer: Display purchase result Explanations ① rel: redirect-authorization is the name of one of the operations, sent as a response from Swedbank Pay to the Merchant. The href in this operation is the redirect URL to a Swedbank Pay payment page. ② The payer is redirected to a secure Swedbank Pay hosted page ③ The payment window is presented and the payer can enter card information for authorization. ④ If needed, the payer must go through an authorization challenge to verify his or hers identity. ⑤ The Payer reaches the CompleteUrl which you defined in the initial POST request. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. ⑥ Send a GET request with the paymentId to check the state of the transaction. Click the link for a complete list of payment and transaction states. 3-D Secure info No 3-D Secure and card acceptance: There are optional parameters which can be used in relation to 3-D Secure and card acceptance. Most acquiring agreements will demand that you use 3-D Secure for card holder authentication. However, if your agreement allows you to make a card payment without this authentication, or that specific cards can be declined, you may adjust these optional parameters when posting in the payment. Swedbank Pay will handle 3-D Secure authentication when this is required. When dealing with card payments, 3-D Secure authentication of the cardholder is an essential topic. There are two alternative outcomes of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. Introduction Seamless View",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/redirect.html"
  },{
    "title": "Redirect",
    "text": "MobilePay Online redirect integration flow When you have prepared your merchant/webshop site, you make a POST request towards Swedbank Pay with your Purchase information. You will receive a Redirect URL, leading to a secure Swedbank Pay hosted environment, in response. You need to redirect the browser of the payer to that URL so that they may enter their MobilePay details. When the payment is completed, Swedbank Pay will redirect the browser back to your merchant/webshop site. Finally you need to make a GET request towards Swedbank Pay with the paymentID received in the first step, which will return the purchase result. link Defining callbackUrl: When implementing a scenario, it is strongly recommended to set a callbackUrl in the POST request. If callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Step 1: Create A Purchase When the payer starts the purchase process, you make a POST request towards Swedbank Pay with the collected Purchase information. This will generate a payment with a unique id. See the POSTrequest example below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Redirect Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 POST /psp/mobilepay/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"DKK\", \"prices\": [ { \"type\": \"MobilePay\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"da-DK\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+4598765432\" } }, \"mobilepay\": { \"shoplogoUrl\": \"https://example.com/shop-logo.png\" } } Show fields Hide fields Required Field Data type Description check payment object The payment object. check operation string Purchase check intent string Authorization check currency string NOK, SEK, DKK, USD or EUR. check prices object The prices object. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 DKK, 5000 = 50.00 DKK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 DKK, 5000 = 50.00 DKK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   feeAmount integer If the amount given includes Fee, this may be displayed for the user in the payment page (redirect only). check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string da-DK, fi-FI or en-US. check urls object The URLs object containing the urls used for this payment. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. check cancelUrl string The URL that Swedbank Pay will redirect back to when the user presses the cancel button in the payment page.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object This object contains the identificators of the payee of this payment. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object An object that holds prefill information that can be inserted on the payment page.   msisdn string Number will be prefilled on MobilePay’s page, if valid. Only Danish and Finnish phone numbers are supported. The country code prefix is +45 and +358 respectively.   mobilepay.shoplogoUrl string URI to the logo that will be visible at MobilePay Online. For it to be displayed correctly in the MobilePay app, the image must be 250x250 pixels, a png or jpg served over a secure connection using https, and be publicly available. This URI will override the value configured in the contract setup. Redirect Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"prices\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 75100000121, \"created\": \"2018-09-11T10:58:27.4236127Z\", \"updated\": \"2018-09-11T10:58:30.8254419Z\", \"instrument\": \"MobilePay\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"DKK\", \"amount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"da-DK\", \"transactions\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"urls\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/mobilepay/payments/authorize/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"redirect-authorization\" } ] } How It Looks Step 2: Get The Transaction Status Finally you need to make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the purchase result. GET Transaction Status Request Request 1 2 3 4 GET /psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Transaction Status Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"DKK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"da-DK\", \"prices\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" } \"urls\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/mobilepay/core/scripts/client/px.mobilepay.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/mobilepay/payments/authorize/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/problem+json\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string da-DK, fi-FI or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Mobile Pay Redirect Sequence Diagram The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The diagram also shows at a high level, the sequence of the process of a complete purchase. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant MobilePay_API as MobilePay API participant MobilePay_App as MobilePay App Payer-&gt;&gt;Merchant: start purchase (pay with MobilePay) activate Merchant Merchant-&gt;&gt;SwedbankPay: POST &lt;Create MobilePay Online payment&gt; note left of Merchant: First API request activate SwedbankPay SwedbankPay--&gt;&gt;Merchant: payment resource deactivate SwedbankPay SwedbankPay --&gt;&gt; SwedbankPay: Create payment Merchant--&gt;&gt;Payer: Redirect to payment page note left of Payer: redirect to MobilePay Payer--&gt;&gt;SwedbankPay: enter mobile number activate SwedbankPay SwedbankPay--&gt;&gt;MobilePay_API: Initialize MobilePay Online payment activate MobilePay_API MobilePay_API--&gt;&gt;SwedbankPay: response SwedbankPay--&gt;&gt;Payer: Authorization response (State=Pending) note left of Payer: check your phone deactivate Merchant MobilePay_API--&gt;&gt;MobilePay_App: Confirm Payment UI MobilePay_App--&gt;&gt;MobilePay_App: Confirmation Dialog MobilePay_App--&gt;&gt;MobilePay_API: Confirmation MobilePay_API--&gt;&gt;SwedbankPay: make payment activate SwedbankPay SwedbankPay--&gt;&gt;SwedbankPay: execute payment SwedbankPay--&gt;&gt;MobilePay_API: response deactivate SwedbankPay deactivate MobilePay_API SwedbankPay--&gt;&gt;SwedbankPay: authorize result SwedbankPay--&gt;&gt;Payer: authorize result Payer--&gt;&gt;Merchant: Redirect to merchant note left of Payer: Redirect to merchant activate Merchant SwedbankPay--&gt;&gt;Merchant: Payment Callback Merchant--&gt;&gt;SwedbankPay: GET &lt;MobilePay payments&gt; note left of Merchant: Second API request SwedbankPay--&gt;&gt;Merchant: Payment resource deactivate SwedbankPay Merchant--&gt;&gt;Payer: Display authorize result deactivate Merchant Back: Introduction Seamless View",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/redirect.html"
  },{
    "title": "Redirect",
    "text": "Introduction When the payer starts the purchase process, you make a POST request towards Swedbank Pay with the collected Purchase information. This will generate a payment object with a unique paymentID. You will receive a Redirect URL to a hosted page. You need to redirect the payer to the Redirect payment where the payer must push the payment button. This triggers a POST towards Swedbank Pay. The payer is redirected to a Vipps payment page to enter the mobile number. Swedbank Pay handles the dialog with Vipps and the payer confirms the purchase in the Vipps app. To receive the state of the transaction you need to do a GET request containing the paymentID generated in the first step. You redirect the payer to collect the payer’s mobile number. Step 1: Create A Purchase link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. A Purchase payment is a straightforward way to charge the the payer. Below you will see the POST request you will need to send to collect the purchase information. Redirect Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 POST /psp/vipps/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"prices\": [ { \"type\": \"Vipps\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"hostUrls\": [ \"https://example.net\" ], \"completeUrl\": \"https://example.net/payment-completed\", \"cancelUrl\": \"https://example.net/payment-cancelled\", \"callbackUrl\": \"https://example.net/payment-callback\", \"logoUrl\": \"https://example.net/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.net/payment-terms.pdf\", }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+4792345678\" } } } Redirect Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"instrument\": \"Vipps\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"reversals\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"update-payment-abort\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/vipps/payments/authorize/8fb05a835f2fc227dc7bca9abaf649b919ba8a572deb448bff543dd5806dacb7\", \"rel\": \"redirect-authorization\" } ] } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string The operation that the payment is supposed to perform. The Purchase operation is used in our example. check intent string Authorization is the only intent option for invoice. Reserves the amount, and is followed by a cancellation or capture of funds. check currency string NOK check prices object The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object The urls resource lists urls that redirects users to relevant sites. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object An object that holds prefill information that can be inserted on the payment page.   msisdn string Number will be prefilled on payment page, if valid. Only Norwegian phone numbers are supported. The country code prefix is +47 Step 2: Authorization To create an authorization in the redirect flow, simply perform an HTTP redirect of the payer towards the URL in the href of the redirect-authorization operation found in the list of operations in the response from the creation of the payment. Once the payment is successfully authorized, the payer is returned to either the completeUrl or the cancelUrl; depending on the action performed. On the page as well as in the callbackUrl you need to perform an HTTP GET request towards the id of the payment to inspect its status. Step 3: Get The Transaction State The GETrequest below will give you the transaction state of the payment. The paymentId used below was provided in the fist step when creating a purchase. GET Transaction State Request Request 1 2 3 4 GET /psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json GET Transaction State Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"urls\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"transactions\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;operation=authorize\", \"rel\": \"view-payment\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/vipps/payments/authorize/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\", \"rel\": \"create-capture\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/7e6cdfc3-1276-44e9-9992-7cf4419750e1/paid\", \"rel\": \"paid-payment\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/7e6cdfc3-1276-44e9-9992-7cf4419750e1/failed\", \"rel\": \"failed-payment\", \"contentType\": \"application/problem+json\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. prices.id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. description string(40) A 40 character length textual description of the purchase. payers string The URL to the payer resource where the information about the payer can be retrieved. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. Vipps Redirect Sequence Diagram The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. sequenceDiagram participant Browser participant Merchant participant SwedbankPay as Swedbank Pay participant VippsApi as Vipps API participant VippsApp as Vipps App Browser-&gt;&gt;Merchant: Start purchase (pay with Vipps) activate Browser activate Merchant Merchant-&gt;&gt;SwedbankPay: POST &lt;Create Vipps payment&gt; activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;Merchant: Payment resource deactivate SwedbankPay Merchant--&gt;&gt;Browser: Redirect to payment page deactivate Merchant note left of Browser: Redirect to Swedbank Pay Browser-&gt;&gt;SwedbankPay: Redirect activate SwedbankPay SwedbankPay--&gt;&gt;VippsApi: Initialize Vipps payment activate VippsApi VippsApi--&gt;&gt;SwedbankPay: Response activate SwedbankPay SwedbankPay--&gt;&gt;-Browser: Display payment page activate Browser Browser-&gt;&gt;Browser: Enter mobile number SwedbankPay--&gt;&gt;Browser: Authorization response (State=Pending) note left of Browser: Check your phone VippsApi--&gt;&gt;VippsApp: Confirm Payment UI activate VippsApp VippsApp--&gt;&gt;VippsApp: Confirmation dialog VippsApp--&gt;&gt;VippsApi: Confirmation deactivate VippsApp VippsApi--&gt;&gt;SwedbankPay: Make payment activate SwedbankPay SwedbankPay--&gt;&gt;SwedbankPay: Execute payment SwedbankPay--&gt;&gt;VippsApi: Response deactivate SwedbankPay deactivate VippsApi SwedbankPay--&gt;&gt;SwedbankPay: Authorize result SwedbankPay--&gt;&gt;Browser: Authorize result deactivate SwedbankPay Browser--&gt;&gt;Merchant: Redirect to merchant activate Merchant note left of Browser: Redirect to merchant alt Callback activate SwedbankPay SwedbankPay--&gt;&gt;-VippsApi: Callback response SwedbankPay-&gt;&gt;-Merchant: Transaction callback end activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: GET &lt;payment.id&gt; note left of Merchant: Second API request SwedbankPay--&gt;&gt;Merchant: Payment resource Merchant--&gt;&gt;Browser: Display purchase result deactivate SwedbankPay deactivate Merchant deactivate Browser You will later (i.e. if a physical product, when you are ready to ship the purchased products) have to make a Capture or Cancel request. Introduction Seamless view",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/redirect.html"
  },{
    "title": "RefundAsync",
    "text": "The RefundAsync should be called when the amount is known. It opens all available readers and waits for a payment instrument. If Alternative Payment Methods are activated it will open for that too. warning Heads up: After RefundAsync returns there has to be a delay before next request can be made. If there is no delay the next request will fail, indicating that the terminal is busy and retries have to be made. Parameters amount - amount to for refund apmreference - A reference if the transaction was made using APM. When this reference is not null, APM is assumed. currency - currency code as a string representing ISO-4217 3 letter code. Has to be available in the terminal setup. The default is “SEK”. Returns A PaymentRequestResult - Detailed description A PayementRequestResult.ResponseResult of value Success means transaction approved. If ResponseResult is Failure there is an ErrorCondition. If ErrorCondition is Busy wait awhile and try again.",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/refundasync.html"
  },{
    "title": "Release Notes",
    "text": "info Version numbers: The version numbers used in headers on this page refers to the version of this very documentation, not to a version of any APIs described by it. 06 July 2023 Version 4.3.3 We had time for one more before we clock out for summer, so we added a PATCH example to our payout feature section. Go check it out if you are on your way to implementing it. Have a great summer! 26 June 2023 Version 4.3.2 A small batch of changes which barely missed the last deadline. We’ve done a few correction and some major changes, most notably the renaming of Checkout v3 to Digital Payments and Pax Terminal to Payment Terminal. The changes are in name only, the structure stays the same. We have also added information regarding the Eligibility Check, and the availability of invoice for Swedish merchants, where the payment instrument integrations have been removed. You have to go through an implementation using payment order to offer this in Sweden. 19 June 2023 Version 4.3.0 You spoke, we listened! We have worked a lot on making the portal easier to navigate. The main menu has been slimmed down, where we have removed the Introduction (but you can still read the main points under fundamental principles). If you are looking for the Resources and Modules &amp; SDK sections, they have found a new home under Digital Payments. Speaking of Digital Payments, we’ve cleaned that up as well, and hope it will make things easier for you. The payment request example now contains what you need to create a payment order. Adding more to it is up to you and the features section. The common implementations steps have been merged to avoid duplicate information, only sending you separate places when it’s time to display the ui. A new terminal section has been added. Exciting things are coming, so we will make sure it grows and develops going forward. Other highlights and important changes include: A new Payout section, currently supporting Trustly. An important field related to Network Tokenization has been added to the Paid models. A separate split settlement section, previously a part of settlement &amp; reconciliation. Links to our partner pages. How to contact us before you get started. 3DS2 is now named Frictionless payments. Order items have been moved to optional features. Terms of Service has gotten its own optional feature. Plus the usual handful of bug fixes and smaller changes. 24 April 2023 Version 4.2.0 The keen observer might spot some changes in our menu. The Checkout v2, Payment Menu and Payment Instruments have been moved to Old Implementations. You can still find everything you want and need, so no need to worry. A new .NET SDK section has also been added, in addition to the usual bugs and small fixes. 10 March 2023 Version 4.1.0 A lot of changes are happening these days. We’ve made the decision to focus the Digital Payments offering, so our Starter and Business implementations are no more. This means that we can do what we do best: giving you a payment experience packed with options. The Payments Only implementation is still here, and for those of you with a Strong Consumer Authentication who want access to our safely stored card data, Enterprise is still available too. 03 March 2023 Version 4.0.0 We promised you something big, and here it is. Click to Pay and Google Pay™ have been added to our arsenal of payment instruments. Click on your instrument of choice to see what is needed for you to activate in your integration. We have also added information on how to activate Apple Pay, which we recommend reading up on. As you’ve probably already seen, our new sidebar is finally live too! We have given it a facelift and different levels which we hope make it easier for you to navigate. All the content is where it used to be. Check it out (and let us know what you think)! You might also wonder where the tables following our code examples have gone. We have made them expandable, and given them a facelift as well. We have also added 3DS2 test data, along with smaller maintenance tasks and bug fixes. 31 January 2023 Version 3.1.8 Bigger things are coming up around the bend, so we are stopping by with some smaller fixes and a Digital Payments matrix giving you a better overview over which payment instruments v3 has to offer, and the countries they are available. We’ll be back soon! 17 January 2023 Version 3.1.7 We kick off the new year with a new field in our payment order request. Your Digital Payments implementation of choice is now added in the request. Version 2 of the balance report and transaction list is our second newcomer this release. Head over to Settlement &amp; Reconciliation to learn more. We have added a paid status model to Checkout v2 and Payment Menu v2, and the update payment order section is added to Digital Payments. 15 December 2022 Version 3.1.6 Our last update in 2022 mainly consists of clean-ups and fixes, but the most important changes are bin and msidn fields added (where they are relevant) to Paid resource model and Paid status model, plus a small rework of Age restrictions. Happy holidays, everyone! We look forward to seeing you in 2023! 29 November 2022 Version 3.1.5 Our penultimate release of the year has a few things up its sleeve. The most exciting being the new capabilities Cross Channel Payments, Automated Fuel Dispenser Payments, SSN and Age restrictions. We’ve also added some new fields in the Paid and Cancelled models, a new Payer resource model. Please note the organization number added to the essential information for Checkout v3 set ups. Apart from that, there are no releases without typo corrections and bug fixes. 20 September 2022 Version 3.1.3 Another small one. We’ve added Digital Payments paid responses for all instruments in both status and resource-models, finished up the headers which was missing, added MobilePay to Request Delivery Information and done away with some more bugs and typos. 02 September 2022 Version 3.1.2 We have been picking up steam since our summer break, hitting full throttle as September arrived. A smaller release this time around, but there are some important additions nonetheless. We have added a siteID field to Digital Payments implementations, re-worked nearly all headers across the portal to make navigation easier, added a section on deleting payment tokens, along with the usual batch of assorted bug fixes and typos. 01 July 2022 Version 3.1.1 A release filled with leftovers before we clock out for summer. Mostly small fixes in code examples and tables, but the most important additions are the new fields added in the paid resource model. Have a great summer! 22 June 2022 Version 3.1.0 Summer has finally arrived, and we have quite a treat waiting in our final release before the vacation pulse kicks in. Without further ado: We now proudly offer Apple Pay! It is available in all our Digital Payments implementations and integrations. There are a couple of other new additions as well: Our SDKs have been updated to support Digital Payments You can now request delivery information for selected instruments An eligibility check eligibility check for wallets has been added to instrument mode Fixed typos, minor bugs and code examples 04 April 2022 Version 3.0.3 Added a new card error code and restructured the tables. Fleshed out the Unscheduled Purchase section. Fleshed out the Recur section. Moved the callback section to core features. Typos and minor bug fixes in code examples and tables. 16 March 2022 Version 3.0.2 Typos and minor bug fixes in code examples and tables. Re-wrote Payer Aware Payment Menu Clarified OnAborted Seamless View event Elaborated user agent fields in requests. Added links to resource models in Digital Payments response tables 24 February 2022 Version 3.0.1 Added descriptive card icons Added Payer Aware Payment Menu Added new screenshots for Digital Payments implementations Rewrote instrument mode section Reorganized features in the sidebar Fixed internal links 18 February 2022 Version 3.0.0 It’s been a minute, but the day is finally here. We can proudly present Checkout version 3.0! The same range of payment instruments, checkin options and features as always, but since different merchants have different needs, we’ve made it easier for you to get the checkout experience which fits you best. So, what’s new? Two Checkout implementations tailor-made for different needs and wishes: Enterprise or Payments Only. We’ve summed them up to help you find the right fit and get started. Each implementation starts off with a guide to set up your test account quickly. Want to see the new implementations in action? Head over to the demoshop. The Seamless View events have been re-worked to make the integration smoother for you. Renamed and gathered the Post-Purchase options on one page. The rest of the features are still where they used to be. We’ve given the front page a touch up, and given the new sections a slightly different look to distinguish them. Already up on Checkout version 2.0? No worries. All the documentation is still available in the sidebar and here. 15 October 2021 Version 2.2.3 Updated Android SDK documentation Added info about consumerProfileRef expiration Added important information about WebView integrations for mobile card payments Updated iOS SDK documentation Added information about authorization timeouts (bottom of page) Added important info about MobilePay shoplogoUrl Fixed minor bugs and code examples 03 August 2021 Version 2.2.2 Added payment link for Payment Menu v2 Renamed Merchant Authenticated Consumer section (previously Delegated Strong Authenticated Consumer) Updated Unscheduled Merchant Initiated Transaction Fixed typos, minor bugs and code examples 19 May 2021 Version 2.2.1 Added payment link option for Trustly Added information about invoice capture in Checkout v2 and Payment Menu Added MobilePay shoplogoUrl in the Checkout v2 and Payment Menu v2 items section Added Delete Token section in Card’s technical reference Fixed minor typos and bugs 30 Apr 2021 Version 2.2.0 Restructured Features sections for all implementations into core features, optional features and technical reference Renamed Checkout to Checkout v2 Added TRA exemption section Fixed a handful of typos and bugs 28 Jan 2021 Version 2.1.2 Updated Theme version to 1.9.9 Updated Design Guide Version to 5.0.1 26 Jan 2021 Version 2.1.0 Updated theme with visual fixes Search icon is now clickable Various bug fixes Various corrections and typo fixes Re-worded split settlement Clarified that callback is a fail-safe Updated tables and code examples with payerReference in various places, like card purchase Updated Mobile SDK configurations for both iOS and Android to include integration with custom backends Updated GitHub references for Mobile SDK Re-wrote Prices section 01 Dec 2020 Version 2.0.2 Various bug fixes Various corrections and typo fixes Corrected information about 3D-Secure Added paragraphs about different consumer flows in Checkin Added link to gift card on the front page 12 Nov 2020 Version 2.0.1 Added section for MobilePay Seamless View Split MobilePay Capture to a separate page Code examples for digital products added in Checkin 11 Nov 2020 Version 2.0.0 Launched new developer portal theme: New design New menu structure Reading time Other changes: Added GDPR disclaimer. Added custom 404 page. Added section about Transaction On File Added Seamless View for Trustly. Added documentation about payment and transaction states. See Card Other Features for example. Added event override warning for Seamless View Events, see Card Seamless View Events for example. Added section regarding MOTO in Card Other Features. Deleted Merchant Identified Payer in Checkout. Renamed Merchant Authenticated Consumer to Delegated Strong Customer Authentication. Updated payer/consumer/end-user naming for most sections. Updated expiry date for test cards in test data. Updated callback documentation. Updated regex pattern for orderItems.class. 04 Sep 2020 Version 1.13.3 Added documentation on deprecated operations in Checkout. Updated instrument description in Checkout. Updated payeeReference description. Clarified msisdn and shoplogoUrl in MobilePay Online Payments. Updated Test data in Resources. Documented problems in Trustly Payments. Added an alert for two-phase payments in Capture pages. 28 Aug 2020 Version 1.13.2 Added description on metadata for all payment instruments. Updated files in Settlement &amp; Reconciliation. Added information on token deletion in Card Payments and Invoice Payments. Updated the documentation on paymentRestrictedToAgeLimit and paymentRestrictedToSocialSecurityNumber in Swish Payments. Added documentation on guest checkout in Checkout. Updated information about logourl in Checkout. Added a list of accepted banks in Trustly Payments. Updated the UpdateOrder description in Checkout. 21 Aug 2020 Version 1.13.1 Removed documentation for Trustly Payments Seamless View. Updated reOrderPurchaseIndicator description. Updated Other Features in Trustly Payments. Updated Test Data for Vipps Payments. Added updated documentation on the transaction operation. 17 Jul 2020 Version 1.13.0 Added documentation on Mobile SDK in Modules &amp; SDKs section. Added tables for mapping API fields to settlement files in Settlement and Reconciliation. 10 Jul 2020 Version 1.12.1 Corrected the documentation by removing generatePaymentToken and paymentToken from Checkout. 07 Jul 2020 Version 1.12.0 Added information on 3-D Secure 2 for Checkout and Card Payments. Updated reconciliation files in Settlement &amp; Reconciliation. Added test card for Forbrugsforeningen in Test data. Documented paid, failed and aborted across all resources. Added additional information on payerReference, generateRecurrenceToken, paymentToken, generatePaymentToken, recurrenceToken and instrument for the paymentorder resource in Checkout. Corrected and updated view- operations for all resources. Updated Seamless View Events for all resources. Described nonPaymentToken and externalNonPaymentToken in Card Payments. Small corrections to Swish Payments documentation. Clarified the updateOrder documentation. 04 Jun 2020 Version 1.11.1 Added additional information on the settlement files in Settlement &amp; Reconciliation for all Payments. Corrected Card Payments Redirect and Card Payments Seamless View sequence diagrams. Added Abort in Swish Payments. 29 May 2020 Version 1.11.0 Added a new Trustly Payments section. Added information about Storing URLs in the Technical Information section. 22 May 2020 Version 1.10.1 Updated Swish Redirect requests. Added orderReference information in Payment Order Callback in Checkout Other features. 14 May 2020 Version 1.10.0 Added a new gift card section with descriptions of our Gift Cards API. Added a new section Co-badge Card Choice for Dankort in Card Payments. 07 May 2020 Version 1.9.2 Corrected table in payments page. Version 1.9.1 Corrected sequence diagrams in Swish Payments and Vipps Payments. The description field is now more thoroughly described for all requests it’s present in. The language field is now better described for all requests it’s present in. All broken links should now be unbroken. 22 Apr 2020 Version 1.9.0 Added a new section SDKs and Modules in Resources. Corrected problem type URLs for Card Payments, Checkout and Swish Payments. Required checkmarks have a new, fresh look: check Flags now also sport a new look: 15 Apr 2020 Version 1.8.3 Bug fixes to Mermaid diagram and alert styling, plus improvements to code block styling after the update to Swedbank Pay Design Guide 4.5.0. Added examples with screenshots of the effects of Delegated Strong Customer Authentication. Version 1.8.2 Added a more thorough description on paymentUrl and completeUrl in all relevant payments. Updated orderItems to be required in all requests and responses. Clean up of Swish Payments Removed pageStripDown in Vipps Redirect. Updated the main page to be more welcoming. Updated information on Delegated Strong Customer Authentication. 31 Mar 2020 Version 1.8.1 Documented allowed characters in orderItem.class. Added receiptReference in Invoice Payments and Payment Order in capture and reversal. Callback is now moved to Other features in all payments instruments. Clean up of MobilePay. Corrected the address of Leia Ahlström in Test Data. Updated the documentation in Card Payments to recommend using shippingAddress. Updated payeeReference to have an unique description for Payment Order and every Payment Instrument. 18 Mar 2020 Version 1.8.0 Updated Invoice Payments Direct where approvedLegalAddress should now be use for all countries. Small text changes and clarifications. Restructured Invoice Payments and Card Payments. Version 1.7.7 This change contains build updates for the page. :octocat: 04 Mar 2020 Version 1.7.6 Several links has been corrected. The chance of 404 is now much lower. Other small text changes and clarifications. 03 Mar 2020 Version 1.7.5 New page! Technical reference into has been moved from the front page to technical information. Front page got a slimmer look. :swimmer: Abort reference is back in credit card reference. Swish error code reference got a face lift, check it out here :candy:. Version 1.7.4 Described the M-Commerce flow for Swish Direct. Alphabetize the terms in Terminology. 27 Feb 2020 Version 1.7.3 Expanded information about the field restrictedToInstruments. Added information about the field receiptReference. Added and fixed several missing headings in template files. Expanded information about verify. Created new page for Checkout Capture. Mobile Pay Online was previously only referred to as Mobile Pay, this has been corrected. 7 Feb 2020 Version 1.7.2 Removed several duplicate headers in features pages. Added unscheduled purchase information in card payments. We have added card logos when selecting card in payment menu. See updated screenshot of payment menu. 6 Feb 2020 Version 1.7.1 All sections have been released. :trophy: Version 1.7.0 README is updated with info about includes. Added several includes. Updated payeeReference description in Checkout and Invoice section. Using snake case consistently. Added section for unscheduled purchase in Card section. Fixed JavaScript example in Checkin section. Added info about mobile verification in Swish Other Features. Added section about Authenticated Merchants in Checkout section. Cleanup in Vipps Other Features. paymentRestrictedToAgeLimit and paymentRestrictedToSocialSecurityNumber added to swish object in Swish Redirect. paymentAgeLimit , socialSecurityNumber added to the new payerInfo object in Swish Seamless View. Properties added in Swish. Added section about migration key in Resources section. 29 Jan 2020 Version 1.6.3 restrictedToInstruments added back to Payment Order purchase requests. Direct Debit section and mentions in various includes removed. Various improvements and fixes. Version 1.6.2 The Payments and Card Payments sections are reviewed and released. Version 1.6.1 email, msisdn, workPhoneNumber and homePhoneNumber added to the payer object in Payment Order requests. cardholder added to Card Payments Purchase requests. Various improvements and fixes. 27 Jan 2020 Version 1.6.0 The Swish Payments and Vipps Payments have received a few updates and are now ready for another round of review. MobilePay Online Payments is now ready for review. paymentAgeLimit is now added in Swish Payments. The Terminology page is updated and 3-D Secure 2.0 (3DS2) , PSD2 and SCA explanations are added. Added descriptions for Payment States And Transaction States everywhere appropriate. Google Analytics has been added to Developer Portal. 16 Jan 2020 Version 1.5 The review of Invoice Payments is complete and as such the section is now released and ready for use. The Card Payments section has received an overhaul, inching it closer to release. The Swish Payments and Vipps Payments sections are ready for review. 09 Jan 2020 Version 1.4 Updated Swish Redirect and Swish Direct sections in preparations for review and the transition from PayEx Developer Portal. Added Data Protection section. Payment Orders now support orderItems in all operations. Added Terminology page. Clarified what the awaitingActivity state means for different payment instruments. Removed erroneous noCVC in examples for One-Click Card Payments section. Added description for the onBillingDetailsAvailable event in the Checkin Front End section. 22 Dec 2019 Update in checkin module We have added support for specifying language as input in checkin module, language. Supported languages are Norwegian, Swedish and English. Consumers outside Sweden and Norway can now purchase in our Checkout service. You can specify supported countries for shipment in a new input parameter, shippingAddressRestrictedToCountryCodes, in our checkin module. Updated API specification can be found here. The parameters language and shippingAddressRestrictedToCountryCodes have replaced the former consumerCountryCode. The parameters msisdn and email have been made obsolete due to GDPR rules. This information cannot be sent in without the explicit consent of the payer. 01 Nov 2019 Welcome, Swedbank Pay Developer Portal PayEx’ Commerce offerings are being rebranded to Swedbank Pay and as a result of that rebranding, PayEx Checkout is now known as Swedbank Pay Checkout and its documentation can be found on here. Support international phone numbers in Swish We have added support for sending in international phone numbers in the request. Check our Swish documentation here. This is supported in API, and when payer’s enter their phone number on the payment page. Order Items The input parameter quantity in the orderItems field is now updated to decimal. You may send up to 4 decimals. See updated documentation here 01 Oct 2019 Payment Url Credit Card We have added the URL field called paymentUrl for Card Seamless View (previously added for Vipps and Checkout), that will be used when the user is returned from 3rd party. The URL should represent the page in where the payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the hosted payment view was added, in order to initiate the payment. Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. When the JavaScript is invoked after return of the payer, they will either be redirected to the completeUrl (event onPaymentCompleted) or if payment has failed, see an error-message and get the option to retry the payment. 01 Aug 2019 Order Items in payment orders On Payment Orders, itemDescriptions and vatSummary has been replaced with the more versatile and powerful orderItems. While itemDescriptions will continue to work, it is recommended that all integrations switch over to orderItems as soon as possible. When orderItems is used, itemDescriptions must be removed from all requests as the two cannot be used simultaneously. Payment Url For our Seamless Views (currently Vipps or in Checkout), we have added a new URL field called paymentUrl that will be used when user is returned from 3rd party. The URL should represent the page of where the payment seamless view was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the hosted payment view was added to in order to initiate the payment. Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment or Payment Order as the one that initiated the payment originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment or Payment Order stored. When the JavaScript is invoked after return of the payer, they will either be redirected to the completeUrl, or, if payment failed, see an error message and get the option to retry the payment. If paymentUrl is not implemented, retry of payments will not be possible in either individual payment instruments such as Vipps or in Checkout. It makes it more tedious to retry payment as the whole process including the creation of the payment or payment order needs to be performed again. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer.",
    "tags": "",
    "url": "/checkout-v3/resources/release-notes.html"
  },{
    "title": "Request Delivery Information",
    "text": "Request Delivery Information Swedbank Pay provides the possibility to return delivery information from payment instruments which support this. You do this by adding the field requestDeliveryInfo in your payment order request and setting it to true. The returned delivery information will appear in the payer field after the payment has been paid, and not the initial response. You have to perform a GET to see it. Only payment instruments which support this will return delivery information. If you only want to show payment instruments which support this in you menu, you can also add the field restrictedToDeliveryInfoInstruments and setting it to true. This will leave out all instruments which can’t return delivery information. You are currently only able to request delivery information from Apple Pay, Click to Pay, Google Pay™ and MobilePay, but we will add support for more payment instruments going forward. No changes are required at your (the merchant’s) end to be able to offer more instruments at a later time. Request Delivery Info Request The fields themselves are bools which must be added in the paymentorder field of the request, like the example below. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"requestDeliveryInfo\": true, \"restrictedToDeliveryInfoInstruments\": true, \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\" \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\" }, \"payer\": { \"digitalProducts\": false, \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" } \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer.   requestDeliveryInfo bool Set to true if you want Swedbank Pay to return delivery information from the payment instruments which support this. It will be visible in a GET response after the payment has been completed.   restrictedToDeliveryInfoInstruments bool Set to true if you want to restrict your payment menu to only include payment instruments which return delivery info. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer object The payer object containing information about the payer relevant for the payment order.   digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.   nationalIdentifier object The national identifier object.   socialSecurityNumber string The payer’s social security number.   countryCode string The country code of the payer.   firstName string The first name of the payer.   lastName string The last name of the payer.   email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.   msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.   payerReference string A reference used in Enterprise integrations to recognize the payer in the absence of SSN and/or a secure login. Read more about this in the payerReference feature section.   shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.   firstName string The first name of the addressee – the receiver of the shipped goods.   lastName string The last name of the addressee – the receiver of the shipped goods.   streetAddress string Payer’s street address. Maximum 50 characters long.   coAddress string Payer’ s c/o address, if applicable.   zipCode string Payer’s zip code   city string Payer’s city of residence.   countryCode string Country code for country of residence.   billingAddress object The billing address object containing information about the payer’s billing address.   firstName string The first name of the payer.   lastName string The last name of the payer.   streetAddress string The street address of the payer. Maximum 50 characters long.   coAddress string The CO-address (if used)   zipCode string The postal number (ZIP code) of the payer.   city string The city of the payer.   countryCode string SE, NO, or FI.   accountInfo object Object related to the payer containing info about the payer’s account.   accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)   accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)   shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)   suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed) check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Request Delivery Info Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Further information here. Cancelled is returned when an authorized amount has been fully cancelled. See the cancel feature section for further information. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Abort feature section for further information. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is an initialized payment, the available operations are abort, update-order and redirect-checkout or view-checkout, depending on the integration. See Operations for details.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/request-delivery-info.html"
  },{
    "title": "Request Delivery Information",
    "text": "Request Delivery Information Swedbank Pay provides the possibility to return delivery information from payment instruments which support this. You do this by adding the field requestDeliveryInfo in your payment order request and setting it to true. The returned delivery information will appear in the payer field after the payment has been paid, and not the initial response. You have to perform a GET to see it. Only payment instruments which support this will return delivery information. If you only want to show payment instruments which support this in you menu, you can also add the field restrictedToDeliveryInfoInstruments and setting it to true. This will leave out all instruments which can’t return delivery information. You are currently only able to request delivery information from Apple Pay, Click to Pay, Google Pay™ and MobilePay, but we will add support for more payment instruments going forward. No changes are required at your (the merchant’s) end to be able to offer more instruments at a later time. Request Delivery Info Request The fields themselves are bools which must be added in the paymentorder field of the request, like the example below. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"requestDeliveryInfo\": true, \"restrictedToDeliveryInfoInstruments\": true, \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\" \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\" }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer.   requestDeliveryInfo bool Set to true if you want Swedbank Pay to return delivery information from the payment instruments which support this. It will be visible in a GET response after the payment has been completed.   restrictedToDeliveryInfoInstruments bool Set to true if you want to restrict your payment menu to only include payment instruments which return delivery info. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer object The payer object containing information about the payer relevant for the payment order.   digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.   firstName string The first name of the payer.   lastName string The last name of the payer.   email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.   msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.   payerReference string A reference used in Enterprise integrations to recognize the payer in the absence of SSN and/or a secure login. Read more about this in the payerReference feature section.   shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.   firstName string The first name of the addressee – the receiver of the shipped goods.   lastName string The last name of the addressee – the receiver of the shipped goods.   streetAddress string Payer’s street address. Maximum 50 characters long.   coAddress string Payer’ s c/o address, if applicable.   zipCode string Payer’s zip code   city string Payer’s city of residence.   countryCode string Country code for country of residence.   billingAddress object The billing address object containing information about the payer’s billing address.   firstName string The first name of the payer.   lastName string The last name of the payer.   streetAddress string The street address of the payer. Maximum 50 characters long.   coAddress string The CO-address (if used)   zipCode string The postal number (ZIP code) of the payer.   city string The city of the payer.   countryCode string SE, NO, or FI.   accountInfo object Object related to the payer containing info about the payer’s account.   accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)   accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)   shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)   suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed) check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Request Delivery Info Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Further information here. Cancelled is returned when an authorized amount has been fully cancelled. See the cancel feature section for further information. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Abort feature section for further information. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is an initialized payment, the available operations are abort, update-order and redirect-checkout or view-checkout, depending on the integration. See Operations for details.",
    "tags": "",
    "url": "/checkout-v3/features/optional/request-delivery-info.html"
  },{
    "title": "RequestCustomerConfirmationAsync",
    "text": "Call RequestCustomerAsync to ask customer a yes/no question. The message will be shown on the terminal’s display together with a green and read button for yes and no. The method may only be called before or after a PaymentRequest has been sent to the terminal, which means it may be sent after a GetPaymentInstrument, but not during the actual payment which in general starts when the amount is known. Returns A CustomerConfirmationResult bool Confirmation - Response from customer. True if yes and false if no. NexoRequestResult 1 2 3 4 5 6 7 public class NexoRequestResult { public string ResponseContent public NexoResponseResult ResponseResult { get; set; } public string ErrorCondition { get; set; } public string ResponseText { get; set; } }; Example when used",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/requestcustomerconfirmation.html"
  },{
    "title": "RequestToDisplayAsync",
    "text": "Call RequestToDispalyAsync to display a message on the terminal. The method may only be called before or after a PaymentRequest has been sent to the terminal, which means it may be sent after a GetPaymentInstrument but not during the actual payment which in general starts when the amount is known. The displayed message stays until next request. Returns A NexoRequestResult 1 2 3 4 5 6 7 public class NexoRequestResult { public virtual string ResponseContent { get; set; } public NexoResponseResult ResponseResult { get; set; } public string ErrorCondition { get; set; } public string ResponseText { get; set; } }",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/requesttodisplayasync.html"
  },{
    "title": "Resource Models",
    "text": "Aborted Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"aborted\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/aborted\", \"abortReason\": \"Payment aborted by payer\" } } Field Type Description paymentOrder object The payment order object. aborted object The abort object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. abortReason string Why the payment was aborted. Cancelled Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancelled HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"cancelled\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/paid\", \"cancelReason\": \"&lt;should be the description from the merchant when doing cancel on the authorisation payment&gt;\", \"instrument\": \"Creditcard\", \"number\": 1234567890, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"tokens\": [ { \"type\": \"payment\", \"token\": \"12345678-1234-1234-1234-1234567890AB\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"recurrence\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" } ], \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. cancelled object The cancel object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. cancelReason string Why the payment was cancelled. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Failed Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"failed\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/failed\", \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Authorization transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. failed object The failed object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. problem object The problem object. type string The type of problem that occurred. title string The title of the problem that occurred. status integer The HTTP status code that the problem was served with. detail string A detailed, human readable description of the error. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. FailedAttempts Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/failedattempts HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"failedAttempts\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/failedattempts\" \"failedAttemptList\": [ { \"created\": \"2020-03-03T07:21:01.1893466Z\", \"instrument\": \"CreditCard\", \"number\": 123456, \"status\": \"Aborted\", \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/3dsecureusercanceled\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete VerifyAuthentication transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"UserCancelled-CANCELED\" } ] } }, { \"created\": \"2020-03-03T07:22:21.1893466Z\", \"instrument\": \"CreditCard\", \"number\": 123457, \"status\": \"Failed\", \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/3dsecureacquirergatewayerror\", \"title\": \"Operation failed\", \"status\": 502, \"detail\": \"Unable to complete VerifyAuthentication transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"ARCOT_MERCHANT_PLUGIN_ERROR-merchant plugin error [98]: This is a triggered error message.\" } ] } } ] } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. failedAttempts object The failed attempt object. financialTransactionsList array The array of failed attempts. created string The ISO-8601 date of when the payment order was created. instrument string Payment instrument used in the failed payment. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. status string The status of the payment attempt. Failed or Aborted. problem object The problem object. type string The type of problem that occurred. title string The title of the problem that occurred. status integer The HTTP status code that the problem was served with. detail string A detailed, human readable description of the error. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. FinancialTransactions Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/financialtransactions HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"financialTransactions\" { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions\", \"financialTransactionList\": [ { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"created\": \"2020-03-04T01:01:01.01Z\", \"updated\": \"2020-03-04T01:01:01.03Z\", \"type\": \"Capture\", \"number\": 123459, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction1\", \"payeeReference\": \"AH123456\", \"receiptReference\": \"OL1234\" \"orderItems\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1/orderitems\" } }, { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/&lt;transactionId&gt;\", \"created\": \"2020-03-05T01:01:01.01Z\", \"updated\": \"2020-03-05T01:01:01.03Z\", \"type\": \"Capture\", \"number\": 123460, \"amount\": 500, \"vatAmount\": 125, \"description\": \"Test transaction2\", \"payeeReference\": \"AH234567\", \"receiptReference\": \"OL5678\" \"orderItems\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1/orderitems\" } }, { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/&lt;transactionId&gt;\", \"created\": \"2020-04-02T01:01:01.01Z\", \"updated\": \"2020-04-02T01:01:01.03Z\", \"type\": \"Reversal\", \"number\": 123461, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction3\", \"payeeReference\": \"AH345678\", \"receiptReference\": \"OL1357\" \"orderItems\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1/orderitems\" } } ] } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. financialTransactions object The financial transactions object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. financialTransactionsList array The array of financial transactions. id string The id of the financial transaction. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. type string The type of transaction. Capture, Authorization, Cancellation, Reversal, Sale. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string The description of the payment order. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. History We advise you to not build logic around the content of these fields. They are mainly for information purposes, and might be subject to name changes. If these should occur, updates will be available in the list below. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/history HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"history\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/history\", \"historyList\": [ { \"created\": \"2020-03-04T01:00:00.00Z\", \"name\": \"PaymentCreated\", \"initiatedBy\" \"Merchant\" }, { \"created\": \"2020-03-04T01:01:00.00Z\", \"name\": \"PaymentLoaded\", \"initiatedBy\" \"System\" }, { \"created\": \"2020-03-04T01:00:15.00Z\", \"name\": \"CheckinInitiated\", \"initiatedBy\" \"System\" }, { \"created\": \"2020-03-04T01:00:16.00Z\", \"name\": \"PayerDetailsRetrieved\", \"initiatedBy\" \"System\" }, { \"created\": \"2020-03-04T01:00:20.00Z\", \"name\": \"PayerCheckedIn\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T01:01:01.01Z\", \"name\": \"PaymentInstrumentSelected\", \"instrument\": \"CreditCard\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T01:03:01.01Z\", \"name\": \"PaymentAttemptStarted\", \"instrument\": \"CreditCard\", \"number\": 123456, \"prefill\": true, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T01:03:01.01Z\", \"name\": \"PaymentAttemptAborted\", \"number\": 123456, \"instrument\": \"CreditCard\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentInstrumentSelected\", \"instrument\": \"Vipps\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T03:01:01.01Z\", \"name\": \"PaymentInstrumentSelected\", \"instrument\": \"CreditCard\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentAttemptStarted\", \"instrument\": \"CreditCard\", \"number\": 123457, \"prefill\": true, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentAttemptFailed\", \"instrument\": \"CreditCard\", \"number\": 123457, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentAttemptStarted\", \"instrument\": \"CreditCard\", \"number\": 123458, \"prefill\": true, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentPaid\", \"instrument\": \"CreditCard\" \"number\": 123458, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-05T02:01:01.01Z\", \"name\": \"PaymentPartialCaptured\", \"instrument\": \"CreditCard\" \"number\": 123459, \"initiatedBy\" \"Merchant\" }, { \"created\": \"2020-03-06T02:01:01.01Z\", \"name\": \"PaymentPartialCaptured\", \"instrument\": \"CreditCard\" \"number\": 123460, \"initiatedBy\" \"Merchant\" }, { \"created\": \"2020-03-07T02:01:01.01Z\", \"name\": \"PaymentPartialReversed\", \"instrument\": \"CreditCard\" \"number\": 123461, \"initiatedBy\" \"Merchant\" } ] } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. history object The history object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. historyList array The array of history objects. created string The ISO-8601 date of when the history event was created. name string Name of the history event. See list below for information. instrument string The payment instrument used when the event occurred. number integer Payment number associated with the event. prefill bool Indicates if payment info was prefilled or not. Show fields Hide fields History Event Name Description PaymentCreated This event will occur as soon as the merchant initiates the payment order. CheckinInitiated Will be set when checkin is started, if checkin is activated for the merchant. The merchant must be configured with ProductPackage=Checkout PayerDetailsRetrieved Will be set if a consumer profile is found. The merchant must be configured with ProductPackage=Checkout PayerCheckedIn Will be set when checkin is completed. The merchant must be configured with ProductPackage=Checkout PaymentInstrumentSet If the PaymentOrder is initiated in InstrumentMode, the first occurrence will be set to the value from the merchant´s POST statement. Following values will be set for each time the merchant to a PATCH to change the instrument used for that payment. The instrument set will be in the instrument parameter. PaymentLoaded Will be set the first time the payer loads the payment window. If this event hasn’t occurred, the payment window hasn’t been loaded. PaymentInstrumentSelected Will occur each time the payer expands an instrument in the payment menu. The instrument selected will be set in the instrument parameter. PaymentAttemptStarted Will occur when the payer presses the first button in the payment process (either “pay” or “next” if the payment has multiple steps). The instrument parameter will contain the instrument for this attempt. The prefill will be true if the payment page was prefilled with payment information. The transaction number for this payment will be available in the number field. PaymentAttemptAborted Will occur if the payer aborts the payment attempt. Both the number and instrument parameters will be available on this event. PaymentAttemptFailed Will occur if the payment failed. Both the number and instrument parameters will be available on this event. PaymentPaid Will occur if the payment succeeds. Both the number and instrument parameters will be available on this event. PaymentCaptured Will occur when the merchant has captured the full authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. PaymentPartialCaptured Will occur when the merchant has done a partial capture of authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. PaymentCancelled Will occur when the merchant has cancelled the full authorization amount. Both the number and instrument parameters will be available on this event. PaymentPartialCancelled Will occur when the merchant has cancelled part of the authorization amount. Both the number and instrument parameters will be available on this event. PaymentReversed Will occur when the merchant reverses the full authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. PaymentPartialReversed Will occur when the merchant reverses a part of the authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. Paid The payment order response with status equal to Paid, and the paid resource expanded. Please note that the main code example is of a card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/paid\", \"instrument\": \"Creditcard\", \"number\": 1234567890, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"tokens\": [ { \"type\": \"payment\", \"token\": \"12345678-1234-1234-1234-1234567890AB\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"recurrence\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"unscheduled\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"transactionsOnFile\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" } ], \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } Apple Pay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } } Click to Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Click to Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ClickToPay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } Google Pay™ paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Google Pay™ Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"GooglePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } MobilePay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedDPan\": \"48953700******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"bin\": \"489537\" } } } Vipps Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedDPan\": \"49250000******04\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 123456789 } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. maskedDPan string A masked version of a network token representing the card. It will only appear if the chosen payment instrument is tokenized and the card used is tokenized by Visa or MasterCard. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish. Payer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\", \"reference\": \"reference to payer\" \"name\": \"Azra Oliveira\", \"email\": \"azra@payex.com\", \"msisdn\": \"+46722345678\", \"gender\": \"male\", \"birthYear\": \"1980\", \"hashedFields\": { \"emailHash\": \"968e23eda8818f8647d15775c939b3bc32ba592e\", \"msisdnHash\": \"a23ec9d5b9def87cae2769cfffb0b8a0487a5afd\" , \"socialSecurityNumberHash\": \"50288c11d79c1ba0671e6426ffddbb4954347ba4\" }, \"shippingAddress\": { \"addressee\": \"firstName + lastName\", \"coAddress\": \"coAddress\", \"streetAddress\": \"streetAddress\", \"zipCode\": \"zipCode\", \"city\": \"city\", \"countryCode\": \"countryCode\" }, \"device\": { \"detectionAccuracy\": 48, \"ipAddress\": \"127.0.0.1\", \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36 Edg/97.0.1072.62\", \"deviceType\": \"Desktop\", \"hardwareFamily\": \"Emulator\", \"hardwareName\": \"Desktop|Emulator\", \"hardwareVendor\": \"Unknown\", \"platformName\": \"Windows\", \"platformVendor\": \"Microsoft\", \"platformVersion\": \"10.0\", \"browserName\": \"Edge (Chromium) for Windows\", \"browserVendor\": \"Microsoft\", \"browserVersion\": \"95.0\", \"browserJavaEnabled\": false } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. payer object The payer object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. reference string The reference to the payer. In checkout, this will be the consumerReference. name string The name of the payer. email string The email address of the payer. msisdn string The msisdn of the payer. gender string The gender of the payer. birthYear string The birth year of the payer. hashedFields object The hashedFields object, containing hashed versions of the payer’s email, msisdn and if present, Social Security Number. emailHash string A hashed version of the payer’s email. msisdnHash string A hashed version of the payer’s email. socialSecurityNumberHash string A hashed version of the payer’s social security number. shippingAddress object The shipping address object related to the payer. addressee string First and last name of the addressee – the receiver of the shipped goods. coAddress string Payer’s c/o address, if applicable. streetAddress string Payer’s street address. Maximum 50 characters long. coAddress string Payer’s c/o address, if applicable. zipCode string Payer’s zip code. city string Payer’s city of residence. countryCode string Country code for country of residence, e.g. SE, NO, or FI. device object The device detection object. detectionAccuracy string Indicates the accuracy of the device detection on a scale from 0 to 100. ipAddress string The IP address of the payer’s device. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. deviceType string The type of device used by the payer. hardwareFamily string The type of hardware used by the payer. hardwareName string The name of the payer’s hardware. hardwareVendor string The vendor of the payer’s hardware. platformName string Name of the operating system used on the payer’s device. platformVendor string Vendor of the operating system used on the payer’s device. platformVersion string Version of the operating system used on the payer’s device. browserName string Name of the browser used on the payer’s device. browserVendor string Vendor of the browser used on the payer’s device. browserVersion string Version of the browser used on the payer’s device. browserJavaEnabled bool Indicates if the browser has Java enabled. Either true or false.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/resource-sub-models.html"
  },{
    "title": "Resource Models",
    "text": "Aborted Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/aborted HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"aborted\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/aborted\", \"abortReason\": \"Payment aborted by payer\" } } Field Type Description paymentOrder object The payment order object. aborted object The abort object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. abortReason string Why the payment was aborted. Cancelled Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/cancelled HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"cancelled\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/paid\", \"cancelReason\": \"&lt;should be the description from the merchant when doing cancel on the authorisation payment&gt;\", \"instrument\": \"Creditcard\", \"number\": 1234567890, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"tokens\": [ { \"type\": \"payment\", \"token\": \"12345678-1234-1234-1234-1234567890AB\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"recurrence\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" } ], \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. cancelled object The cancel object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. cancelReason string Why the payment was cancelled. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. Failed Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/failed HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"failed\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/failed\", \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/acquirererror\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Authorization transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER-unknown error, response-code: 51\" } ] } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. failed object The failed object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. problem object The problem object. type string The type of problem that occurred. title string The title of the problem that occurred. status integer The HTTP status code that the problem was served with. detail string A detailed, human readable description of the error. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. FailedAttempts Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/failedattempts HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"failedAttempts\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/failedattempts\" \"failedAttemptList\": [ { \"created\": \"2020-03-03T07:21:01.1893466Z\", \"instrument\": \"CreditCard\", \"number\": 123456, \"status\": \"Aborted\", \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/3dsecureusercanceled\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete VerifyAuthentication transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"UserCancelled-CANCELED\" } ] } }, { \"created\": \"2020-03-03T07:22:21.1893466Z\", \"instrument\": \"CreditCard\", \"number\": 123457, \"status\": \"Failed\", \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/3dsecureacquirergatewayerror\", \"title\": \"Operation failed\", \"status\": 502, \"detail\": \"Unable to complete VerifyAuthentication transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"ARCOT_MERCHANT_PLUGIN_ERROR-merchant plugin error [98]: This is a triggered error message.\" } ] } } ] } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. failedAttempts object The failed attempt object. financialTransactionsList array The array of failed attempts. created string The ISO-8601 date of when the payment order was created. instrument string Payment instrument used in the failed payment. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. status string The status of the payment attempt. Failed or Aborted. problem object The problem object. type string The type of problem that occurred. title string The title of the problem that occurred. status integer The HTTP status code that the problem was served with. detail string A detailed, human readable description of the error. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. FinancialTransactions Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/financialtransactions HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"financialTransactions\" { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions\", \"financialTransactionList\": [ { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"created\": \"2020-03-04T01:01:01.01Z\", \"updated\": \"2020-03-04T01:01:01.03Z\", \"type\": \"Capture\", \"number\": 123459, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction1\", \"payeeReference\": \"AH123456\", \"receiptReference\": \"OL1234\" \"orderItems\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1/orderitems\" } }, { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/&lt;transactionId&gt;\", \"created\": \"2020-03-05T01:01:01.01Z\", \"updated\": \"2020-03-05T01:01:01.03Z\", \"type\": \"Capture\", \"number\": 123460, \"amount\": 500, \"vatAmount\": 125, \"description\": \"Test transaction2\", \"payeeReference\": \"AH234567\", \"receiptReference\": \"OL5678\" \"orderItems\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1/orderitems\" } }, { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/&lt;transactionId&gt;\", \"created\": \"2020-04-02T01:01:01.01Z\", \"updated\": \"2020-04-02T01:01:01.03Z\", \"type\": \"Reversal\", \"number\": 123461, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction3\", \"payeeReference\": \"AH345678\", \"receiptReference\": \"OL1357\" \"orderItems\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/financialtransactions/7e6cdfc3-1276-44e9-9992-7cf4419750e1/orderitems\" } } ] } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. financialTransactions object The financial transactions object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. financialTransactionsList array The array of financial transactions. id string The id of the financial transaction. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. type string The type of transaction. Capture, Authorization, Cancellation, Reversal, Sale. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string The description of the payment order. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. History We advise you to not build logic around the content of these fields. They are mainly for information purposes, and might be subject to name changes. If these should occur, updates will be available in the list below. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/history HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"history\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/history\", \"historyList\": [ { \"created\": \"2020-03-04T01:00:00.00Z\", \"name\": \"PaymentCreated\", \"initiatedBy\" \"Merchant\" }, { \"created\": \"2020-03-04T01:01:00.00Z\", \"name\": \"PaymentLoaded\", \"initiatedBy\" \"System\" }, { \"created\": \"2020-03-04T01:00:15.00Z\", \"name\": \"CheckinInitiated\", \"initiatedBy\" \"System\" }, { \"created\": \"2020-03-04T01:00:16.00Z\", \"name\": \"PayerDetailsRetrieved\", \"initiatedBy\" \"System\" }, { \"created\": \"2020-03-04T01:00:20.00Z\", \"name\": \"PayerCheckedIn\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T01:01:01.01Z\", \"name\": \"PaymentInstrumentSelected\", \"instrument\": \"CreditCard\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T01:03:01.01Z\", \"name\": \"PaymentAttemptStarted\", \"instrument\": \"CreditCard\", \"number\": 123456, \"prefill\": true, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T01:03:01.01Z\", \"name\": \"PaymentAttemptAborted\", \"number\": 123456, \"instrument\": \"CreditCard\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentInstrumentSelected\", \"instrument\": \"Vipps\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T03:01:01.01Z\", \"name\": \"PaymentInstrumentSelected\", \"instrument\": \"CreditCard\", \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentAttemptStarted\", \"instrument\": \"CreditCard\", \"number\": 123457, \"prefill\": true, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentAttemptFailed\", \"instrument\": \"CreditCard\", \"number\": 123457, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentAttemptStarted\", \"instrument\": \"CreditCard\", \"number\": 123458, \"prefill\": true, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-04T02:01:01.01Z\", \"name\": \"PaymentPaid\", \"instrument\": \"CreditCard\" \"number\": 123458, \"initiatedBy\" \"Consumer\" }, { \"created\": \"2020-03-05T02:01:01.01Z\", \"name\": \"PaymentPartialCaptured\", \"instrument\": \"CreditCard\" \"number\": 123459, \"initiatedBy\" \"Merchant\" }, { \"created\": \"2020-03-06T02:01:01.01Z\", \"name\": \"PaymentPartialCaptured\", \"instrument\": \"CreditCard\" \"number\": 123460, \"initiatedBy\" \"Merchant\" }, { \"created\": \"2020-03-07T02:01:01.01Z\", \"name\": \"PaymentPartialReversed\", \"instrument\": \"CreditCard\" \"number\": 123461, \"initiatedBy\" \"Merchant\" } ] } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. history object The history object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. historyList array The array of history objects. created string The ISO-8601 date of when the history event was created. name string Name of the history event. See list below for information. instrument string The payment instrument used when the event occurred. number integer Payment number associated with the event. prefill bool Indicates if payment info was prefilled or not. Show fields Hide fields History Event Name Description PaymentCreated This event will occur as soon as the merchant initiates the payment order. CheckinInitiated Will be set when checkin is started, if checkin is activated for the merchant. The merchant must be configured with ProductPackage=Checkout PayerDetailsRetrieved Will be set if a consumer profile is found. The merchant must be configured with ProductPackage=Checkout PayerCheckedIn Will be set when checkin is completed. The merchant must be configured with ProductPackage=Checkout PaymentInstrumentSet If the PaymentOrder is initiated in InstrumentMode, the first occurrence will be set to the value from the merchant´s POST statement. Following values will be set for each time the merchant to a PATCH to change the instrument used for that payment. The instrument set will be in the instrument parameter. PaymentLoaded Will be set the first time the payer loads the payment window. If this event hasn’t occurred, the payment window hasn’t been loaded. PaymentInstrumentSelected Will occur each time the payer expands an instrument in the payment menu. The instrument selected will be set in the instrument parameter. PaymentAttemptStarted Will occur when the payer presses the first button in the payment process (either “pay” or “next” if the payment has multiple steps). The instrument parameter will contain the instrument for this attempt. The prefill will be true if the payment page was prefilled with payment information. The transaction number for this payment will be available in the number field. PaymentAttemptAborted Will occur if the payer aborts the payment attempt. Both the number and instrument parameters will be available on this event. PaymentAttemptFailed Will occur if the payment failed. Both the number and instrument parameters will be available on this event. PaymentPaid Will occur if the payment succeeds. Both the number and instrument parameters will be available on this event. PaymentCaptured Will occur when the merchant has captured the full authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. PaymentPartialCaptured Will occur when the merchant has done a partial capture of authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. PaymentCancelled Will occur when the merchant has cancelled the full authorization amount. Both the number and instrument parameters will be available on this event. PaymentPartialCancelled Will occur when the merchant has cancelled part of the authorization amount. Both the number and instrument parameters will be available on this event. PaymentReversed Will occur when the merchant reverses the full authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. PaymentPartialReversed Will occur when the merchant reverses a part of the authorization amount. Both the number and instrument parameters will be available on this event. The number of this event will point to a number in the financialTransaction field for easy linking. Paid The payment order response with status equal to Paid, and the paid resource expanded. Please note that the main code example is of a card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/paid\", \"instrument\": \"Creditcard\", \"number\": 1234567890, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"tokens\": [ { \"type\": \"payment\", \"token\": \"12345678-1234-1234-1234-1234567890AB\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"recurrence\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"unscheduled\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"transactionsOnFile\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" } ], \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } Apple Pay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } } Click to Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Click to Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ClickToPay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } Google Pay™ paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Google Pay™ Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"GooglePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } MobilePay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedDPan\": \"48953700******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"bin\": \"489537\" } } } Vipps Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedDPan\": \"49250000******04\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 123456789 } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. maskedDPan string A masked version of a network token representing the card. It will only appear if the chosen payment instrument is tokenized and the card used is tokenized by Visa or MasterCard. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish. Payer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\", \"reference\": \"reference to payer\" \"name\": \"Azra Oliveira\", \"email\": \"azra@payex.com\", \"msisdn\": \"+46722345678\", \"gender\": \"male\", \"birthYear\": \"1980\", \"hashedFields\": { \"emailHash\": \"968e23eda8818f8647d15775c939b3bc32ba592e\", \"msisdnHash\": \"a23ec9d5b9def87cae2769cfffb0b8a0487a5afd\" , \"socialSecurityNumberHash\": \"50288c11d79c1ba0671e6426ffddbb4954347ba4\" }, \"shippingAddress\": { \"addressee\": \"firstName + lastName\", \"coAddress\": \"coAddress\", \"streetAddress\": \"streetAddress\", \"zipCode\": \"zipCode\", \"city\": \"city\", \"countryCode\": \"countryCode\" }, \"device\": { \"detectionAccuracy\": 48, \"ipAddress\": \"127.0.0.1\", \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36 Edg/97.0.1072.62\", \"deviceType\": \"Desktop\", \"hardwareFamily\": \"Emulator\", \"hardwareName\": \"Desktop|Emulator\", \"hardwareVendor\": \"Unknown\", \"platformName\": \"Windows\", \"platformVendor\": \"Microsoft\", \"platformVersion\": \"10.0\", \"browserName\": \"Edge (Chromium) for Windows\", \"browserVendor\": \"Microsoft\", \"browserVersion\": \"95.0\", \"browserJavaEnabled\": false } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. payer object The payer object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. reference string The reference to the payer. In checkout, this will be the consumerReference. name string The name of the payer. email string The email address of the payer. msisdn string The msisdn of the payer. gender string The gender of the payer. birthYear string The birth year of the payer. hashedFields object The hashedFields object, containing hashed versions of the payer’s email, msisdn and if present, Social Security Number. emailHash string A hashed version of the payer’s email. msisdnHash string A hashed version of the payer’s email. socialSecurityNumberHash string A hashed version of the payer’s social security number. shippingAddress object The shipping address object related to the payer. addressee string First and last name of the addressee – the receiver of the shipped goods. coAddress string Payer’s c/o address, if applicable. streetAddress string Payer’s street address. Maximum 50 characters long. coAddress string Payer’s c/o address, if applicable. zipCode string Payer’s zip code. city string Payer’s city of residence. countryCode string Country code for country of residence, e.g. SE, NO, or FI. device object The device detection object. detectionAccuracy string Indicates the accuracy of the device detection on a scale from 0 to 100. ipAddress string The IP address of the payer’s device. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. deviceType string The type of device used by the payer. hardwareFamily string The type of hardware used by the payer. hardwareName string The name of the payer’s hardware. hardwareVendor string The vendor of the payer’s hardware. platformName string Name of the operating system used on the payer’s device. platformVendor string Vendor of the operating system used on the payer’s device. platformVersion string Version of the operating system used on the payer’s device. browserName string Name of the browser used on the payer’s device. browserVendor string Vendor of the browser used on the payer’s device. browserVersion string Version of the browser used on the payer’s device. browserJavaEnabled bool Indicates if the browser has Java enabled. Either true or false.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/resource-sub-models.html"
  },{
    "title": "Resource Models",
    "text": "Paid The payment order response with status paid, and the paid resource expanded. Please note that the main code example is of a Card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/paid\", \"instrument\": \"Creditcard\", \"number\": 1234567890, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"tokens\": [ { \"type\": \"payment\", \"token\": \"12345678-1234-1234-1234-1234567890AB\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"recurrence\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"unscheduled\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"transactionsOnFile\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" } ], \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } Apple Pay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"expiryDate\": \"12/2023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } } MobilePay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedPan\": \"489537******1424\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"bin\": \"489537\" } } } Vipps Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 1234567890 } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/resource-sub-models.html"
  },{
    "title": "Resource Models",
    "text": "Paid The payment order response with status paid, and the paid resource expanded. Please note that the main code example is of a Card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c/paid\", \"instrument\": \"Creditcard\", \"number\": 1234567890, \"payeeReference\": \"CD123\", \"orderReference\": \"AB1234\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"tokens\": [ { \"type\": \"payment\", \"token\": \"12345678-1234-1234-1234-1234567890AB\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"recurrence\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"unscheduled\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" }, { \"type\": \"transactionsOnFile\", \"token\": \"87654321-4321-4321-4321-BA0987654321\", \"name\": \"4925xxxxxx000004\", \"expiryDate\" : \"mm/yyyy\" } ], \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } Apple Pay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"expiryDate\": \"12/2023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } } } MobilePay Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedPan\": \"489537******1424\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"bin\": \"489537\" } } } Vipps Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 1234567890 } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/resource-sub-models.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Create Reversal Transaction If we want to reverse a previously captured amount, we need to perform reversal against the accompanying href returned in the operations list. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Reversal of captured transaction\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check description string Textual description of why the transaction is reversed. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. Reversal Response If the reversal request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"reversal\": { \"id\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/pcreditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-26T14:00:03.4725904Z\", \"updated\": \"2022-01-26T14:00:04.3851302Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 71100730898, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Reversing the capture amount\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\" \"isOperational\": false, \"reconciliationNumber\": 738180, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this reversal transaction belongs to. reversals object The reversal object, containing information about the reversal transaction. id string The relative URL of the reversal transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational boolean true if the transaction is operational; otherwise false . reconciliationNumber string The number of the reconciliation batch file where the transaction can be found. operations array The array of operations that are possible to perform on the payment order in its current state.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Create Reversal Transaction If we want to reverse a previously captured amount, we need to perform reversal against the accompanying href returned in the operations list. Reversal Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Reversal of captured transaction\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check description string Textual description of why the transaction is reversed. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar.   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. Reversal Response If the reversal request succeeds, the response should be similar to the example below: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"reversal\": { \"id\": \"/psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/reversals/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/pcreditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-26T14:00:03.4725904Z\", \"updated\": \"2022-01-26T14:00:04.3851302Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 71100730898, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Reversing the capture amount\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC122\" \"isOperational\": false, \"reconciliationNumber\": 738180, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this reversal transaction belongs to. reversals object The reversal object, containing information about the reversal transaction. id string The relative URL of the reversal transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational boolean true if the transaction is operational; otherwise false . reconciliationNumber string The number of the reconciliation batch file where the transaction can be found. operations array The array of operations that are possible to perform on the payment order in its current state.",
    "tags": "",
    "url": "/checkout-v3/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a swish payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"swishPaymentReference\": \"8D0A30A7804E40479F88FFBA26111F04\", \"swishStatus\": \"PAID\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a trustly payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a invoice payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"receiptReference\": \"AH12355\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a creditcard payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a mobilepay payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a vipps payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a old-implementations/checkout-v2 payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/reversal.html"
  },{
    "title": "Reversal",
    "text": "Reversal This transaction is used when a captured payment needs to be reversed. Please note that you have a maximum of 5 consecutive failed attempts at a reversal. The payment will be locked after this, and you need to contact us for another attempt. Reversal Request The create-reversal operation will reverse a previously captured payment. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } Show fields Hide fields Required Field Type Description check transaction object The object representation of the generic transaction resource. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A textual description of the reversal. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Reversal Response The reversal resource contains information about the newly created reversal transaction. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversal\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversal/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description   payment string The relative URL of the payment this reversal transaction belongs to.   reversal object The reversal resource contains information about the reversal transaction made against a card payment.   id string The relative URL of the created reversal transaction.   check transaction object The object representation of the generic transaction resource. id string The relative URL of the current transaction resource.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity.   number string The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   failedReason string The human readable explanation of why the payment failed.   isOperational boolean true if the transaction is operational; otherwise false .   operations array The array of operations that are possible to perform on the transaction in its current state.   List Reversal Transactions The reversals resource lists the reversal transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The reversal resource contains information about the reversal transaction made against a old-implementations/payment-menu-v2 payment. You can return a specific reversal transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"reversals\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"reversalList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Reversal\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the reversals resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of reversal transaction objects. {{ transaction }}List[] object The reversal transaction object described in the reversal resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial reversal has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Reversal Sequence Diagram sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [reversals] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/reversal.html"
  },{
    "title": "ReverseLastAsync",
    "text": "ReverseLastAsync will reverse the last transaction made if it was approved. Returns A ReversalRequestResult 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class NexoRequestResult { public virtual string ResponseContent { get; set; } public NexoResponseResult ResponseResult { get; set; } public string ErrorCondition { get; set; } public string ResponseText { get; set; } } public class ReversalRequestResult : NexoRequestResult { public JObject CustomerReceiptData { get; set; } public string FormattedReceipt { get; set; } public string ReceiptBlob { get; set; } public override string ResponseContent { get; set; } }",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/reverselastasync.html"
  },{
    "title": "Seamless View Events",
    "text": "Payment Menu Events During operation in the Payment Menu, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onAborted Triggered when the payer clicks the “Abort” link on the redirect page in Payment Menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onAborted event object 1 2 3 4 5 { \"event\": \"OnAborted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onCheckoutLoaded Triggered when the payment menu is rendered after being opened. Subscribe to this event if you need total control over the height of Swedbank Pay’s payment frame. This is the initial height of the frame when loaded. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onCheckoutLoaded event object 1 2 3 4 5 { \"event\": \"OnCheckoutLoaded\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"bodyHeight\": \"[clientHeight of iframe content]\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. bodyHeight string The height of the client’s iframe content. onCheckoutResized Triggered every time that a reconfiguration leads to resizing of the Checkout Seamless View. Subscribe to this event if you need total control over the height of Swedbank Pay’s payment frame. The payment instruments require individual heights when rendering their content. This event triggers each time the iframe needs resizing during a payment. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onCheckoutResized event object 1 2 3 4 5 { \"event\": \"OnCheckoutResized\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"bodyHeight\": \"[clientHeight of iframe content]\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. bodyHeight string The height of the client’s iframe content. onError Triggered during terminal errors or if the configuration fails validation. Subscribe to this event if you want some action to occur on your site when an error happens during the payment. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"event\": \"OnError\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"details\": \"English descriptive text of the error\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onEventNotification Triggered whenever any other public event is called. It does not prevent their handling. Subscribe to this event in order to log actions that are happening in the payment flow at Swedbank Pay. onEventNotification is raised with the following event argument object: onEventNotification event object 1 2 3 4 5 6 7 { \"event\": \"OnEventNotification\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"sourceEvent\": \"OnCheckoutLoaded | OnCheckoutResized | OnError | OnPayerIdentified | OnInstrumentSelected | OnPaid | OnAborted | OnOutOfViewRedirect | OnTermsOfServiceRequested | OnOutOfViewOpen\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. sourceEvent string A human readable and descriptive text with the event name. onInstrumentSelected Triggered when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onOutOfViewOpen Triggered when another tab is opened in the browser, like the information page for onboarding of stored cards, or Swedbank Pay’s owner TOS. The event cannot be opened as a modal since the payer needs to see that this is a link on Swedbank Pay’s domain. Subscribe to this event if you do not want the default handling of these links. But e.g. want to redirect the payer to a new page, and not just another tab within the same browser. If no callback method is set, the url will be opened in a new tab. It will be raised with the following event argument object: onOutOfViewOpen event object 1 2 3 4 5 { \"event\": \"OnOutOfViewOpen\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"openUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. openUrl string The external URL where the user will be redirected. onOutOfViewRedirect Triggered when a user is redirected to a separate web page, like 3-D Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onOutOfViewRedirect event object 1 2 3 4 5 { \"event\": \"OnOutOfViewRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaid This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaid event object 1 2 3 4 5 { \"event\": \"OnPaid\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onTermsOfServiceRequested Triggered when the user clicks on the “Display terms and conditions” link. Subscribe to this event if you don’t want the default handling of the termsOfServiceUrl. Swedbank Pay will open the termsOfServiceUrl in a new tab within the same browser by default. If no callback method is set, terms and conditions will be displayed in an overlay or a new tab. It will be raised with the following event argument object: onTermsOfServiceRequested event object 1 2 3 4 5 { \"event\": \"OnTermsOfServiceRequested\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/&lt;paymentorderId&gt;\"}, \"termsOfServiceUrl\": \"https://example.org/terms.html\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. termsOfServiceUrl string The URL containing Terms of Service and conditions.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onAborted Triggered when the payer clicks the “Abort” link on the redirect page in Payment Menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onAborted event object 1 2 3 4 5 { \"event\": \"OnAborted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onCheckoutLoaded Triggered when the payment menu is rendered after being opened. Subscribe to this event if you need total control over the height of Swedbank Pay’s payment frame. This is the initial height of the frame when loaded. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onCheckoutLoaded event object 1 2 3 4 5 { \"event\": \"OnCheckoutLoaded\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"bodyHeight\": \"[clientHeight of iframe content]\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. bodyHeight string The height of the client’s iframe content. onCheckoutResized Triggered every time that a reconfiguration leads to resizing of the Checkout Seamless View. Subscribe to this event if you need total control over the height of Swedbank Pay’s payment frame. The payment instruments require individual heights when rendering their content. This event triggers each time the iframe needs resizing during a payment. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onCheckoutResized event object 1 2 3 4 5 { \"event\": \"OnCheckoutResized\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"bodyHeight\": \"[clientHeight of iframe content]\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. bodyHeight string The height of the client’s iframe content. onError Triggered during terminal errors or if the configuration fails validation. Subscribe to this event if you want some action to occur on your site when an error happens during the payment. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"event\": \"OnError\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"details\": \"English descriptive text of the error\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onEventNotification Triggered whenever any other public event is called. It does not prevent their handling. Subscribe to this event in order to log actions that are happening in the payment flow at Swedbank Pay. onEventNotification is raised with the following event argument object: onEventNotification event object 1 2 3 4 5 6 7 { \"event\": \"OnEventNotification\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"sourceEvent\": \"OnCheckoutLoaded | OnCheckoutResized | OnError | OnPayerIdentified | OnInstrumentSelected | OnPaid | OnAborted | OnOutOfViewRedirect | OnTermsOfServiceRequested | OnOutOfViewOpen\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. sourceEvent string A human readable and descriptive text with the event name. onInstrumentSelected Triggered when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onOutOfViewOpen Triggered when another tab is opened in the browser, like the information page for onboarding of stored cards, or Swedbank Pay’s owner TOS. The event cannot be opened as a modal since the payer needs to see that this is a link on Swedbank Pay’s domain. Subscribe to this event if you do not want the default handling of these links. But e.g. want to redirect the payer to a new page, and not just another tab within the same browser. If no callback method is set, the url will be opened in a new tab. It will be raised with the following event argument object: onOutOfViewOpen event object 1 2 3 4 5 { \"event\": \"OnOutOfViewOpen\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"openUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. openUrl string The external URL where the user will be redirected. onOutOfViewRedirect Triggered when a user is redirected to a separate web page, like 3-D Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onOutOfViewRedirect event object 1 2 3 4 5 { \"event\": \"OnOutOfViewRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaid This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaid event object 1 2 3 4 5 { \"event\": \"OnPaid\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onTermsOfServiceRequested Triggered when the user clicks on the “Display terms and conditions” link. Subscribe to this event if you don’t want the default handling of the termsOfServiceUrl. Swedbank Pay will open the termsOfServiceUrl in a new tab within the same browser by default. If no callback method is set, terms and conditions will be displayed in an overlay or a new tab. It will be raised with the following event argument object: onTermsOfServiceRequested event object 1 2 3 4 5 { \"event\": \"OnTermsOfServiceRequested\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/&lt;paymentorderId&gt;\"}, \"termsOfServiceUrl\": \"https://example.org/terms.html\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. termsOfServiceUrl string The URL containing Terms of Service and conditions.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"swish\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string swish, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/swishpayments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"trustly\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string trustly, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/trustlypayments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"invoice\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string invoice, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/invoicepayments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"creditcard\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string creditcard, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/creditcardpayments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"mobilepay\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string mobilepay, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/mobilepaypayments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"vipps\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string vipps, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/vippspayments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"old-implementations/checkout-v2\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string old-implementations/checkout-v2, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View Events",
    "text": "Seamless View Events During operation in the Seamless View, several events can occur. They are described below. info Event Overrides: Adding an event handler to one of the following events overrides the default event handler, meaning your custom event handler will have to do what the default event handler did. If you don’t, the behavior of the event is going to be undefined. Just adding an event handler for logging purposes is therefore not possible, the event handler will have to perform some functionality similar to the event handler you are overriding. onApplicationConfigured This event triggers whenever a reconfiguration leads to resizing of the payment menu. No action will be done if callback is not set. The onApplicationConfigured event is raised with the following event argument object: onApplicationConfigured event object 1 2 3 { \"details\": \"source: \"PaymentMenuClient\", bodyHeight: \"[clientHeight of iframe content]\"\" } Field Type Description details string The source of the reconfiguration, and the new height of the iframe. onBillingDetailsAvailable This event triggers when a consumer has been identified. The onBillingDetailsAvailable event will be raised with the following event argument object: onBillingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnBillingDetailsAvailable\", \"url\": \"/psp/consumers//billing-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing billing details. onError This event triggers during terminal errors or if the configuration fails validation. The onError event will be raised with the following event argument object: onError event object 1 2 3 4 5 { \"origin\": \"old-implementations/payment-menu-v2\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"English descriptive text of the error\" } Field Type Description origin string old-implementations/payment-menu-v2, identifies the system that originated the error. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error.       onExternalRedirect This event triggers when a user is redirected to a separate web page, like 3D-Secure or BankID signing. Subscribe to this event if it’s not possible to redirect the payer directly from within Swedbank Pay’s payment frame. If no callback method is set, you will be redirected to the relevant url. It will be raised with the following event argument object: onExternalRedirect event object 1 2 3 4 5 { \"event\": \"OnExternalRedirect\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/external\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The external URL where the user will be redirected. onPaymentAborted This event triggers when the user cancels the payment. The onPaymentAborted event is raised with the following event argument object: onPaymentAborted event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCanceled This event triggers when the payer aborts the purchase from the payment menu. As the Seamless View payment menu doesn’t have a cancel button (present in the Redirect integration), you need to provide this button for the payer at your end. When the payer presses the cancel button, we recommend sending an API request aborting the payment so it can’t be completed at a later time. When we receive the request, an abort event will be raised the next time the UI fetches information from the server. Because of that, you should also refresh after aborting, as this will trigger the event. It will be raised with the following event argument object: onPaymentCanceled event object 1 2 3 4 5 { \"event\": \"OnPaymentCanceled\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/cancelled\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a cancelled payment. onPaymentCompleted This event triggers when the payer successfully completes or cancels the payment. Subscribe to this event if actions are needed on you side other than the default handling of redirecting the payer to your completeUrl. Call GET on the paymentOrder to receive the actual payment status, and take appropriate actions according to it. It will be raised with the following event argument object: onPaymentCompleted event object 1 2 3 4 5 { \"event\": \"OnPaymentCompleted\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"redirectUrl\": \"https://example.com/success\" } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after completing the payment. onPaymentCreated Triggered when the payer has selected a payment instrument and actively attempts to perform a payment. The onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected when initiating the payment. onPaymentFailed Triggered when a payment has failed, disabling further attempts to perform a payment. The onPaymentFailed event is raised with the following event argument object: onPaymentFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/failed\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a failed payment. onPaymentInstrumentSelected This event triggers when a user actively changes payment instrument in the Payment Menu. Subscribe to this event if actions, e.g. showing an information text, are required on your side if the payer changes payment instrument. If no callback method is set, no handling action will be done. It will be raised with the following event argument object: onPaymentInstrumentSelected event object 1 2 3 4 5 { \"event\": \"OnPaymentInstrumentSelected\", \"paymentOrder\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" }, \"instrument\": \"creditcard | vipps | swish | invoice\", } Field Type Description event string The name of the event raised. paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string Creditcard, vipps, swish, invoice. The instrument selected by the user.     onPaymentPaid This event triggers when a payment has completed successfully. The onPaymentPaid event is raised with the following event argument object: onPaymentPaid event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"redirectUrl\": \"https://example.com/complete\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. redirectUrl string The URL the user will be redirect to after a completed payment. onPaymentPending Triggered when a payment enters a paying state ( Sale, Authorize, Cancel, etc). Read more about these events below. onPaymentPending event object 1 2 3 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. onPaymentToS This event triggers when the user clicks on the “Display terms and conditions” link. The onPaymentToS event is raised with the following event argument object: onPaymentToS event object 1 2 3 4 { \"origin\": \"owner\", \"openUrl\": \"https://example.com/terms-of-service\" } Field Type Description origin string owner, merchant. The value is always merchant unless Swedbank Pay hosts the view. openUrl string The URL containing Terms of Service and conditions. onPaymentTransactionFailed This event triggers when a payment attempt fails, further attempts can be made for the payment. An error message will appear in the payment UI, and the payer will be able to try again or choose another payment instrument. The onPaymentTransactionFailed event is raised with the following event argument object: onPaymentTransactionFailed event object 1 2 3 4 { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"details\": \"[HttpCode ProblemTitle]\" } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. details string A human readable and descriptive text of the error. onShippingDetailsAvailable This event triggers when a consumer has been identified or their shipping address has been updated. The onShippingDetailsAvailable event will be raised with the following event argument object: onShippingDetailsAvailable event object 1 2 3 4 { \"actionType\": \"OnShippingDetailsAvailable\", \"url\": \"/psp/consumers//shipping-details\", } Field Type Description actionType string The type of event that was raised. url string The URL containing shipping details. Updating Payment Menu When the contents of the shopping cart changes or anything else that affects the amount occurs, the paymentorder must be updated and the Payment Menu must be refreshed.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/seamless-view-events.html"
  },{
    "title": "Seamless View",
    "text": "The Enterprise Seamless View integration consists of three main steps. Creating the payment order, displaying the payment menu in an iframe, and capturing the funds. In addition, there are other post-purchase options you need. We get to them later on. Step 1: Create Payment Order When the payer has been checked in and the purchase initiated, you need to create a payment order. Start by performing a POST request towards the paymentorder resource with payer information and a completeUrl. We have added productName to the payment order request in this integration. You can find it in the paymentorder field. This is required if you want to use Digital Payments. If it isn´t included in your request, you won’t get the correct operations in the response. When productName is set to checkout3, digitalProducts will be set to false by default. Supported features for this integration are subscriptions (recur and unscheduled MIT), instrument mode and split settlement (subsite). There is also a guest mode option for the payers who don’t wish to store their information. When using Enterprise, the way to trigger this is to not include the payerReference or nationalIdentifier field in your paymentOrder request. You find them in the payer field in the example below. Sometimes you might need to abort purchases. An example could be if a payer does not complete the purchase within a reasonable timeframe. For those instances we have abort, which you can read about in the core features. You can only use abort if the payer has not completed an authorize or a sale. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Order Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment Order as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Payment Order Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\" }, \"payer\": { \"digitalProducts\": false, \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" }, \"firstName\": \"Leia\", \"lastName\": \"Ahlström\", \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"Helgestavägen 9\", \"coAddress\": \"\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\" } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer object The payer object containing information about the payer relevant for the payment order.   digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.   nationalIdentifier object The national identifier object.   socialSecurityNumber string The payer’s social security number.   countryCode string The country code of the payer.   firstName string The first name of the payer.   lastName string The last name of the payer.   email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.   msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.   payerReference string A reference used in Enterprise integrations to recognize the payer in the absence of SSN and/or a secure login. Read more about this in the payerReference feature section.   shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.   firstName string The first name of the addressee – the receiver of the shipped goods.   lastName string The last name of the addressee – the receiver of the shipped goods.   streetAddress string Payer’s street address. Maximum 50 characters long.   coAddress string Payer’ s c/o address, if applicable.   zipCode string Payer’s zip code   city string Payer’s city of residence.   countryCode string Country code for country of residence.   billingAddress object The billing address object containing information about the payer’s billing address.   firstName string The first name of the payer.   lastName string The last name of the payer. ︎ streetAddress string The street address of the payer. Maximum 50 characters long.   coAddress string The CO-address (if used)   zipCode string The postal number (ZIP code) of the payer.   city string The city of the payer.   countryCode string SE, NO, or FI.   accountInfo object Object related to the payer containing info about the payer’s account.   accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)   accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)   shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)   suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed) check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Payment Order Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"integration\": \"HostedView\", \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/core/js/px.payment.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for the payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is an initialized payment, the available operations are abort, update-order and redirect-checkout or view-checkout, depending on the integration. See Operations for details. Step 2: Display Payment Menu Among the operations in the POST paymentOrders response, you will find the view-checkout. This is the one you need to display the purchase module. Response 1 2 3 4 5 6 7 8 9 10 11 { \"paymentOrder\": { \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/core/js/px.payment.client.js?token=dd728a47e3ec7be442c98eafcfd9b0207377ce04c793407eb36d07faa69a32df&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, ] } Loading The Seamless View Embed the href in a &lt;script&gt; element. That script will then load the Seamless View. To load the Checkout from the JavaScript URL obtained in the backend API response, it needs to be set as a script element’s src attribute. You can cause a page reload and do this with static HTML, or you can avoid the page refresh by invoking the POST to create the payment order through Ajax, and then create the script element with JavaScript. The HTML code will be unchanged in this example. JavaScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 var request = new XMLHttpRequest(); request.addEventListener('load', function () { response = JSON.parse(this.responseText); var script = document.createElement('script'); var operation = response.operations.find(function (o) { return o.rel === 'view-checkout'; }); script.setAttribute('src', operation.href); script.onload = function () { // When the 'view-checkout' script is loaded, we can initialize the // Payment Menu inside 'checkout-container'. payex.hostedView.checkout({ container: { checkout: \"checkout-container\" }, culture: 'nb-No', }).open(); }; // Append the Checkout script to the &lt;head&gt; var head = document.getElementsByTagName('head')[0]; head.appendChild(script); }); // Like before, you should replace the address here with // your own endpoint. request.open('GET', '&lt;Your-Backend-Endpoint-Here&gt;', true); request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); request.send(); HTML 1 2 3 4 5 6 7 8 9 10 11 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Checkout is Awesome!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"checkout-container\"&gt;&lt;/div&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=\"&lt;Your-JavaScript-File-Here&gt;\"&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; How It Looks The payment menu should appear with the payer information displayed above the menu. The payer can select their preferred payment instrument and pay. Once the payer has completed the purchase, you can perform a GET towards the paymentOrders resource to see the purchase state. Events When integrating Seamless View, we strongly recommend that you implement the onPaid event, which will give you the best setup. Even with this implemented, you need to check the payment status towards our APIs, as the payer can make changes in the browser at any time. You can read more about the different Seamless View Events available in the feature section. You are now ready to capture the funds. Follow the link below to read more about capture and the other options you have after the purchase. Introduction Post-Purchase",
    "tags": "",
    "url": "/checkout-v3/enterprise/seamless-view.html"
  },{
    "title": "Seamless View",
    "text": "Display Seamless View Among the operations in the POST paymentOrders response, you will find the view-checkout. This is the one you need to display the purchase module. Response 1 2 3 4 5 6 7 8 9 10 11 { \"paymentOrder\": { \"operations\": [ { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/payment/core/js/px.payment.client.js?token=dd728a47e3ec7be442c98eafcfd9b0207377ce04c793407eb36d07faa69a32df&amp;culture=sv-SE&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-checkout\", \"contentType\": \"application/javascript\" }, ] } Load The Seamless View Embed the href in a &lt;script&gt; element. That script will then load the Seamless View. To load the Checkout from the JavaScript URL obtained in the backend API response, it needs to be set as a script element’s src attribute. You can cause a page reload and do this with static HTML, or you can avoid the page refresh by invoking the POST to create the payment order through Ajax, and then create the script element with JavaScript. The HTML code will be unchanged in this example. JavaScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 var request = new XMLHttpRequest(); request.addEventListener('load', function () { response = JSON.parse(this.responseText); var script = document.createElement('script'); var operation = response.operations.find(function (o) { return o.rel === 'view-checkout'; }); script.setAttribute('src', operation.href); script.onload = function () { // When the 'view-checkout' script is loaded, we can initialize the // Payment Menu inside 'checkout-container'. payex.hostedView.checkout({ container: { checkout: \"checkout-container\" }, culture: 'nb-No', }).open(); }; // Append the Checkout script to the &lt;head&gt; var head = document.getElementsByTagName('head')[0]; head.appendChild(script); }); // Like before, you should replace the address here with // your own endpoint. request.open('GET', '&lt;Your-Backend-Endpoint-Here&gt;', true); request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); request.send(); HTML 1 2 3 4 5 6 7 8 9 10 11 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Checkout is Awesome!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"checkout-container\"&gt;&lt;/div&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=\"&lt;Your-JavaScript-File-Here&gt;\"&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; How Seamless View Looks The payment menu should appear with the payer information displayed above the menu. The payer can select their preferred payment instrument and pay. Once the payer has completed the purchase, you can perform a GET towards the paymentOrders resource to see the purchase state. Events When integrating Seamless View, we strongly recommend that you implement the onPaid event, which will give you the best setup. Even with this implemented, you need to check the payment status towards our APIs, as the payer can make changes in the browser at any time. You can read more about the different Seamless View Events available in the feature section. You are now ready to capture the funds. Follow the link below to read more about capture and the other options you have after the purchase. Seamless View Sequence Diagram info Note that in this diagram, the Payer refers to the merchant front-end (website) while Merchant refers to the merchant back-end. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant 3rdParty rect rgba(238, 112, 35, 0.05) activate Payer Payer -&gt;&gt;+ Merchant: Initiate Purchase deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: POST /psp/paymentorders (hostUrls, paymentUrl, payer information) deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: rel:view-checkout deactivate SwedbankPay Merchant --&gt;&gt;- Payer: Display SwedbankPay Payment Menu on Merchant Page activate Payer Payer -&gt;&gt; Payer: Initiate Purchase step deactivate Payer activate SwedbankPay SwedbankPay -&gt;&gt;+ Payer: Do purchase logic Payer -&gt;&gt; SwedbankPay: Do purchase logic deactivate Payer deactivate SwedbankPay opt Payer performs purchase out of iFrame activate Payer Payer -&gt;&gt; Payer: Redirect to 3rd party Payer -&gt;&gt;+ 3rdParty: Redirect to 3rdPartyUrl URL deactivate Payer 3rdParty --&gt;&gt;+ Payer: Redirect back to paymentUrl (merchant) deactivate 3rdParty Payer -&gt;&gt; Payer: Initiate Payment Menu Seamless View (open iframe) Payer -&gt;&gt;+ SwedbankPay: Show Payment UI page in iframe deactivate Payer end activate SwedbankPay SwedbankPay --&gt;&gt; Payer: Purchase status deactivate SwedbankPay alt If purchase is completed activate Payer Payer -&gt;&gt; Payer: Event: onPaid ① Payer -&gt;&gt;+ Merchant: Check purchase status deactivate Payer Merchant -&gt;&gt;+ SwedbankPay: GET &lt;paymentorder.id&gt; deactivate Merchant SwedbankPay -&gt;&gt;+ Merchant: Status: Paid deactivate SwedbankPay end activate Merchant Merchant --&gt;&gt;- Payer: Show Purchase complete end alt If purchase is failed Merchant -&gt;&gt;+ SwedbankPay: GET {paymentorder.id} deactivate Merchant SwedbankPay --&gt;&gt;+ Merchant: Status: Failed deactivate SwedbankPay activate Merchant Merchant --&gt;&gt;- Payer: Display SwedbankPay Payment Menu on merchant page end opt PaymentOrder Callback (if callbackUrls is set) ② activate SwedbankPay SwedbankPay -&gt;&gt; Merchant: POST Purchase Callback deactivate SwedbankPay end rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;PaymentInstruments that support &lt;br&gt;Authorizations. end ① See seamless view events for further information. ② Read more about callback handling in the technical reference. Display Payment UI Post-Purchase",
    "tags": "",
    "url": "/checkout-v3/display-payment-ui/seamless-view.html"
  },{
    "title": "Seamless View",
    "text": "Swish Seamless View Integration Flow When the payer starts the purchase process, you make a POST request towards Swedbank Pay with the collected Purchase information. view-sales is a rel value in one of the operations, sent as a response from Swedbank Pay to the Merchant. Open iframe creates the Swedbank Pay hosted iframe. Show payer UI page in iframe displays the payment window as content inside of the iframe. The payer can insert mobile information for authorization. Event: OnPaymentComplete is when the payment is complete. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. To get the transaction result, you need to follow up with a GET request using the paymentID received in the first step. If CallbackURL is set you will receive a payment callback when the Swish dialog is completed, and you will have to make a GET request to check the payment status. Step 1: Create A Purchase A Purchase payment is a straightforward way to charge the card of the payer. You need to make a POST request towards Swedbank Pay as shown below to create a purchase. An example of an expanded POST request is available in the other features section. This will generate a payment object with a unique paymentID. You will receive a JavaScript source in response. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Seamless View Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 POST /psp/swish/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"prices\": [{ \"type\": \"Swish\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"generatePaymentToken\": false, \"generateRecurrenceToken\": false, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [ \"https://example.com\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or123\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+46987654321\" } }, \"swish\": { \"enableEcomOnly\": false, \"paymentRestrictedToAgeLimit\": 18, \"paymentRestrictedToSocialSecurityNumber\": \"199710202392\" } } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string Determines the initial operation, defining the type of payment created. check intent string AutoCapture. A one phase option that enable capture of funds. check currency string SEK check prices object The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   paymentAgeLimit integer Positive number sets required age limit to fulfill the payment. check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object The urls resource lists urls that redirects users to relevant sites. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. If not supplied, view-operation will not be available. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object An object that holds prefill information that can be inserted on the payment page.   msisdn string Number will be prefilled on payment page, if valid. The mobile number must have a country code prefix and be 8 to 15 digits in length.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   swish object An object that holds different scenarios for Swish payments.   enableEcomOnly boolean true if to only enable Swish on browser-based transactions.; otherwise false to also enable Swish transactions via mobile app.   paymentRestrictedToAgeLimit integer Positive number that sets the required age needed to fulfill the payment. To use this feature it has to be configured in the contract.   paymentRestrictedToSocialSecurityNumber string When provided, the payment will be restricted to a specific social security number to make sure its the same logged in customer who is also the payer. Format: yyyyMMddxxxx. To use this feature it has to be configured in the contract. Seamless View Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"Swish\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"captures\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales\", \"rel\": \"create-sale\" }, { \"href\": \"https://ecom.externalintegration.payex.com/swish/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-sale\", \"method\": \"GET\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.dev.payex.com/swish/core/scripts/client/px.swish.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-sales\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-payment\", \"contentType\": \"application/javascript\" } ] } The key information in the response is the view-sales operation. You will need to embed its href in a &lt;script&gt; element. The script will enable loading the payment page in an iframe in our next step. warning Please note that nested iframes (an iframe within an iframe) are unsupported. Step 2: Display The Payment Window You need to embed the script source on your site to create a Seamless View in an iframe; so that the payer can enter the required information in a secure Swedbank Pay hosted environment. A simplified integration has these following steps: Create a container that will contain the Seamless View iframe: &lt;div id=\"swedbank-pay-seamless-view-page\"&gt;. Create a &lt;script&gt; source within the container. Embed the href value obtained in the POST request in the &lt;script&gt; element. Example: 1 &lt;script id=\"payment-page-script\" src=\"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js\"&gt;&lt;/script&gt; The previous two steps gives this HTML: HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Seamless View is Awesome!&lt;/title&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=&lt;YourJavaScriptFileHere&gt;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"swedbank-pay-seamless-view-page\"&gt; &lt;script id=\"payment-page-script\" src=\"https://ecom.dev.payex.com/swish/core/scripts/client/px.swish.client.js\"&gt;&lt;/script&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Load The Seamless View Lastly, initiate the Seamless View with a JavaScript call to open the iframe embedded on your website. HTML 1 2 3 4 5 6 7 &lt;script language=\"javascript\"&gt; payex.hostedView.swish({ // The container specifies which id the script will look for to host the // iframe component. container: \"swedbank-pay-seamless-view-page\" }).open(); &lt;/script&gt; How It Looks Seamless View Sequence Diagram The sequence diagram below shows the requests you have to send to Swedbank Pay to make a purchase. The Callback response is a simplified example in this flow. Go to the Callback section to view the complete flow. sequenceDiagram activate Browser Browser-&gt;&gt;-Merchant: Start Purchase activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST &lt;Swish create payment&gt; (operation=PURCHASE) activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: Payment Response with rel:view-payment activate Merchant Merchant-&gt;&gt;Merchant: Build html with view-payment script Merchant--&gt;&gt;-SwedbankPay: Init iFrame activate SwedbankPay SwedbankPay-&gt;&gt;-SwedbankPay: Enter mobile number activate SwedbankPay SwedbankPay-&gt;&gt;-Merchant: Tell payer to open Swish app Swish_API-&gt;&gt;Swish_App: Ask for payment confirmation activate Swish_App Swish_App--&gt;&gt;-Swish_API: Payer confirms payment alt Callback activate SwedbankPay SwedbankPay--&gt;&gt;Swish_API: Callback response SwedbankPay-&gt;&gt;-Merchant: Transaction callback end activate Merchant Merchant-&gt;&gt;-SwedbankPay: GET &lt;Swish payment&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Payment response activate Merchant Merchant-&gt;&gt;-Browser: Payment Status Redirect After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/seamless-view.html"
  },{
    "title": "Seamless View",
    "text": "The Seamless View scenario represents the opportunity to implement Trustly directly in your webshop. Introduction Seamless View provides an integration of the payment process directly on your website. This solution offers a smooth shopping experience with Swedbank Pay Payments seamlessly integrated in an iframe on your website. The payer does not need to leave your webpage, since we are handling the payment in the iframe on your website. link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. Step 1: Create The payment A Trustly payment is a straightforward way to perform a direct-bank payment. An example of an abbreviated POST request is provided below. Each individual field of the JSON document is described in the following section. An example of an expanded POST request is available in Payment resource. When properly set up in your merchant/webshop site and the payer starts the payment process, you need to make a POST request towards Swedbank Pay with your payment information. This will generate a payment resource with a unique id URL. You will receive a JavaScript source in response. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Seamless View Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 POST /psp/trustly/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Sale\", \"currency\": \"SEK\", \"prices\": [ { \"type\": \"Trustly\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"PR123\", \"payeeName\": \"Merchant1\", \"productCategory\": \"PC1234\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"firstName\": \"Ola\", \"lastName\": \"Nordmann\" } } } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string The operation that the payment is supposed to perform. For Trustly, this will always be Purchase as it is currently the only available operation. check intent string Sale is the only intent option for Trustly. Performs the payment when the end-user gets redirected and completes the payment. check currency string SEK, EUR. The currency of the provided amount. check prices object The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object The urls resource lists urls that redirects users to relevant sites.   hostUrl array The array of URLs valid for embedding of Swedbank Pay Seamless View. If not supplied, view-operation will not be available. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string(30*) A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed to consumer when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object Object representing information of what the UI text fields should be populated with   firstName string Prefilled value to put in the first name text box.   lastName string Prefilled value to put in the last name text box. Seamless View Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 99590008046, \"created\": \"2020-05-26T12:31:19.3106483Z\", \"updated\": \"2020-05-26T12:31:19.4513673Z\", \"instrument\": \"Trustly\", \"operation\": \"Purchase\", \"intent\": \"Sale\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"urls\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/sales\", \"rel\": \"create-sale\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/trustly/payments/sales/8f3ba6c8f4e3f6125ae6c18bec15c612747cf2c35dc5cac35d4bebc10cf7317e\", \"rel\": \"redirect-sale\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/trustly/core/scripts/client/px.trustly.client.js?token=8f3ba6c8f4e3f6125ae6c18bec15c612747cf2c35dc5cac35d4bebc10cf7317e&amp;operation=sale\", \"rel\": \"view-sale\", \"contentType\": \"application/javascript\" } ] } The key information in the response is the view-sale operation. You will need to embed its href in a &lt;script&gt; element. The script will enable loading the payment page in an iframe in our next step. warning Please note that nested iframes (an iframe within an iframe) are unsupported. Step 2: Display The Payment You need to embed the script source on your site to create a Seamless View in an iframe; so that the payer can enter the payment details in a secure Swedbank Pay hosted environment. A simplified integration has these following steps: Create a container that will contain the Seamless View iframe: &lt;div id=\"swedbank-pay-seamless-view-page\"&gt;. Create a &lt;script&gt; source within the container. Embed the href value obtained in the POST request in the &lt;script&gt; element. Example: 1 &lt;script id=\"payment-page-script\" src=\"https://ecom.externalintegration.payex.com/trustly/core/ scripts/client/px.trustly.client.js\"&gt;&lt;/script&gt; The previous two steps gives this HTML: HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Seamless View is Awesome!&lt;/title&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=&lt;YourJavaScriptFileHere&gt;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"swedbank-pay-seamless-view-page\"&gt; &lt;script id=\"payment-page-script\" src=\"https://ecom.externalintegration.payex.com/trustly/core/scripts/client/px.trustly.client.js\"&gt;&lt;/script&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Load The Seamless View Lastly, initiate the Seamless View with a JavaScript call to open the iframe embedded on your website. HTML 1 2 3 4 5 6 7 &lt;script language=\"javascript\"&gt; payex.hostedView.trustly({ // The container specifies which id the script will look for to host the // iframe component. container: \"swedbank-pay-seamless-view-page\" }).open(); &lt;/script&gt; Seamless View Sequence Diagram The sequence diagram below shows a high level description of the Trustly payment process. sequenceDiagram participant SwedbankPay as Swedbank Pay participant Merchant participant Consumer participant Trustly Consumer-&gt;&gt;Merchant: Start purchase activate Merchant note left of Merchant: First API request Merchant-&gt;&gt;-SwedbankPay: POST /psp/trustly/payments activate Merchant Merchant--&gt;&gt;-Consumer: Display all details and final price activate Consumer note left of Consumer: Open iframe ③ Consumer-&gt;&gt;Consumer: Input first name and last name Consumer-&gt;&gt;-SwedbankPay: Confirm purchase activate SwedbankPay SwedbankPay-&gt;&gt;-Trustly: Perform payment activate Trustly Trustly--&gt;&gt;-Merchant: Transaction result activate Merchant note left of Merchant: Second API request Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Consumer: Display result Redirect After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/seamless-view.html"
  },{
    "title": "Seamless View",
    "text": "report_problem Availability: Note that this invoice integration is no longer available in Sweden. If you are a Swedish merchant and wish to offer invoice as a payment option, this has to be done through our payment order implementation. Introduction Seamless View provides an integration of the payment process directly on your website. This solution offers a smooth shopping experience with Swedbank Pay payment pages seamlessly integrated in an iframe on your website. The payer does not need to leave your webpage, since we are handling the payment in the iframe on your page. How It Looks link Callback URL: It is mandatory to set a callbackUrl in the POST request creating the payment. When callbackUrl is set, Swedbank Pay will send a POST request to this URL when the payer has fulfilled the payment. Upon receiving this POST request, a subsequent GET request towards the id of the payment generated initially must be made to receive the state of the transaction. Step 1: Create The Payment warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. A FinancingConsumer payment is a straightforward way to invoice a payer. It is followed up by posting a capture, cancellation or reversal transaction. An example of an abbreviated POST request is provided below. Each individual field of the JSON document is described in the following section. An example of an expanded POST request is available in the other features section. When properly set up in your merchant/webshop site and the payer starts the invoice process, you need to make a POST request towards Swedbank Pay with your invoice information. This will generate a payment object with a unique paymentID. You will receive a JavaScript source in response. Seamless View Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 POST /psp/invoice/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"FinancingConsumer\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [ { \"type\": \"Invoice\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Invoice\", \"userAgent\": \"Mozilla/5.0...\", \"generatePaymentToken\": false, \"paymentToken\": \"\" \"language\": \"sv-SE\", \"urls\": { \"hosturls\": [ \"https://example.com\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\" }, \"payer\": { \"payerReference\": \"AB1234\", }, }, \"invoice\": { \"invoiceType\": \"PayExFinancingSe\" } } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string The operation that the payment is supposed to perform. The FinancingConsumer operation is used in our example. check intent string Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. check currency string NOK or SEK. check prices object The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase.   generatePaymentToken boolean true or false. Set this to true if you want to create a paymentToken for future use as One Click. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object Theurlsresource lists urls that redirects users to relevant sites. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. If not supplied, view-operation will not be available. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously withpaymentUrl; only cancelUrl orpaymentUrlcan be used, not both.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true. check invoiceType string PayExFinancingSe, PayExFinancingNo or PayExFinancingFi depending on which country you’re doing business with Swedbank Pay in. (Other external financing partner names must be agreed upon with Swedbank Pay.) Seamless View Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"Invoice\", \"created\": \"YYYY-MM-DDThh:mm:ssZ\", \"updated\": \"YYYY-MM-DDThh:mm:ssZ\", \"operation\": \"FinancingConsumer\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"SEK\", \"prices\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"amount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [ { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/approvedlegaladdress\", \"rel\": \"create-approved-legal-address\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\", \"rel\": \"create-authorization\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/invoice/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-authorization\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/invoice/core/scripts/client/px.invoice.client.js?5a17c24e-d459-4567-bbad-aa0f17a76119&amp;operation=authorize\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" } ] } The key information in the response is the view-authorization operation. You will need to embed its href in a &lt;script&gt; element. The script will enable loading the payment page in an iframe in our next step. warning Please note that nested iframes (an iframe within an iframe) are unsupported. Step 2: Display The Payment You need to embed the script source on your site to create a Seamless View in an iframe; so that the payer can enter the payment details in a secure Swedbank Pay hosted environment. A simplified integration has these following steps: Create a container that will contain the Seamless View iframe: &lt;div id=\"swedbank-pay-seamless-view-page\"&gt;. Create a &lt;script&gt; source within the container. Embed the href value obtained in the POST request in the &lt;script&gt; element. Example: 1 &lt;script id=\"payment-page-script\" src=\"https://ecom.externalintegration.payex.com/invoice/core/ scripts/client/px.invoice.client.js\"&gt;&lt;/script&gt; The previous two steps gives this HTML: HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Seamless View is Awesome!&lt;/title&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=&lt;YourJavaScriptFileHere&gt;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"swedbank-pay-seamless-view-page\"&gt; &lt;script id=\"payment-page-script\" src=\"https://ecom.dev.payex.com/invoice/core/scripts/client/px.invoice.client.js\"&gt;&lt;/script&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Loading The JavaScript Lastly, initiate the Seamless View with a JavaScript call to open the iframe embedded on your website. HTML 1 2 3 4 5 6 7 &lt;script language=\"javascript\"&gt; payex.hostedView.invoice({ // The container specifies which id the script will look for to host the // iframe component. container: \"swedbank-pay-seamless-view-page\" }).open(); &lt;/script&gt; Purchase Flow The sequence diagram below shows a high level description of the invoice process. sequenceDiagram Payer-&gt;&gt;Merchant: Start purchase activate Merchant note left of Merchant: First API request Merchant-&gt;&gt;-SwedbankPay: POST /psp/invoice/payments ① activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: rel: view-authorization ② activate Merchant Merchant--&gt;&gt;-Payer: Display all details and final price activate Payer note left of Payer: Open iframe ③ Payer-&gt;&gt;Payer: Input email and mobile number Payer-&gt;&gt;-Merchant: Confirm purchase activate Merchant note left of Merchant: Second API request Merchant-&gt;&gt;-SwedbankPay: Post psp/invoice/authorization ④ activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Transaction result activate Merchant note left of Merchant: Third API request Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; ⑤ activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: payment resource activate Merchant Merchant--&gt;&gt;-Payer: Display result info Note that the invoice will not be created/distributed before you have made a capture request. Redirect Direct",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/seamless-view.html"
  },{
    "title": "Seamless View",
    "text": "Introduction Seamless View provides an integration of the payment process directly on your website. This solution offers a smooth shopping experience with Swedbank Pay payment pages seamlessly integrated in an iframe on your website. The payer does not need to leave your webpage, since we are handling the payment in the iframe on your page. How It Looks For payments in the currency SEK, radio buttons for selecting debit or credit card will appear. Step 1: Create Payment A Purchase payment is a straightforward way to charge the card of the payer. It is followed up by posting a capture, cancellation or reversal transaction. An example of an abbreviated POST request is provided below. Each individual field of the JSON document is described in the following section. An example of an expanded POST request is available in the other features section. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. When properly set up in your merchant/webshop site and the payer starts the purchase process, you need to make a POST request towards Swedbank Pay with your Purchase information. This will generate a payment object with a unique paymentID. You will receive a JavaScript source in response. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Purchase A Purchase payment is a straightforward way to charge the card of the payer. It is followed up by posting a capture, cancellation or reversal transaction. An example of a request is provided below. Each individual field of the JSON document is described in the following section. Purchase Operation Posting a payment (operation Purchase) returns the options of aborting the payment altogether or creating an authorization transaction through the view-authorization hyperlink, or view-payment. Request 1 2 3 4 5 { \"payment\": { \"operation\": \"Purchase\" } } Card Payment Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 POST /psp/creditcard/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"urls\": { \"hostUrls\": [\"https://example.com\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\", }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or123\", \"subsite\": \"mySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"cardholder\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"homePhoneNumber\": \"+4787654321\", \"workPhoneNumber\": \"+4776543210\", \"shippingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, }, \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description check payment object The payment object check operation string Determines the initial operation, defining the type of payment order created. check intent string Authorization. Reserves the amount, and is followed by a Cancel or Capture of funds. AutoCapture. A one phase option that enables the Capture of funds automatically after authorization.   paymentToken string If a paymentToken is included in the request, the card details stored in the paymentToken will be prefilled on the payment page. The payer still has to enter the cvc to complete the purchase. This is called a “One Click” purchase. check currency string NOK, SEK, DKK, USD or EUR. check prices array The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase.   generatePaymentToken boolean true or false. Set this to true if you want to create a paymentToken for future use as One Click.   generateRecurrenceToken boolean true or false. Set this to true if you want to create a recurrenceToken for future use Recurring purchases (subscription payments).   generateUnscheduledToken boolean true or false. Set this to true if you want to create a unscheduledToken for future use Unscheduled purchases (merchant initiated transactions). check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. check︎ urls object The object containing URLs relevant for the payment. check︎ hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. If not supplied, view-operation will not be available. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   cardholder object Optional. Cardholder object that can hold information about a buyer (private or company). The information added increases the chance for frictionless flow and is related to 3-D Secure 2.0..   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   homePhoneNumber string Optional (increased chance for frictionless flow if set)   workPhoneNumber string Optional (increased chance for frictionless flow if set)   shippingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set)   lastName string Optional (increased chance for frictionless flow if set)   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   billingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Card Payment Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"CreditCard\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"rel\": \"update-payment-abort\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"rel\": \"redirect-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"text/html\" }, { \"rel\": \"view-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"view-payment\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"direct-authorization\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\", \"method\": \"POST\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource. The key information in the response is the view-authorization operation. You will need to embed its href in a &lt;script&gt; element. The script will enable loading the payment page in an iframe in our next step. warning Please note that nested iframes (an iframe within an iframe) are unsupported. Step 2: Display The Payment You need to embed the script source on your site to create a Seamless View in an iframe; so that the payer can enter the credit card details in a secure Swedbank Pay hosted environment. A simplified integration has these following steps: Create a container that will contain the Seamless View iframe: &lt;div id=\"swedbank-pay-seamless-view-page\"&gt;. Create a &lt;script&gt; source within the container. Embed the href value obtained in the POST request in the &lt;script&gt; element. Example: 1 &lt;script id=\"payment-page-script\" src=\"https://ecom.externalintegration.payex.com/creditcard/core/ scripts/client/px.creditcard.client.js\"&gt;&lt;/script&gt; The previous two steps gives this HTML: HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Seamless View is Awesome!&lt;/title&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=&lt;YourJavaScriptFileHere&gt;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"swedbank-pay-seamless-view-page\"&gt; &lt;script id=\"payment-page-script\" src=\"https://ecom.dev.payex.com/creditcard/core/scripts/client/px.creditcard.client.js\"&gt;&lt;/script&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Load The Seamless View Lastly, initiate the Seamless View with a JavaScript call to open the iframe embedded on your website. JavaScript 1 2 3 4 5 6 7 &lt;script language=\"javascript\"&gt; payex.hostedView.creditCard({ // The container specifies which id the script will look for to host the // iframe component. container: \"swedbank-pay-seamless-view-page\" }).open(); &lt;/script&gt; Events When a user actively attempts to perform a payment, the onPaymentCreated event is raised with the following event argument object: onPaymentCreated event object 1 2 3 4 { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"instrument\": \"creditcard\", } Field Type Description id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string creditcard Sequence Diagram sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay activate Payer Payer-&gt;&gt;-Merchant: Start purchase activate Merchant note left of Payer: First API request Merchant-&gt;&gt;-SwedbankPay: POST /psp/creditcard/payments activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: rel: view-authorization ① activate Merchant Merchant--&gt;&gt;-Payer: Authorization page activate Payer note left of Payer: Open iframe ② Payer-&gt;&gt;Payer: Input creditcard information Payer-&gt;&gt;-SwedbankPay: Show Consumer UI page in iframe - Authorization ③ activate SwedbankPay opt If 3-D Secure is required SwedbankPay--&gt;&gt;-Payer: Redirect to IssuingBank activate Payer Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process activate IssuingBank IssuingBank--&gt;&gt;-Payer: 3-D Secure authentication process response Payer-&gt;&gt;-IssuingBank: Access authentication page activate IssuingBank IssuingBank --&gt;&gt;+Payer: Redirect to PaymentUrl Payer-&gt;&gt;-Merchant: Redirect back to PaymentUrl (merchant) end alt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;-Merchant: POST Payment Callback end SwedbankPay--&gt;&gt;Merchant: Event: OnPaymentComplete ④ activate Merchant note left of Merchant: Second API request. Merchant-&gt;&gt;-SwedbankPay: GET &lt;payment.id&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: rel: view-payment activate Merchant Merchant--&gt;&gt;-Payer: Display purchase result activate Payer 3-D Secure info No 3-D Secure and card acceptance: There are optional parameters which can be used in relation to 3-D Secure and card acceptance. Most acquiring agreements will demand that you use 3-D Secure for card holder authentication. However, if your agreement allows you to make a card payment without this authentication, or that specific cards can be declined, you may adjust these optional parameters when posting in the payment. Swedbank Pay will handle 3-D Secure authentication when this is required. When dealing with credit card payments, 3-D Secure authentication of the cardholder is an essential topic. There are two alternative outcomes of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. Explanations ① rel: view-authorization is a value in one of the operations, sent as a response from Swedbank Pay to the Merchant. ② Open iframe creates the Swedbank Pay hosted iframe. ③ Show Payer UI page in iframe displays the payment window as content inside of the iframe. The payer can enter card information for authorization. ④ Event: OnPaymentComplete is when a payment is complete. Please note that both successful and rejected payments reach completion, in contrast to a cancelled payment. Redirect Capture",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/seamless-view.html"
  },{
    "title": "Seamless View",
    "text": "Step 1: Create A purchase When properly set up in your merchant/webshop site and the payer starts the purchase process, you need to make a POST request towards Swedbank Pay with your Purchase information. This will generate a payment object with a unique paymentID. An example of an abbreviated POST request is provided below. You will receive a response in which you can find the JavaScript source in the view-payment operation. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Seamless View Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 POST /psp/mobilepay/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"DKK\", \"prices\": [ { \"type\": \"MobilePay\", \"amount\": 1500, \"vatAmount\": 0, } ], \"description\": \"MobilePay Test\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"da-DK\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/path/to/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"payeeReference\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+4598765432\" } }, \"mobilepay\": { \"shoplogoUrl\": \"https://example.com/shoplogourl.png\" } } Show fields Hide fields Required Field Data type Description check payment object The payment object. check operation string Purchase check intent string Authorization check currency string NOK, SEK, DKK, USD or EUR. check prices object The prices object. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 DKK, 5000 = 50.00 DKK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 DKK, 5000 = 50.00 DKK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   feeAmount integer If the amount given includes Fee, this may be displayed for the user in the payment page (redirect only). check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string da-DK, fi-FI or en-US. check urls object The URLs object containing the urls used for this payment. check hosturls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. If not supplied, view-operation will not be available. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. check cancelUrl string The URL that Swedbank Pay will redirect back to when the user presses the cancel button in the payment page.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object This object contains the identificators of the payee of this payment. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object An object that holds prefill information that can be inserted on the payment page.   msisdn string Number will be prefilled on MobilePays page, if valid. Only Danish and Finnish phone numbers are supported. The country code prefix is +45 and +358 respectively.   mobilepay.shoplogoUrl string URI to logo that will be visible at MobilePay Online. For it to display correctly in the MobilePay app, the image must be 250x250 pixels, a png or jpg served over a secure connection using https, and be publicly available. This URI will override the value configured in the contract setup. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 72100003079, \"created\": \"2018-09-05T14:18:44.4259255Z\", \"instrument\": \"MobilePay\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"DKK\", \"amount\": 0, \"description\": \"MobilePay Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"da-DK\", \"prices\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"urls\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/mobilepay/core/scripts/client/px.mobilepay.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;Culture=da-DK\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/mobilepay/core/scripts/client/px.mobilepay.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;Culture=da-DK\", \"rel\": \"view-payment\", \"contentType\": \"application/javascript\" } ] } The key information in the response is the view-payment operation. You will need to embed its href in a &lt;script&gt; element. The script will enable loading the payment page in an iframe in our next step. warning Please note that nested iframes (an iframe within an iframe) are unsupported. Step 2: Display the payment window You need to embed the script source on your site to create a Seamless View in an iframe so that the payer can enter the required information in a secure Swedbank Pay hosted environment. A simplified integration has these following steps: Create a container that will contain the Seamless View iframe: &lt;div id=\"swedbank-pay-seamless-view-page\"&gt;. Create a &lt;script&gt; source within the container. Embed the href value obtained in the POST request in the &lt;script&gt; element. Example: 1 &lt;script id=\"payment-page-script\" src=\"https://ecom.externalintegration.payex.com/mobilepay/core/ scripts/client/px.mobilepay.client.js\"&gt;&lt;/script&gt; The previous two steps gives this HTML: HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Seamless View is Awesome!&lt;/title&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=&lt;YourJavaScriptFileHere&gt;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"swedbank-pay-seamless-view-page\"&gt; &lt;script id=\"payment-page-script\" src=\"https://ecom.dev.payex.com/mobilepay/core/scripts/client/px.mobilepay.client.js\"&gt;&lt;/script&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Lastly, initiate the Seamless View with a JavaScript call to open the iframe embedded on your website. JavaScript 1 2 3 4 5 6 7 &lt;script language=\"javascript\"&gt; payex.hostedView.mobilepay({ // The container specifies which id the script will look for to host the // iframe component. container: \"swedbank-pay-seamless-view-page\" }).open(); &lt;/script&gt; MobilePay Online Seamless View flow The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay participant MobilePayApp as MobilePay App participant MobilePayApi as MobilePay API activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST /psp/mobilepay/payments activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: Payment response with rel: view-payment activate Merchant Merchant-&gt;&gt;-SwedbankPay: Script init of iFrame activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Display Payment Page activate Merchant Merchant-&gt;&gt;Merchant: Init payment Merchant-&gt;&gt;-SwedbankPay: Init request activate SwedbankPay SwedbankPay-&gt;&gt;+MobilePayApi: POST &lt;rel:create-authorization&gt; activate MobilePayApi MobilePayApi--&gt;&gt;+SwedbankPay: Response activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Display instructions page MobilePayApi--&gt;&gt;-MobilePayApp: Confirm Payment UI activate MobilePayApp MobilePayApp--&gt;&gt;MobilePayApp: Confirmation Dialog MobilePayApp--&gt;&gt;-MobilePayApi: Confirmation activate MobilePayApi MobilePayApi-&gt;&gt;-SwedbankPay: Authorize Payment activate SwedbankPay SwedbankPay--&gt;&gt;-SwedbankPay: Process Payment activate SwedbankPay SwedbankPay--&gt;&gt;-MobilePayApi: Process Payment Response activate MobilePayApi MobilePayApi--&gt;&gt;-MobilePayApp: Transaction Status activate Merchant Merchant-&gt;&gt;- SwedbankPay: GET &lt;MobilePay payment&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Payment response activate Merchant Merchant--&gt;&gt;-Merchant: Display payment Status When the payer starts the purchase process, you make a POST request towards Swedbank Pay with the collected Purchase information. rel: view-payment is a value in one of the operations, sent as a response from Swedbank Pay to the Merchant. Open iFrame creates the Swedbank Pay Seamless View. The Seamless View displays the payment page as content inside of the iFrame. A POST request is sent to the MobilePay API with the mobile number (optional) for authorization. Swedbank Pay handles the dialog with MobilePay and the payer confirms the purchase in the MobilePay app. After the purchase has been authorized, the payer will be redirected back to the merchant, where the status can be checked to ensure the payment was successful. Redirect After Payment",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/seamless-view.html"
  },{
    "title": "Seamless View",
    "text": "Step 1: Create A Purchase When properly set up in your merchant/webshop site and the payer starts the purchase process, you need to make a POST request towards Swedbank Pay with your Purchase information. This will generate a payment object with a unique paymentID. An example of an abbreviated POST request is provided below. You will receive a response in which you can find the JavaScript source in the view-payment operation. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. info To minimize the risk for a challenge request (Strong Customer Authentication – “SCA”) on card payments, it’s recommended that you add as much data as possible to the riskIndicator object in the request below. warning GDPR: GDPR sensitive data such as email, phone numbers and social security numbers must not be used directly in request fields such as payerReference. If it is necessary to use GDPR sensitive data, it must be hashed and then the hash can be used in requests towards Swedbank Pay. Seamless View Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/vipps/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"prices\": [ { \"type\": \"Vipps\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Vipps Test\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/path/to/logo.png\", \"termsOfServiceUrl\": \"https://example.com/terms.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"payeeReference\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"prefillInfo\": { \"msisdn\": \"+4798765432\" } } } Show fields Hide fields Required Field Type Description check payment object The payment object contains information about the specific payment. check operation string Determines the initial operation, defining the type of payment created. check intent string Authorization. Reserves the amount, and is followed by a cancellation or capture of funds. check currency string NOK check prices object The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 NOK, 5000 = 50.00 NOK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase.   generatePaymentToken boolean true or false. Set this to true if you want to create a paymentToken for future use as One Click.   generateRecurrenceToken boolean true or false. Set this to true if you want to create a recurrenceToken for future use Recurring purchases (subscription payments). check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check urls object The urls resource lists urls that redirects users to relevant sites. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. If not supplied, view-operation will not be available. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo object The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   prefillInfo object An object that holds prefill information that can be inserted on the payment page.   msisdn string Number will be prefilled on payment page, if valid. Only Norwegian phone numbers are supported. The country code prefix is +47 Seamless View Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 72100003079, \"created\": \"2018-09-05T14:18:44.4259255Z\", \"instrument\": \"Vipps\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Vipps Test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0 weeeeee\", \"language\": \"nb-NO\", \"prices\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"urls\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeinfo\" }, \"payers\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"metadata\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/metadata\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/vipps/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-authorization\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;Culture=sv-SE\", \"rel\": \"view-authorization\", \"contentType\": \"application/javascript\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;Culture=sv-SE\", \"rel\": \"view-payment\", \"contentType\": \"application/javascript\" } ] } The key information in the response is the view-payment operation. You will need to embed its href in a &lt;script&gt; element. The script will enable loading the payment page in an iframe in our next step. warning Please note that nested iframes (an iframe within an iframe) are unsupported. Step 2: Display The Payment Window You need to embed the script source on your site to create a Seamless View in an iframe; so that the payer can enter the required information in a secure Swedbank Pay hosted environment. A simplified integration has these following steps: Create a container that will contain the Seamless View iframe: &lt;div id=\"swedbank-pay-seamless-view-page\"&gt;. Create a &lt;script&gt; source within the container. Embed the href value obtained in the POST request in the &lt;script&gt; element. Example: 1 &lt;script id=\"payment-page-script\" src=\"https://ecom.externalintegration.payex.com/vipps/core/ scripts/client/px.vipps.client.js\"&gt;&lt;/script&gt; The previous two steps gives this HTML: HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Swedbank Pay Seamless View is Awesome!&lt;/title&gt; &lt;!-- Here you can specify your own javascript file --&gt; &lt;script src=&lt;YourJavaScriptFileHere&gt;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"swedbank-pay-seamless-view-page\"&gt; &lt;script id=\"payment-page-script\" src=\"https://ecom.dev.payex.com/vipps/core/scripts/client/px.vipps.client.js\"&gt;&lt;/script&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Load The Seamless View Lastly, initiate the Seamless View with a JavaScript call to open the iframe embedded on your website. JavaScript 1 2 3 4 5 6 7 &lt;script language=\"javascript\"&gt; payex.hostedView.vipps({ // The container specifies which id the script will look for to host the // iframe component. container: \"swedbank-pay-seamless-view-page\" }).open(); &lt;/script&gt; This is what the result should look like: Vipps Seamless View Sequence Diagram The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST /psp/vipps/payments activate SwedbankPay note left of Merchant: First API request SwedbankPay--&gt;&gt;-Merchant: Payment response with rel: view-payment activate Merchant Merchant-&gt;&gt;-SwedbankPay: script init of iFrame activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Display Payment Page activate Merchant Merchant-&gt;&gt;Merchant: Enter mobile number Merchant -&gt;&gt;- SwedbankPay: Mobile number activate SwedbankPay SwedbankPay-&gt;&gt;+Vipps_API: POST &lt;rel:create-auhtorization&gt; activate Vipps_API Vipps_API--&gt;&gt;+SwedbankPay: Response activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Display to instructions page Vipps_API--&gt;&gt;-Vipps_App: Confirm Payment UI activate Vipps_App Vipps_App--&gt;&gt;Vipps_App: Confirmation Dialog Vipps_App--&gt;&gt;-Vipps_API: Confirmation activate Vipps_API Vipps_API-&gt;&gt;-SwedbankPay: Make payment activate SwedbankPay SwedbankPay--&gt;&gt;-SwedbankPay: Execute payment activate SwedbankPay SwedbankPay--&gt;&gt;-Vipps_API: Make Payment Response alt Callback activate SwedbankPay SwedbankPay--&gt;&gt;-Vipps_API: Callback response activate SwedbankPay SwedbankPay-&gt;&gt;-Merchant: Transaction Callback end activate Merchant Merchant-&gt;&gt;- SwedbankPay: GET &lt;Vipps payment&gt; activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: Payment response activate Merchant Merchant--&gt;&gt;-Merchant: Display payment Status When the payer starts the purchase process, you make a POST request towards Swedbank Pay with the collected Purchase information. rel: view-payment is a value in one of the operations, sent as a response from Swedbank Pay to the Merchant. Open iframe creates the Swedbank Pay Seamless View. The Seamless View displays the payment page as content inside of the iframe. The payer can enter their mobile phone number for authorization. A POST request is sent to the Vipps API with the mobile number for authorization. The response will contain the state of the transaction. It will normally be AwaitingActivity in this phase of the payment, meaning we are awaiting a response from Vipps. Swedbank Pay handles the dialog with Vipps and the payer confirms the purchase in the Vipps app. Redirect Capture",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/seamless-view.html"
  },{
    "title": "Search",
    "text": "",
    "tags": "",
    "url": "/search.html"
  },{
    "title": "SetPaymentInstrument",
    "text": "SetPaymentInstrument starts a payment for supplied paymentInstrument. This method has to be called before PaymentAsync or RefundAsync and cannot be combined with GetPaymentInstrument. Prefix and supplied PAN must be registred in the terminal setup and may not be a PCI regulated card. The normal usage is for giftcards or card numbers that are created on site such as financing. Parameter string PaymentInstrument - format is pan and expiry date separated by an equal sign. “PAN=MMYY”",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/setpaymentinstrument.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/checkout-v3/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/swish/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Sale and Reversal. Sale API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated   transaction.created Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description     VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated   transaction.created Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/trustly/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/invoice/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated   transaction.created Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated   transaction.created Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/mobilepay/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo     Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo     Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/vipps/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo     Direct Debit Bank Reference DirectDebitbankRef     Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/settlement-reconciliation.html"
  },{
    "title": "Settlement &amp; Reconciliation",
    "text": "Settlement And Reconciliation Reconciliation is an important step in an economic transaction. When a payment is reconciled, captured amounts for the payment are matched against the corresponding settlement. The information needed to reconcile captured funds - the balance report and transactions list - are available for all merchants using Swedbank Pay. By default, the settlement files will be sent to you by via e-mail. We also have the option to send it via SFTP as well. If this is something you’d like, please inform your sales representative. They will in turn let the setup team know. The settlement frequency is defined in your agreement, but the default is monthly or weekly. You do not need to subscribe, the files will be delivered by default. Please contact kundsupport@swedbankpay.se for further inquiries regarding this. Settlement There are two main alternatives for settlement - either we handle the settlement process for you, or you handle the process yourself: If Swedbank Pay Handles The Settlement Process Swedbank Pay handles the settlement process on your behalf, (called “Redovisningsservice”). Swedbank Pay transfers the net amount to you directly. When choosing Swedbank Pay Checkout we will always handle the settlement process for you, gathering all your eCommerce payments in one place. Straighforward and time efficient. You Handle The Settlement Process Yourself If you will handle the settlement yourself, then Swedbank Pay will send you an invoice with the relevant fees, in addition to the report and transactions lists. Your acquirer will transfer settled funds to you. Balance Report The Balance Report (a .pdf file) specifies the total sales for a specific period, including fees and VAT. The report contains three parts: a payment summary and specifications for sales and for fees. Two versions of the balance report are currently in production, v1 and v2. All new customers are set up with v2, so if you are a new customer or have joined us within the last year, the v2 sections should be your focus. V1 will be phased out during 2023. The main differences are in the transaction list. Payment Summary Provides a summary of the Amount sold, Fees and VAT. If Swedbank Pay handles the settlement process, the Transferred amount shown in the balance report summary is equivalent to the disbursement on the bank statement (the remaining total amount after fees). Sales Specification Provides a specification over sales for the given period. The sales total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each sales row specify Quantity, Sum sales and Amount to pay out, the last one is only eligble if Swedbank Pay handles the Settlement process. A summary of payments through the last date of the report is also provided. Fees Specification Provides a specification of the fees in the given period. The fees total is specified per payment area (CreditCard, Invoice) and underlying payment instruments. Each fees row specify Quantity (sales), Amount (sales), Unit price, Provision and fee Amount. If you handle the settlement process yourself, you will receive a separate invoice for fees. Transaction List The Transaction List (also called Sales Accounted Transactions) is provided in .xlsx and .xml formats and specifies all transactions for a specific period, including a summary of transactions grouped by payment instrument. Both formats contain the same information, but the xml file is meant for computer processing, while the excel workbook is meant for human interaction. The first row contains the name of the Swedbank Pay company (e.g. Swedbank Pay Solutions AB) that the merchant has the contract with, and the balance report number. The header fields contain a summary of the transactions displayed in the body. As with the Balance Report there are two versions of the Transaction List, and v1 will be phased out during 2023. V1 Header Fields Field Type Description Prefix string The Prefix used for transactions, only eligible if merchant uses prefix. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). Service string The service used (e.g. Creditcard). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V1 Body Fields Field Type Description Swedbank Pay Batch Number Decimal A batch number common to all types of transactions processed by Swedbank Pay. Transaction Number Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. Order id string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. Provider string The service provider (e.g. Babs, Swedbank). Type string The service type of the related transaction (e.g. Creditcard). Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). Product Number string A product number, as sent by merchant to Swedbank Pay. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Credit Card Batch Number Decimal The reference number from the credit card processor. Reference Decimal The transaction reference from processor. Swedbank Pay Account Number Decimal The Account number given, shown in the Merchant Portal. Referenced Transaction Number Decimal Transaction number for the Authoriation transaction for a two-stage transaction or the number of the debit transaction if it is a credit transaction. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. V2 Header Fields Field Type Description Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). ServiceType string The service type of the service used (e.g. Creditcard). ServiceName string The service used (e.g. Corporate Cards EU). NoOfDebet Decimal Total number of debit transactions for the given service. NoOfCredit Decimal Total number of credit transactions for the given service. Amount Decimal Total amount for the given service (e.g 100.00). FromDate ISO 8601 The earliest transaction date, YYYY-MM-DD. ToDate ISO 8601 The latest transaction date, YYYY-MM-DD. V2 Body Fields Field Type Description PayExAccountNo Decimal The Account number given, shown the Merchant Portal.. OrderIdentity string A unique identifier of the order, as sent from the merchant to Swedbank Pay. Transactions that are related to the same order are associated with this ID. TransactionIdentity string A unique guid identifier of the transaction, can be traced in the Merchant Portal user interface. Amount Decimal Total amount of the related transaction (e.g 100.00). Currency ISO 4217 Settlement currency (e.g. SEK, NOK, EUR). VAT Amount Decimal VAT Amount for the given transaction (e.g 100.00). VAT Percentage Decimal VAT Percentage for the given transaction. Date Created ISO 8601 Transaction capture date/time. YYYY-MM-DD hh:mm:ss. Date Modified ISO 8601 Transaction settle date/time. YYYY-MM-DD hh:mm:ss. ServiceName string The service used (e.g. Corporate Cards EU). Provider string The service provider (e.g. Swedbank Pay, PayEx, Swish). PayExTransactionNo Decimal A unique identifier of the transaction, can be traced in the Merchant Portal user interface. PayExBatchNo Decimal A batch number common to all types of transactions processed by Swedbank Pay. Subsite string The Subsite used for transactions, only eligible if merchant uses subsite. SubsiteDescription string Description of the Subsite, only eligible if merchant uses subsite. ReferencedTransaction Decimal Transaction number for the authorization transaction for a two-stage transaction, or the number of the debit transaction if it is a credit transaction. ExternalTransactionReference Decimal The transaction reference from processor. CreditCardBatchNo Decimal The reference number from the credit card processor. Description string A textual description of the transaction, as sent by merchant to Swedbank Pay. ProductCategory string A product number, as sent by merchant to Swedbank Pay. Sales Channel string The channel through which the transaction was sent to Swedbank Pay (e.g Transaction via eCommerce APIs). Brand string If eligible, Branding information as sent by merchant to Swedbank Pay. Point Of Sale string If eligible, POS information as sent by merchant to Swedbank Pay. Reconciliation To do the reconciliation, you need to match the information in your system against the information provided by Swedbank Pay in the balance report and transaction list. Below is a sequence diagram detailing the interaction. Reconciliation Sequence Diagram sequenceDiagram participant SwedbankPay as Swedbank Pay activate Merchant activate SwedbankPay Merchant--&gt;&gt;SwedbankPay: Online payment transactions deactivate Merchant deactivate SwedbankPay activate Merchant SwedbankPay-&gt;&gt;Merchant: Balance Report (PDF-file) note left of Merchant: files are sent by e-mail or file transfer SwedbankPay-&gt;&gt;Merchant: Transaction list (XLSX-file) SwedbankPay-&gt;&gt;Merchant: Transaction list (XML-file) deactivate Merchant There are two ways for you to match the information from your system with the information given in the reconciliation files from Swedbank Pay: You can use information generated by your system (you will have to set a unique payeeReference when you make the transaction), or You can use the transaction number generated by Swedbank Pay (this is called transaction number and is returned from Swedbank Pay after you have created the transaction). A credit card transaction is made when you either make a capture or a reversal. In the input data for making a capture, you will set the payeeReference. The unique value of this field is the same as the field called OrderID in the reconciliation file. 1 2 3 4 5 6 7 8 { \"transaction\": { \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Reversal\", \"payeeReference\": \"ABC123\" } } When you receive the response from Swedbank Pay, the response will include transaction.number. This is the same as the field called TransactionNo in the reconciliation file. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"failedReason\": \"\", \"isOperational\": false, \"operations\": [] } } } payeeReference sent to Swedbank Pay is equal to OrderId in the reconciliation file. capture.transaction.number returned from Swedbank Pay is equal to TransactionNo in reconciliation file. Below you will see the API mapping tables to the fields in the settlement report for Capture and Reversal. Capture API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo   transaction.number if reversed later Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Reversal API XLSX XML     Swedbank Pay Batch Number SwedbankbatchNo   transaction.number Transaction Number TransactionNo   transaction.payeeReference Order id OrderId   transaction.created Date Created DateCreated     Date Modified DateModified     Provider Provider     Type Type   transaction.amount Amount Amount     Currency Currency     Product Number MerchantProductNo   transaction.description Description Description   transaction.vatAmount VAT Amount VATAmount     VAT Percentage VatoPercentage     Credit Card Batch Number CreditCardBatchNo   transaction.number if DirectDebit Direct Debit Bank Reference DirectDebitbankRef   transaction.number if DirectDebit Reference Reference     Swedbank Account Number SwedbankAccountNo     Referenced Transaction Number ReferencedTransaction     Sales Channel SalesChannel     Brand       Point Of Sale     Report Samples The content of the files depends on the type of agreement you have made with Swedbank Pay. For some payment instruments, only option A is available, while for other payment instruments, only option B is available. The sample files can be downloaded below. Make sure that you choose the examples from your current version of the balance report (v1 or v2). V1 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V1 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List V2 Option A: Swedbank Pay Handles The Settlement Process PDF Balance Report XLSX Transaction List XML Transaction List V2 Option B: You Handle The Settlement Process Yourself PDF Balance Report XLSX Transaction List XML Transaction List",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/core/settlement-reconciliation.html"
  },{
    "title": "Test Account Setup",
    "text": "Step 1: Sign Up For A Test Account A test account gives you access to our unified dashboard for managing your account across different platforms. We call this dashboard the Merchant Portal. Your test account request should be sent to: testaccount@swedbankpay.com in order to create an account for you, we need some specific information from your side: Company name: Your company name. Email address: To a developer or the CTO. Organization number: Your organization number. Step 2: Wait For Response Within 8 working hours we will have created your account and sent you an email containing the following information: Merchant name: This represents your core business entity with us. Payee ID: This is how we identify you. Services: The payment options which are activated and ready for testing. Login credentials: You will receive a temporary password in a separate email. warning Please check your spam folder if you haven’t received this email. Step 3: Get Your Access Tokens To submit payments to us, you will be making API requests that are authenticated with an access token. How to generate your access token: Log in to: The External Integration Merchant Portal - For testing environment. Merchant details: Here you will find information about your account. An access token is necessary since it will be used together with Payee ID to validate transactions. The Payee ID will serve as the door and, your token is the key. Navigate to “Access Tokens” at the top of the page. Choose “Add” and name the token. We suggest you name it according to what environment it is created in. Your token will only be fully visible upon creation. For security purposes, we will mask it like this: 12a3**********bc4de56f when it is displayed later. If you need to keep track of it, please copy and save it externally in a safe place. The token will not be visible unmasked in any of our systems, so a lost token must be replaced by a new one. warning Please note that the production and staging environment need separate tokens. Back to Introduction Start Integrating",
    "tags": "",
    "url": "/checkout-v3/setup.html"
  },{
    "title": "Split Settlement",
    "text": "Split Settlement The split settlement feature is an easy way of doing settlements for companies with multiple sub-merchants. With only a few steps, the settlement process becomes more efficient with regards to invoicing, payouts and setup for both your sub-merchants and yourself. In short, it is a settlement feature where a company with a website or an app can attach specific subsite numbers to sub-merchants selling their goods or services through the company. The subsite number is used to match the transactions with the correct sub-merchant, so the settlement is automatically split between them. If you run a site selling tickets to concerts, theaters, sporting events etc., each venue gets its own subsite number. If you run a funeral home, the sub-merchants can be everything from flower shops to charities. What We Need From You As A Company Submit a KYC (Know Your Customer) form for each sub-merchant you want to include. We will also do a KYC check on your sub-merchants, providing extra security for both of us. Give every sub-merchant who sells goods/services through your website or in your app a unique subsite number. It must be in the format of A-Za-z0-9. This must be included in the KYC form. We recommend using the same customer number they have in your system. Attach the subsite number to all the goods/services the sub-merchant sells through your website or app, so the goods/services can be matched to the correct merchant in our back office system. A partner agreement is needed for automatic deduction of revenue cuts and fees. How It Works We set up the sub-merchant subsite number in our system. You add the number in the request’s subsite field when you create the payment for the goods or service. The customer selects a payment instrument and completes the payment. The payment goes into a client funds account. Swedbank Pay matches the transaction with the sub-merchant using the subsite number. The settlement is split and connected to the correct sub-merchant. Revenue cuts for the super merchant and fees from Swedbank Pay are deducted automatically. Payout to the sub-merchant is done. Create Request with Subsite The subsite field will is added in the payeeInfo node. If you offer Amex as a card payment option, a siteId is added if you need to specify to Amex which sub-merchant the payment is intended for. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\" } } } Show fields Hide fields Required Field Type Description   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9. The Upsides Of Split Settlement Connecting sub-merchants to Swedbank Pay through the super merchant instead of having separate setups has a lot of pros: You only need one agreement for each payment instrument (credit card, Vipps, Swish, MobilePay Online, invoice) and payment gateway. You only need one acquiring agreement. You only need one Vipps or Swish certificate. You can add more payment instruments easily, as it only has to be done once. New sub-merchants can be set up quickly, as the only thing needed is a KYC form and a subsite number. This shortens the setup time to a matter of hours for both you and us. The automatic settlement split and deduction of fees and revenue cuts minimizes the work for your accounting department, as you won’t have to invoice your sub-merchants. The subsite split is available for all payment instruments we offer on our eCom platform. Split Settlement Admin Functions With regards to admin functions, we offer a full integration towards our Merchant Portal system. This way, you do not have to log in to the Merchant Portal to perform these operations. Capture And Cancel Captures and cancels are done by the super merchant the same way as all other flows. Reversal In cases where you need to do reversals, this will be performed by the super merchant. The reversal amount will be charged from the sub-merchants subsite number. If the sub-merchants balance is 0 (zero), the super merchant will be invoiced. The super merchant will in turn have to invoice this amount to the sub merchant.",
    "tags": "",
    "url": "/checkout-v3/features/optional/split-settlement.html"
  },{
    "title": "Split Settlement",
    "text": "Split Settlement The split settlement feature is an easy way of doing settlements for companies with multiple sub-merchants. With only a few steps, the settlement process becomes more efficient with regards to invoicing, payouts and setup for both your sub-merchants and yourself. In short, it is a settlement feature where a company with a website or an app can attach specific subsite numbers to sub-merchants selling their goods or services through the company. The subsite number is used to match the transactions with the correct sub-merchant, so the settlement is automatically split between them. If you run a site selling tickets to concerts, theaters, sporting events etc., each venue gets its own subsite number. If you run a funeral home, the sub-merchants can be everything from flower shops to charities. What We Need From You As A Company Submit a KYC (Know Your Customer) form for each sub-merchant you want to include. We will also do a KYC check on your sub-merchants, providing extra security for both of us. Give every sub-merchant who sells goods/services through your website or in your app a unique subsite number. It must be in the format of A-Za-z0-9. This must be included in the KYC form. We recommend using the same customer number they have in your system. Attach the subsite number to all the goods/services the sub-merchant sells through your website or app, so the goods/services can be matched to the correct merchant in our back office system. A partner agreement is needed for automatic deduction of revenue cuts and fees. How It Works We set up the sub-merchant subsite number in our system. You add the number in the request’s subsite field when you create the payment for the goods or service. The customer selects a payment instrument and completes the payment. The payment goes into a client funds account. Swedbank Pay matches the transaction with the sub-merchant using the subsite number. The settlement is split and connected to the correct sub-merchant. Revenue cuts for the super merchant and fees from Swedbank Pay are deducted automatically. Payout to the sub-merchant is done. Create Request with Subsite The subsite field will is added in the payeeInfo node. If you offer Amex as a card payment option, a siteId is added if you need to specify to Amex which sub-merchant the payment is intended for. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\" } } } Show fields Hide fields Required Field Type Description   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9. The Upsides Of Split Settlement Connecting sub-merchants to Swedbank Pay through the super merchant instead of having separate setups has a lot of pros: You only need one agreement for each payment instrument (credit card, Vipps, Swish, MobilePay Online, invoice) and payment gateway. You only need one acquiring agreement. You only need one Vipps or Swish certificate. You can add more payment instruments easily, as it only has to be done once. New sub-merchants can be set up quickly, as the only thing needed is a KYC form and a subsite number. This shortens the setup time to a matter of hours for both you and us. The automatic settlement split and deduction of fees and revenue cuts minimizes the work for your accounting department, as you won’t have to invoice your sub-merchants. The subsite split is available for all payment instruments we offer on our eCom platform. Split Settlement Admin Functions With regards to admin functions, we offer a full integration towards our Merchant Portal system. This way, you do not have to log in to the Merchant Portal to perform these operations. Capture And Cancel Captures and cancels are done by the super merchant the same way as all other flows. Reversal In cases where you need to do reversals, this will be performed by the super merchant. The reversal amount will be charged from the sub-merchants subsite number. If the sub-merchants balance is 0 (zero), the super merchant will be invoiced. The super merchant will in turn have to invoice this amount to the sub merchant.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/split-settlement.html"
  },{
    "title": "Start Method",
    "text": "The Start method is initializes the created instance with, among other parameters, the very essential POIID. The POIID is received from Swedbank Pay and is an identifier of the Point Of Interaction. Its value should stay the same at all time. Through this id the terminal knows what parameters to fetch from the TMS. This makes it easy to replace a terminal with another since it will retrieve the same parameters that were used by the replaced terminal. With this call it is also decided whether to start a listener for terminal requests too, or if just running as a client. Leaving out the SalesCapabilities will use the default values and start a listener. 1 2 3 4 5 6 7 8 PAX.Start(new SaleApplInfo() { ApplicationName = \"Quick Demo\", ProviderIdentification = \"SwP\", SoftwareVersion = \"0.1\", POIID = \"A-TEST-POIID\", SaleCapabilities = SaleCapabilitiesEnum.PrinterReceipt.ToString() // Client only mode! });",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/start.html"
  },{
    "title": "Status Response Models",
    "text": "Aborted A payment order response with the status Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd\", \"created\": \"2022-01-24T10:54:05.6243371Z\", \"updated\": \"2022-01-24T10:54:19.2679591Z\", \"operation\": \"Purchase\", \"status\": \"Aborted\", \"currency\": \"SEK\", \"amount\": 32000, \"vatAmount\": 0, \"description\": \"Abort test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/metadata\" } }, \"operations\": [ ] } Response fields not covered in the Initialized redirect or seamless view responses: Field Type Description operations array The array of operations that are possible to perform on the payment order in its current state. As this is an aborted payment, the available operations are redirect-checkout or view-checkout, depending on the integration. See Operations for details Cancelled The cancel response is not yet converted to the new standard. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Failed The failed response is not yet converted to the new standard. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"failed\": { \"id\": \"/psp/paymentorders/bc2832a7-0e0f-45f2-57d6-08d9ea4cff66/failed\", \"problem\": { \"type\": \"acquirerinsufficientfunds\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Recurrence transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER_INSUFFICIENT_FUNDS-insufficient funds, response-code: 61\" } ] } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. failed object The failed object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. problem object The problem object. type string The type of problem that occurred. title string The title of the problem that occurred. status integer The HTTP status code that the problem was served with. detail string A detailed, human readable description of the error. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Initialized Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Determines the initial operation, defining the type of payment order created. status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Further information here. Cancelled is returned when an authorized amount has been fully cancelled. See the cancel feature section for further information. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Abort feature section for further information. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is an initialized payment, the available operations are abort, update-order and redirect-checkout or view-checkout, depending on the integration. See Operations for details. Paid The payment order response with status paid, and the paid resource expanded. Please note that the main code example is of a card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Paid\", \"currency\": \"SEK\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"vatAmount\": 375, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548603, \"payeeReference\": \"1641542301\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } }, \"cancelled\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/metadata\" } }, \"operations\": [ { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancellations\", \"rel\": \"cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/captures\", \"rel\": \"capture\", \"contentType\": \"application/json\" }, ] } Apple Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } Click to Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Click to Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ClickToPay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } Google Pay™ paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Google Pay™ Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"GooglePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } MobilePay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\" \"bin\": \"489537\" } } } Vipps paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"amount\": 1500, \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\" \"cardBrand\": \"Visa\", \"maskedDPan\": \"49250000******04\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 123456789 } } } Response fields not covered in the Initialized redirect or seamless view responses: Show fields Hide fields Field Type Description remainingCaptureAmount integer The remaining authorized amount that is still possible to capture. remainingCancellationAmount integer The remaining authorized amount that is still possible to cancel. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. maskedDPan string A masked version of a network token representing the card. It will only appear if the chosen payment instrument is tokenized and the card used is tokenized by Visa or MasterCard. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish. operations array The array of operations that are possible to perform on the payment order in its current state. As this is a paid payment, the available operations are capture, cancel and redirect-checkout or view-checkout, depending on the integration. See Operations for details If there e.g. is a recurrence or an unscheduled (below) token connected to the payment, it will appear like this. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/91c3ca0d-3710-40f0-0f78-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548605, \"payeeReference\": \"1641543637\", \"amount\": 1500, \"tokens\": [ { \"type\": \"recurrence\", \"token\": \"48806524-6422-4db7-9fbd-c8b81611132f\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/9f786139-3537-4a8b-0f79-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548607, \"payeeReference\": \"1641543818\", \"amount\": 1500, \"tokens\": [ { \"type\": \"Unscheduled\", \"token\": \"6d495aac-cb2b-4d94-a5f1-577baa143f2c\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } Response fields not covered in the Initialized redirect or seamless view responses: Field Type Description tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/status-models.html"
  },{
    "title": "Status Response Models",
    "text": "Aborted A payment order response with the status Aborted. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd\", \"created\": \"2022-01-24T10:54:05.6243371Z\", \"updated\": \"2022-01-24T10:54:19.2679591Z\", \"operation\": \"Purchase\", \"status\": \"Aborted\", \"currency\": \"SEK\", \"amount\": 32000, \"vatAmount\": 0, \"description\": \"Abort test\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/2c3f7a3e-65ca-4493-ac93-08d9dcb313fd/metadata\" } }, \"operations\": [ ] } Response fields not covered in the Initialized redirect or seamless view responses: Field Type Description operations array The array of operations that are possible to perform on the payment order in its current state. As this is an aborted payment, the available operations are redirect-checkout or view-checkout, depending on the integration. See Operations for details Cancelled The cancel response is not yet converted to the new standard. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"cancellation\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2022-01-31T09:49:13.7567756Z\", \"updated\": \"2022-01-31T09:49:14.7374165Z\", \"type\": \"Cancellation\", \"state\": \"Completed\", \"number\": 71100732065, \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Cancellation\", \"payeeReference\": \"AB123\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this cancellation transaction belongs to. cancellation object The cancellation object, containing information about the cancellation transaction. id string The relative URL of the cancellation transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Initialized, Completed or Failed. Indicates the state of the transaction. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A human readable description of maximum 40 characters of the transaction. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. Failed The failed response is not yet converted to the new standard. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"failed\": { \"id\": \"/psp/paymentorders/bc2832a7-0e0f-45f2-57d6-08d9ea4cff66/failed\", \"problem\": { \"type\": \"acquirerinsufficientfunds\", \"title\": \"Operation failed\", \"status\": 403, \"detail\": \"Unable to complete Recurrence transaction, look at problem node!\", \"problems\": [ { \"name\": \"ExternalResponse\", \"description\": \"REJECTED_BY_ACQUIRER_INSUFFICIENT_FUNDS-insufficient funds, response-code: 61\" } ] } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. failed object The failed object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. problem object The problem object. type string The type of problem that occurred. title string The title of the problem that occurred. status integer The HTTP status code that the problem was served with. detail string A detailed, human readable description of the error. problems array The array of problem detail objects. name string The name of the field, header, object, entity or likewise that was erroneous. description string The human readable description of what was wrong with the field, header, object, entity or likewise identified by name. Initialized Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Determines the initial operation, defining the type of payment order created. status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Further information here. Cancelled is returned when an authorized amount has been fully cancelled. See the cancel feature section for further information. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Abort feature section for further information. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is an initialized payment, the available operations are abort, update-order and redirect-checkout or view-checkout, depending on the integration. See Operations for details. Paid The payment order response with status paid, and the paid resource expanded. Please note that the main code example is of a card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Paid\", \"currency\": \"SEK\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"vatAmount\": 375, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548603, \"payeeReference\": \"1641542301\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } }, \"cancelled\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/metadata\" } }, \"operations\": [ { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancellations\", \"rel\": \"cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/captures\", \"rel\": \"capture\", \"contentType\": \"application/json\" }, ] } Apple Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } Click to Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Click to Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ClickToPay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } Google Pay™ paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Google Pay™ Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"GooglePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } MobilePay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedPan\": \"492500******0004\", \"maskedDPan\": \"49250000******04\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\" \"bin\": \"489537\" } } } Vipps paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"amount\": 1500, \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\" \"cardBrand\": \"Visa\", \"maskedDPan\": \"49250000******04\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 123456789 } } } Response fields not covered in the Initialized redirect or seamless view responses: Show fields Hide fields Field Type Description remainingCaptureAmount integer The remaining authorized amount that is still possible to capture. remainingCancellationAmount integer The remaining authorized amount that is still possible to cancel. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. maskedDPan string A masked version of a network token representing the card. It will only appear if the chosen payment instrument is tokenized and the card used is tokenized by Visa or MasterCard. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish. operations array The array of operations that are possible to perform on the payment order in its current state. As this is a paid payment, the available operations are capture, cancel and redirect-checkout or view-checkout, depending on the integration. See Operations for details If there e.g. is a recurrence or an unscheduled (below) token connected to the payment, it will appear like this. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/91c3ca0d-3710-40f0-0f78-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548605, \"payeeReference\": \"1641543637\", \"amount\": 1500, \"tokens\": [ { \"type\": \"recurrence\", \"token\": \"48806524-6422-4db7-9fbd-c8b81611132f\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/9f786139-3537-4a8b-0f79-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548607, \"payeeReference\": \"1641543818\", \"amount\": 1500, \"tokens\": [ { \"type\": \"Unscheduled\", \"token\": \"6d495aac-cb2b-4d94-a5f1-577baa143f2c\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } Response fields not covered in the Initialized redirect or seamless view responses: Field Type Description tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/status-models.html"
  },{
    "title": "Status Response Models",
    "text": "Paid The payment order response with status paid, and the paid resource expanded. Please note that the main code example is of a card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Paid\", \"currency\": \"SEK\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"vatAmount\": 375, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548603, \"payeeReference\": \"1641542301\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } }, \"cancelled\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/metadata\" } }, \"operations\": [ { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancellations\", \"rel\": \"cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/captures\", \"rel\": \"capture\", \"contentType\": \"application/json\" }, ] } Apple Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } MobilePay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedPan\": \"489537******1424\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\" \"bin\": \"489537\" } } } Vipps paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"amount\": 1500, \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\" \"cardBrand\": \"Visa\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 1234567890 } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Determines the initial operation, defining the type of payment order created. status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Cancelled is returned when an authorized amount has been fully cancelled. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The remaining authorized amount that is still possible to capture. remainingCancellationAmount integer The remaining authorized amount that is still possible to cancel. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is a paid payment, the available operations are capture, cancel and redirect-checkout or view-checkout, depending on the integration. See Operations for details If there e.g. is a recurrence or an unscheduled (below) token connected to the payment, it will appear like this. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/91c3ca0d-3710-40f0-0f78-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548605, \"payeeReference\": \"1641543637\", \"amount\": 1500, \"tokens\": [ { \"type\": \"recurrence\", \"token\": \"48806524-6422-4db7-9fbd-c8b81611132f\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/9f786139-3537-4a8b-0f79-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548607, \"payeeReference\": \"1641543818\", \"amount\": 1500, \"tokens\": [ { \"type\": \"Unscheduled\", \"token\": \"6d495aac-cb2b-4d94-a5f1-577baa143f2c\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } Response fields introduced in this section: Field Type Description tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/status-models.html"
  },{
    "title": "Status Response Models",
    "text": "Paid The payment order response with status paid, and the paid resource expanded. Please note that the main code example is of a card payment. We have included paid resources of the remaining instruments below the main code example. Resource examples where details are empty indicate that no details are available. The wallets Apple Pay and Vipps do not return maskedPan. Please note that while MobilePay does return this field, the value present is actually a networkToken, which represents the PAN, but is not a PAN in itself. Card Paid Resource Card Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b\", \"created\": \"2022-01-07T07:58:26.1300282Z\", \"updated\": \"2022-01-07T08:17:44.6839034Z\", \"operation\": \"Purchase\", \"status\": \"Paid\", \"currency\": \"SEK\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"vatAmount\": 375, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"instrumentMode\": false, \"guestMode\": false, \"orderItems\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/orderitems\" }, \"urls\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/urls\" }, \"payeeInfo\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payeeinfo\" }, \"payer\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/payers\" }, \"history\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548603, \"payeeReference\": \"1641542301\", \"amount\": 1500, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"maskedPan\": \"492500******0004\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"L00302\", \"acquirerTransactionType\": \"STANDARD\", \"acquirerStan\": \"302\", \"acquirerTerminalId\": \"70101301389\", \"acquirerTransactionTime\": \"2022-06-15T14:12:55.029Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"492500\" } }, \"cancelled\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/metadata\" } }, \"operations\": [ { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/cancellations\", \"rel\": \"cancel\", \"contentType\": \"application/json\" }, { \"method\": \"POST\", \"href\": \"https://api.internaltest.payex.com/psp/paymentorders/ca59fa8a-3423-40e5-0f77-08d9d133750b/captures\", \"rel\": \"capture\", \"contentType\": \"application/json\" }, ] } Apple Pay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Apple Pay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/1f8d409e-8d8c-4ba1-a3ab-08da8caf7918/paid\", \"instrument\": \"ApplePay\", \"number\": 80100001190, \"payeeReference\": \"1662360210\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit\", \"expiryDate\": \"12/0023\", \"issuerAuthorizationApprovalCode\": \"L00392\", \"acquirerTransactionType\": \"WALLET\", \"acquirerStan\": \"392\", \"acquirerTerminalId\": \"80100001190\", \"acquirerTransactionTime\": \"2022-09-05T06:45:40.322Z\", \"transactionInitiator\": \"CARDHOLDER\" \"bin\": \"489537\" } } } MobilePay paid Resource Please note that this is an abbreviated example. See the main paid example for more context. MobilePay Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/efdcbf77-9a62-426b-a3b1-08da8caf7918/paid\", \"instrument\": \"MobilePay\", \"number\": 75100106637, \"payeeReference\": \"1662364327\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\", \"cardBrand\": \"Visa\", \"maskedPan\": \"489537******1424\", \"expiryDate\": \"12/2022\", \"issuerAuthorizationApprovalCode\": \"018117\", \"acquirerTransactionType\": \"MOBILEPAY\", \"acquirerStan\": \"53889\", \"acquirerTerminalId\": \"42\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\" \"bin\": \"489537\" } } } Vipps paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Vipps Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/a463b145-3278-4aa0-c4db-08da8f1813a2/paid\", \"instrument\": \"Vipps\", \"number\": 99463794, \"payeeReference\": \"1662366424\", \"amount\": 1500, \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"nonPaymentToken\": \"12345678-1234-1234-1234-1234567890AB\", \"externalNonPaymentToken\": \"1234567890\" \"cardBrand\": \"Visa\", \"acquirerTransactionType\": \"WALLET\", \"acquirerTerminalId\": \"99488282\", \"acquirerTransactionTime\": \"2022-09-05T09:54:05Z\", \"transactionInitiator\": \"CARDHOLDER\", \"bin\": \"489537\" } } } Swish paid Resource Please note that this is an abbreviated example. See the main paid example for more context. Swish Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/b0410cd0-61df-4548-a3ad-08da8caf7918/paid\", \"instrument\": \"Swish\", \"number\": 74100413405, \"payeeReference\": \"1662360831\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"misidn\": \"+46739000001\" } } } Invoice Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Invoice Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/05a356df-05e2-49e6-8858-08da8cb4d651/paid\", \"instrument\": \"Invoice\", \"number\": 71100775379, \"payeeReference\": \"1662360980\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Installment Account Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Installment Account Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/39eef759-a619-4c91-885b-08da8cb4d651/paid\", \"instrument\": \"CreditAccount\", \"number\": 77100038000, \"payeeReference\": \"1662361777\", \"transactionType\": \"Authorization\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": {} } } Trustly Paid Resource Please note that this is an abbreviated example. See the main Paid example for more context. Trustly Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentOrder\": \"/psp/paymentorders/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"paid\": { \"id\": \"/psp/paymentorders/bf660901-93d0-4245-4e6b-08da8f165366/paid\", \"instrument\": \"Trustly\", \"number\": 79100113652, \"payeeReference\": \"1662373401\", \"orderReference\": \"orderReference\", \"transactionType\": \"Sale\", \"amount\": 1500, \"submittedAmount\": 1500, \"feeAmount\": 0, \"discountAmount\": 0, \"details\": { \"trustlyOrderId\": 1234567890 } } } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Determines the initial operation, defining the type of payment order created. status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Cancelled is returned when an authorized amount has been fully cancelled. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the integration types might be subject to name changes. If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Enterprise implementation, this is triggered by not including a payerReference or nationalIdentifier in the original payment order request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid object The paid object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. instrument string The payment instrument used in the fulfillment of the payment. Do not use this field for code validation purposes. To determine if a capture is needed, we recommend using operations or the transactionType field. number integer The paymentorder number, useful when there’s need to reference the paymentorder in human communication. Not usable for programmatic identification of the paymentorder, where id should be used instead. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. transactionType string This will either be set to Authorization or Sale. Can be used to understand if there is a need for doing a capture on this payment order. Swedbank Pay recommends using the different operations to figure out if a capture is needed. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The remaining authorized amount that is still possible to capture. remainingCancellationAmount integer The remaining authorized amount that is still possible to cancel. submittedAmount integer This field will display the initial payment order amount, not including any instrument specific discounts or fees. The final payment order amount will be displayed in the amount field. feeAmount integer If the payment instrument used had a unique fee, it will be displayed in this field. discountAmount integer If the payment instrument used had a unique discount, it will be displayed in this field. details integer Details connected to the payment. nonPaymentToken string The result of our own card tokenization. Activated in POS for the merchant or merchant group. externalNonPaymentToken string The result of an external tokenization. This value will vary depending on card types, acquirers, customers, etc. For Mass Transit merchants, transactions redeemed by Visa will be populated with PAR. For Mastercard and Amex, it will be our own token. cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization. maskedPan string The masked PAN number of the card. expiryDate string The month and year of when the card expires. issuerAuthorizationApprovalCode string Payment reference code provided by the issuer. acquirerTransactionType string 3DSECURE or STANDARD. Indicates the transaction type of the acquirer. acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction. acquirerTerminalId string The ID of the acquirer terminal. acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction. transactionInitatior string The party which initiated the transaction. MERCHANT or CARDHOLDER. bin string The first six digits of the maskedPan. msisdn string The msisdn used in the purchase. Only available when paid with Swish. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. As this is a paid payment, the available operations are capture, cancel and redirect-checkout or view-checkout, depending on the integration. See Operations for details If there e.g. is a recurrence or an unscheduled (below) token connected to the payment, it will appear like this. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/91c3ca0d-3710-40f0-0f78-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548605, \"payeeReference\": \"1641543637\", \"amount\": 1500, \"tokens\": [ { \"type\": \"recurrence\", \"token\": \"48806524-6422-4db7-9fbd-c8b81611132f\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paid\": { \"id\": \"/psp/paymentorders/9f786139-3537-4a8b-0f79-08d9d133750b/paid\", \"instrument\": \"CreditCard\", \"number\": 99101548607, \"payeeReference\": \"1641543818\", \"amount\": 1500, \"tokens\": [ { \"type\": \"Unscheduled\", \"token\": \"6d495aac-cb2b-4d94-a5f1-577baa143f2c\", \"name\": \"492500******0004\", \"expiryDate\": \"02/2023\" } ], \"details\": {} } } Response fields introduced in this section: Field Type Description tokens integer A list of tokens connected to the payment. type string payment, recurrence, transactionOnFile or unscheduled. The different types of available tokens. token string The token guid. name string The name of the token. In the example, a masked version of a card number. expiryDate string The expiry date of the token.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/status-models.html"
  },{
    "title": "Status",
    "text": "The status field indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Further information here. Cancelled is returned when an authorized amount has been fully cancelled. See the cancel feature section for further information. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Abort feature section for further information.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/status.html"
  },{
    "title": "Status",
    "text": "The status field indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid section for further information. Failed is returned when a payment has failed. You will find an error message in the failed section. Further information here. Cancelled is returned when an authorized amount has been fully cancelled. See the cancel feature section for further information. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Abort feature section for further information.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/status.html"
  },{
    "title": "Terminology",
    "text": "A Access Token The OAauth 2 Access token needed to access Swedbank Pay eCom APIs. Tokens are generated in the Merchant Portal. Learn how to get started in the Merchant Portal Manual. Note that it must follow the regex pattern [\\w-]*. Account Receivable Consumer The AccountReceivableConsumer API is the fundament for Swedbank Pay Invoice Payments service. It is a service where Swedbank Pay helps produce and distribute invoices to payers. Authorization The first part of a two-phase transaction where a certain amount is blocked on the payer’s account. The authorized amount is unavailable for the payer, ensuring that the merchant receives the money during the subsequent capture phase. C Callback If callbackURL is set, a Callback is triggered when a change or update from the back-end system is made on a payment or transaction. Swedbank Pay performs an async callback to inform the payee/merchant about this kind of update. Cancellation Used to cancel authorized and not yet captured transactions. If a cancellation is performed after doing a part-capture, it will only affect the not yet captured authorization amount. Capture The second part of a two-phase transaction where the authorized amount is sent from the payer to the payee. It is possible to do a part-capture on a subset of the authorized amount. Several captures on the same payment are possible, up to the total authorization amount. Checkin Checkin is the first part of the Swedbank Pay Checkout flow (prior to displaying the Payment Menu), where the payer is identified by email and mobile phone number. Consumer The person doing the purchase, equivalent to Payer. Consumers The Consumers resource stores information about the consumer of the sold services or goods. It is the fundament of Checkin in Swedbank Pay Checkout. F Financing Consumer The FinancingConsumer Invoice API is the fundament for Swedbank Pay Invoice Payments service. It is a service where Swedbank Pay helps improve cashflow by purchasing merchant invoices. H Header An HTTP header used to carry information when doing an API Request. All API requests share some common headers. I Intent An intent is a payment parameter that determine the possible activity states available for a payment option (e.g. Purchase). Intents differ depening on payment instrument. Creating a payment within a one-phase payment flow (Swish, Direct debit) must have the intent to create a Sale. This is in contrast to a two-phase payment flow that have the intent to create an Authorization. Card payments also have specific intents that determine whether an AutoCapture is implemented (the credit card is charged directly like one-phase transaction). M Merchant Portal The Merchant Portal interface where you perform day to day operations on payments processed by Swedbank Pay. The Merchant Portal manual consists of two parts, [Getting Started and Interface and Search. O One-phase payment flow A one-phase payment is a payment done in one step. The amount is settled in one transactional step. Operation A payment operation determines what kind of payment that should be implemented. Available payment operations vary, depending on payment instrument. The most common operation all instruments share is the Purchase operation. Card Payments have several others, such as Verify and Recur. Operations Operations consist of an array of contextual links / actions that direct the payment flow in a given state of the payment resource (i.e. creating a capture transaction, creating a reversal transaction, returning a redirect URL, etc). Operations are HATEOAS driven and managed through API calls. P Payee The company that receive funds for the payment. Payee ID The ID of the company that receive funds for the payment. Also referred to as Merchant ID. Payer The person doing the purchase, equivalent to Consumer. Payment A payment is the main resource in all of Swedbank Pay RESTful APIs, and a fundamental building block for each payment instrument during the payment process. The payment resource of each payment instrument is architectually similar, although it is tailor-made to manage the specifics of each instrument. It can be in different states and contain several different types of transactions. The state of the payment decides the operations that are available. Payment Menu A Seamless View - embedded on a website - showing available payment instruments during payment scenario. The Payment Menu is the second part of the Swedbank Pay Checkout flow (after checkin). Payment Orders The Payment Orders resource is used when initiating a payment process using the Payment Menu v2 and Swedbank Pay Checkout. What payment instrument the payment order will make use of is up to the payer. The payment order is a container for the payment method object selected, acessed through the sub-resources payments and currentPayment. Payment token A payment token is generated through a card purchase or card verification. It contains all necessary payment details to enable subsequent server-to-server payments. Used in One-click payments and recurring payment scenarios (Card, Invoice and Swedbank Pay Checkout). PSD2 PSD2 is the second Payment Services Directive, being the requirement for strong customer authentication. It is performed with multi-factor authentication, on the majority of electronic payments. Purchase The payment operation that initiates a purchase payment process. R Recur The payment operation that initiates a recurring payment process. It is a payment that references a recurrenceToken created through a previous payment in order to charge the same card. Reversal Used to reverse a payment. It is only possible to reverse a payment that has been captured and not yet reversed. S Sale A one-phase transaction where the amount is settled when the transaction has succeeded. Payment instruments using sales transactions are Swish and Direct Bank Debit. SCA Strong Customer Authentication, which is a requirement from EU Revised Directive on Payment Services (PSD2). This implements the multi-factor authentication, for stronger security of electronic payments. Swedbank Pay Direct API A payment flow where the implementer (Swedbank Pay customer) handles all user intreraction and make direct API calls to Swedbank Pay (server-to-server). Swedbank Pay Seamless View A payment flow were the payer interacts with pages developed by Swedbank Pay directly through an iframe, directly embedded in the webshop/merchant site. Swedbank Pay Payment Pages A payment flow where the payer is redirected to a payment page developed and hosted by Swedbank Pay. T Two-phase payment flow A payment done in two steps. Authorization and capture. The most common payment instrument using two-phase payments is card payments. U Unscheduled Purchase An unscheduled purchase, also called a Merchant Initiated Transaction (MIT), is a payment which uses an unscheduledToken generated through a previous payment in order to charge the same card at a later time. They are done by the merchant without the cardholder being present.. V Verify The payment operation that initiates a verification payment process. It is a payment that lets you post verifications to confirm the validity of card information, without reserving or charging any amount. This option is used to generate a payment- or recurrence token, that can be used in a recurring payments scenarios or for one-clickpayments, without charging the card in the process. 0-9 3-D Secure 2.0 (3DS2) The new authentication protocol for online card payments. The protocol is XML-based and designed to be an additional security layer for online credit and debit card transactions.",
    "tags": "",
    "url": "/checkout-v3/resources/terminology.html"
  },{
    "title": "Test Data",
    "text": "Swedbank Pay Checkout Test Data During a Swedbank Pay Checkout implementation, you can use the test data related to the different payment instruments listed below. To see Swedbank Pay Checkout in action, please visit our demoshop To test a checked-in user in the Demoshop, please use the following test data: Checkout test data for Norway Type Data Description Email olivia.nyhuus@payex.com The e-mail address of the payer. Mobile number +47 98765432 The mobile phone number of the payer. Format Norway: +47 99999999. SSN 26026708248 The social security number of the payer. Format Norway: DDMMYYXXXXX ZipCode 1642 The city zip code. Format Norway: XXXX Checkout test data for Sweden Type Data Description Email leia.ahlstrom@payex.com The e-mail address of the payer. Mobile number +46 739000001 The mobile phone number of the payer. Format Sweden: +46 707777777. SSN 199710202392 The social security number of the payer. Format Sweden: YYYYMMDDXXXX. ZipCode 17674 The city zip code. Format Sweden: XXXXX Checkout test data for Denmark Type Data Description Mobile number +4522222222 The mobile phone number of the payer. Format Denmark: +45 22222222 Credit Card Test Data With regards to card payments, our external integration test environment is connected to our POS system instead of a fake service. It is set up with an internal acquirer. This gives us a production-like test environment, while also giving us sandbox testing opportunities, such as 3-D Secure card enrollment and error scenarios. No payment information will be sent to other acquiring institutions. 3-D Secure Cards Card type Card number Expiry CVC Type of test data Visa 4761739001010416 After the current month Any 3-D Secure enrolled MasterCard 5226612199533406 After the current month Any 3-D Secure enrolled 3-D Secure For merchants using 3-D Secure (3DS1), this is the ACS (Access Control Server) you will encounter in our test environments. Use the Visa or MasterCard listed under 3-D Secure Cards above when doing a card payment. After pressing the purchase button you will then be taken to a menu where you can select Authentication status. In this menu, there are a few different options to choose from. Choose the status you want to test, click the Continue button and the status you selected will be sent with the payment. After pressing Continue, you will be sent back to the payment like a normal 3-D Secure authentication. OTP (3DS2) For m©erchants using 3DS2, OTP (One-Time Password) is the ACS (Access Control Server) you will encounter. Use the Visa or MasterCard listed under 3-D Secure Cards above when doing a card payment. After pressing the purchase button you will then be taken to a challenge form where you need to enter a code based on the result you wish for. See the list of codes below the screenshot. After pressing Pay you will be sent back to the payment like a normal 3-D Secure authentication. OTP Codes OTP Value Transaction Status Transaction Status Reason ECI Authentication Value 1234 Y   01 JAmi21makAifmwqo2120cjq1AAA= 1111 N 01 01   2222 R 01 01   3333 U 01 01   4444 A 01 01 Qm181okmdyqh6yQmYuq1890QAAA= OTP Transaction Status Transaction Status Transaction Status Description Y Authentication / Account verification successful N Not authenticated / Account not verified; Transaction denied R Authentication / Account verification rejected. Issuer is rejecting authentication/verification and request that authorization not be attempted U Authentication / Account verification could not be performed; technical or other problem A Attempts processing performed; Not authenticated / verified, but a prood of attempt authentication / verification is provided Visa Card number Expiry CVC 4925000000000004 After the current month Any 4581097032723517 After the current month Any 4581099940323133 After the current month Any MasterCard Card number Expiry CVC 5226600159865967 After the current month Any 5226603115488031 After the current month Any 5226604266737382 After the current month Any 5226600156995650 After the current month Any American Express Card number Expiry CVC Type of test data 377601000000000 After the current month Any (4 digits) Amex &amp; loopback JCB Card number Expiry CVC 3569990010082211 After the current month Any Diners Card number Expiry CVC 6148201829798 After the current month Any Maestro Card number Expiry CVC 6764429999947470 After the current month Any Dankort Card number Expiry CVC 5019994016316467 After the current month Any 5019994001307083 After the current month Any Visa/DanKort Card number Expiry CVC 4571994016401817 After the current month Any 4571994016471869 After the current month Any Forbrugsforeningen Card number Expiry CVC 6007220000000004 After the current month Any Failure Testing Cards There are two different ways of testing Card Payments error scenarios. You can test 3-D Secure errors using our 3-D Secure emulator, or you can use specific amounts set to trigger errors in our test environment. Amount Error Testing Method We have some preset amounts that will trigger error codes. While creating a payment (operation purchase), enter one of the amounts from the list below in the prices object (\"amount\": &lt;number&gt;) before submitting a payment. The error message displayed behind the amounts will be sent with your payment in the test environment. The amounts that can be used to trigger error codes (transactionThirdPartyError): Amount Error Code Description 900313 REJECTED_BY_ACQUIRER_INVALID_AMOUNT Invalid amount, response-code: 13 900330 REJECTED_BY_ACQUIRER_FORMAT_ERROR Format error, response-code: 30 900334 REJECTED_BY_ACQUIRER_POSSIBLE_FRAUD Possible fraud, response-code: 34 900343 REJECTED_BY_ACQUIRER_CARD_STOLEN Card stolen, response-code: 43 900354 REJECTED_BY_ACQUIRER_CARD_EXPIRED Card expired, response-code: 54 900351 REJECTED_BY_ACQUIRER Unknown error, response-code: 51 900359 REJECTED_BY_ACQUIRER_POSSIBLE_FRAUD Possible fraud, response-code: 59 900361 REJECTED_BY_ACQUIRER_INSUFFICIENT_FUNDS Insufficient funds, response-code: 61 900362 REJECTED_BY_ACQUIRER Unknown error, response-code: 62 900391 ACQUIRER_HOST_OFFLINE Acquirer host offline, response-code: 91 Invoice Test Data Invoice test data for Norway Type Data SSN 26026708248 Name Olivia Nyhuus Address Saltnestoppen 43 City 1642 Saltnes Invoice test data for Sweden Type Data Alternative data SSN 600307-1161 971020-2392 Name Azra Oliveira Leia Ahlström Address Helgestavägen 9 Hökvägen 5 City 19792 Bro 17674 Järfälla MSISDN   +46739000001 email   leia.ahlstrom@payex.com Invoice test data for Finland Type Data SSN 100584-451P Name Järvilehto Kimmo Address Kiannonkatu 88 City 90500 Oulu Invoice Service Test Data Use any name, address etc. Swish Test Data Testing a successful Swish purchase (in our external integration test environment) can be done by using any valid Swedish mobile number. E.g: +46 739000001. As with Vipps, the external integration test environment uses a fake service with no app involved. To trigger an error message, set the description value in POST Create Payment or Create Payment Order to one of the following values: Description Simulates RF07 Transaction declined TM01 Swish timed out before the payment was started BANKIDCL Payer cancelled BankId signing",
    "tags": "",
    "url": "/checkout-v3/resources/test-data.html"
  },{
    "title": "Terms of Service URL",
    "text": "If you have specific terms of service you want to display and the payer to approve during the payment process, you can do this by adding a termsOfServiceUrl to the urls node of your paymentOrder request. The url will appear as a clickable hyperlink below the pay button in the payment UI. The terms of service open in a separate tab when clicked. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" } } } Field Type Description   check urls object The urls object, containing the URLs relevant for the payment order. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/tos.html"
  },{
    "title": "Terms of Service URL",
    "text": "If you have specific terms of service you want to display and the payer to approve during the payment process, you can do this by adding a termsOfServiceUrl to the urls node of your paymentOrder request. The url will appear as a clickable hyperlink below the pay button in the payment UI. The terms of service open in a separate tab when clicked. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" } } } Field Type Description   check urls object The urls object, containing the URLs relevant for the payment order. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.",
    "tags": "",
    "url": "/checkout-v3/features/optional/tos.html"
  },{
    "title": "TRA Exemption",
    "text": "Transaction Risk Analysis Exemption Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"requestTraExemption\": true, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" \"requireConsumerInfo\": false, \"digitalProducts\": false, \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"authentication\" : { \"type\" : \"Digital\", \"method\" : \"OneFactor\", \"nationalIdentityCardType\": null, \"reference\" : null }, \"shippingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"billingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"accountInfo\": { \"accountAgeIndicator\": \"01\", \"accountChangeIndicator\": \"01\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", \"addressMatchIndicator\": true } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameindicator\": \"01\", \"preOrderDate\": \"20210220\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Company Megashop Sarpsborg\", \"streetAddress\": \"Hundskinnveien 92\", \"coAddress\": \"\", \"city\": \"Sarpsborg\", \"zipCode\": \"1711\", \"countryCode\": \"NO\" }, \"items\": [ { \"gpcNumber\": 11220000, \"amount\": 5000 }, { \"gpcNumber\": 12340000, \"amount\": 3000 } ] } } } Show fields Hide fields Field Type Description   check paymentOrder object The relative URL and unique identifier of the paymentorder resource this payer belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check productName string Used to tag the payment as CDigital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check requestTraExemption bool Set to true if the merchant requests a TRA exemption. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer object The payer object.   nationalIdentifier object The national identifier object.   socialSecurityNumber string The payer’s social security number.   countryCode string The country code of the payer.   requireConsumerInfo bool Set to true if the merchant wants to receive profile information from Swedbank Pay. Applicable for when the merchant only needs email and/or msisdn for digital goods, or when the full shipping address is necessary. If set to false, Swedbank Pay will depend on the merchant to send email and/or msisdn for digital products and shipping address for physical orders.   digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.   email string Payer’s registered email address.   msisdn string Payer’s registered mobile phone number.   authentication object The authentication object related to the payer.   type string Set to Physical or Digital, depending on how the authentication was done.   method string Indicator of the authentication method. Set to OneFactor, MultiFactor, BankId, nationalIdentityCard or RecurringToken.   nationalIdentityCardType string Form of identity card used for the authentication. Set to Passport, DriversLicense or BankCard.   reference string Used if the authentication method has an associated reference. Use the passport number for Passport authentications, session numbers for BankID sessions etc.   shippingAddress object The shipping address object related to the payer.   firstName string The first name of the addressee – the receiver of the shipped goods.   lastName string The last name of the addressee – the receiver of the shipped goods.   email string Payer’s registered email address.   msisdn string Payer’s registered mobile phone number.   streetAddress string Payer’s street address. Maximum 50 characters long.   coAddress string Payer’s c/o address, if applicable.   city string Payer’s city of residence.   zipCode string Payer’s zip code.   countryCode string Country code for the payer’s country of residence.   billingAddress object The billing address object related to the payer.   firstName string The first name of the addressee – the receiver of the shipped goods.   lastName string The last name of the addressee – the receiver of the shipped goods.   email string Payer’s registered email address.   msisdn string Payer’s registered mobile phone number.   streetAddress string Payer’s street address. Maximum 50 characters long.   coAddress string Payer’s c/o address, if applicable.   city string Payer’s city of residence.   zipCode string Payer’s zip code.   countryCode string Country code for the payer’s country of residence.   accountInfo object Object related to the payer containing info about the payer’s account.   accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)   accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)   shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)   suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   addressMatchIndicator bool Allows the antifraud system to indicate if the payer’s billing and shipping address are the same.   orderItems object The object containing items being purchased with the order, and info about them. If you have GPC codes for the items and add them here, you won’t have to include the items at the bottom of the code example. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, DISCOUNT, VALUE_CODE, or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, such as a product page   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   riskIndicator object This object consists of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery (see shipIndicator below), the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping).   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD.   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability).   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in the riskIndicator.pickUpAddress and payer.shippingAddress fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object Object related to the riskIndicator, containing info about the merchant’s pick-up address. If the shipIndicator is set to 04, this should be filled out with the merchant’s pick-up address. Do not use if the shipment is sent or delivered to a consumer address (ShipIndicator 01, 02 or 03). In those cases, the shipping address in the Payer field should be used instead.   pickUpAddress.Name string The name of the shop or merchant.   pickUpAddress.streetAddress string The shop or merchant’s street address. Maximum 50 characters long.   pickUpAddress.coAddress string The shop or merchant’s c/o address, if applicable.   pickUpAddress.City string The city where the shop or merchant is located.   pickUpAddress.zipCode string The zip code where the shop or merchant is located.   pickUpAddress.countryCode string The country code where the shop or merchant is located.   items object Object related to the riskIndicator, containing info about the items ordered. Should be added if the GPC codes for the items are available. If the orderItems object is used and includes the GPC codes, there is no need to add this field. Should only be used by merchants who don’t use the orderItems object.   gpcNumber string The specific GPC Number for the order line.   amount string The amount of the specific order line.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/tra.html"
  },{
    "title": "TRA Exemption",
    "text": "Transaction Risk Analysis Exemption Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"sv-SE\", \"requestTraExemption\": true, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"nationalIdentifier\": { \"socialSecurityNumber\": \"199710202392\", \"countryCode\": \"SE\" \"requireConsumerInfo\": false, \"digitalProducts\": false, \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"authentication\" : { \"type\" : \"Digital\", \"method\" : \"OneFactor\", \"nationalIdentityCardType\": null, \"reference\" : null }, \"shippingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"billingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, \"accountInfo\": { \"accountAgeIndicator\": \"01\", \"accountChangeIndicator\": \"01\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", \"addressMatchIndicator\": true } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 }, { \"reference\": \"I1\", \"name\": \"InvoiceFee\", \"type\": \"PAYMENT_FEE\", \"class\": \"Fees\", \"description\": \"Fee for paying with Invoice\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 1900, \"vatPercent\": 0, \"amount\": 1900, \"vatAmount\": 0, \"restrictedToInstruments\": [ \"Invoice-PayExFinancingSe\" ] } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameindicator\": \"01\", \"preOrderDate\": \"20210220\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Company Megashop Sarpsborg\", \"streetAddress\": \"Hundskinnveien 92\", \"coAddress\": \"\", \"city\": \"Sarpsborg\", \"zipCode\": \"1711\", \"countryCode\": \"NO\" }, \"items\": [ { \"gpcNumber\": 11220000, \"amount\": 5000 }, { \"gpcNumber\": 12340000, \"amount\": 3000 } ] } } } Show fields Hide fields Field Type Description   check paymentOrder object The relative URL and unique identifier of the paymentorder resource this payer belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. check operation string Determines the initial operation, defining the type of payment order created. check currency string The currency of the payment. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string The language of the payer. check productName string Used to tag the payment as CDigital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check requestTraExemption bool Set to true if the merchant requests a TRA exemption. check urls object The urls object, containing the URLs relevant for the payment order. check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string The ID of the payee, usually the merchant ID. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   payeeName string The name of the payee, usually the name of the merchant.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer object The payer object.   nationalIdentifier object The national identifier object.   socialSecurityNumber string The payer’s social security number.   countryCode string The country code of the payer.   requireConsumerInfo bool Set to true if the merchant wants to receive profile information from Swedbank Pay. Applicable for when the merchant only needs email and/or msisdn for digital goods, or when the full shipping address is necessary. If set to false, Swedbank Pay will depend on the merchant to send email and/or msisdn for digital products and shipping address for physical orders.   digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.   email string Payer’s registered email address.   msisdn string Payer’s registered mobile phone number.   authentication object The authentication object related to the payer.   type string Set to Physical or Digital, depending on how the authentication was done.   method string Indicator of the authentication method. Set to OneFactor, MultiFactor, BankId, nationalIdentityCard or RecurringToken.   nationalIdentityCardType string Form of identity card used for the authentication. Set to Passport, DriversLicense or BankCard.   reference string Used if the authentication method has an associated reference. Use the passport number for Passport authentications, session numbers for BankID sessions etc.   shippingAddress object The shipping address object related to the payer.   firstName string The first name of the addressee – the receiver of the shipped goods.   lastName string The last name of the addressee – the receiver of the shipped goods.   email string Payer’s registered email address.   msisdn string Payer’s registered mobile phone number.   streetAddress string Payer’s street address. Maximum 50 characters long.   coAddress string Payer’s c/o address, if applicable.   city string Payer’s city of residence.   zipCode string Payer’s zip code.   countryCode string Country code for the payer’s country of residence.   billingAddress object The billing address object related to the payer.   firstName string The first name of the addressee – the receiver of the shipped goods.   lastName string The last name of the addressee – the receiver of the shipped goods.   email string Payer’s registered email address.   msisdn string Payer’s registered mobile phone number.   streetAddress string Payer’s street address. Maximum 50 characters long.   coAddress string Payer’s c/o address, if applicable.   city string Payer’s city of residence.   zipCode string Payer’s zip code.   countryCode string Country code for the payer’s country of residence.   accountInfo object Object related to the payer containing info about the payer’s account.   accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)   accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)   shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)   shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)   suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   addressMatchIndicator bool Allows the antifraud system to indicate if the payer’s billing and shipping address are the same.   orderItems object The object containing items being purchased with the order, and info about them. If you have GPC codes for the items and add them here, you won’t have to include the items at the bottom of the code example. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, DISCOUNT, VALUE_CODE, or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, such as a product page   imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   riskIndicator object This object consists of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery (see shipIndicator below), the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping).   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD.   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability).   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in the riskIndicator.pickUpAddress and payer.shippingAddress fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object Object related to the riskIndicator, containing info about the merchant’s pick-up address. If the shipIndicator is set to 04, this should be filled out with the merchant’s pick-up address. Do not use if the shipment is sent or delivered to a consumer address (ShipIndicator 01, 02 or 03). In those cases, the shipping address in the Payer field should be used instead.   pickUpAddress.Name string The name of the shop or merchant.   pickUpAddress.streetAddress string The shop or merchant’s street address. Maximum 50 characters long.   pickUpAddress.coAddress string The shop or merchant’s c/o address, if applicable.   pickUpAddress.City string The city where the shop or merchant is located.   pickUpAddress.zipCode string The zip code where the shop or merchant is located.   pickUpAddress.countryCode string The country code where the shop or merchant is located.   items object Object related to the riskIndicator, containing info about the items ordered. Should be added if the GPC codes for the items are available. If the orderItems object is used and includes the GPC codes, there is no need to add this field. Should only be used by merchants who don’t use the orderItems object.   gpcNumber string The specific GPC Number for the order line.   amount string The amount of the specific order line.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/tra.html"
  },{
    "title": "Transaction On File",
    "text": "Transaction On File warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. In rare use cases, it can be necessary for merchants who operate with payment tokens (recurring, one-click, etc) to be able to submit subsequent transactions via file transfer rather than using the regular operations in our API. Reasons for this could be that the subsequent transactions are triggered from an older system which doesn’t support real-time API communication. For those use cases, Swedbank Pay offers a service called Transaction on File. This way of completing transactions is slightly outdated, so we strongly recommend that you consider our regular API operations instead, and only use transaction on file when it is the only option. Do you want to know more about this service? Please contact our integration support. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect their card information. API Requests The API requests are displayed in the flow below. The generated token will be returned in the parameter ‘transactionOnFileToken’. For more information regarding the flow, see Verify. Transaction On File Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Create TransactionOnFileToken\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"generateTransactionOnFileToken\": true, \"urls\": { \"hostUrls\": [\"https://example.com\", \"https://example.net\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", } } } Transaction On File Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/creditcard/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://ecom.externalintegration.payex.com/psp/creditcard/confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\", \"rel\": \"direct-verification\", \"contentType\": \"application/json\" } ] }",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/transaction-on-file.html"
  },{
    "title": "Transaction On File",
    "text": "Transaction On File warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. In rare use cases, it can be necessary for merchants who operate with payment tokens (recurring, one-click, etc) to be able to submit subsequent transactions via file transfer rather than using the regular operations in our API. Reasons for this could be that the subsequent transactions are triggered from an older system which doesn’t support real-time API communication. For those use cases, Swedbank Pay offers a service called Transaction on File. This way of completing transactions is slightly outdated, so we strongly recommend that you consider our regular API operations instead, and only use transaction on file when it is the only option. Do you want to know more about this service? Please contact our integration support. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect their card information. API Requests The API requests are displayed in the flow below. The generated token will be returned in the parameter ‘transactionOnFileToken’. For more information regarding the flow, see Verify. Transaction On File Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 POST /psp/old-implementations/payment-menu-v2/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Create TransactionOnFileToken\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"generateTransactionOnFileToken\": true, \"urls\": { \"hostUrls\": [\"https://example.com\", \"https://example.net\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", } } } Transaction On File Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/old-implementations/payment-menu-v2/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/old-implementations/payment-menu-v2/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" } ] }",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/transaction-on-file.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a swish payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"swishPaymentReference\": \"8D0A30A7804E40479F88FFBA26111F04\", \"swishStatus\": \"PAID\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a swish payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/swish/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/transactions.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a trustly payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Sale\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a trustly payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/trustly/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/transactions.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a invoice payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"receiptReference\": \"AH12355\", \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a invoice payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"receiptReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/invoice/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/transactions.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a creditcard payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a creditcard payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"paymentToken\": \"5a17c24e-d459-4567-bbad-aa0f17a76119\", \"maskedPan\": \"123456xxxxxx1234\", \"expireDate\": \"mm/yyyy\", \"panToken\": \"ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"cardBrand\": \"Visa\", \"cardType\": \"Credit Card\", \"issuingBank\": \"UTL MAESTRO\", \"countryCode\": \"999\", \"acquirerTransactionType\": \"3DSECURE\", \"acquirerStan\": \"39736\", \"acquirerTerminalId\": \"39\", \"acquirerTransactionTime\": \"2017-08-29T13:42:18Z\", \"authenticationStatus\": \"Y\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/creditcard/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   paymentToken string The payment token created for the card used in the authorization.   maskedPan string The masked PAN number of the card.   expireDate string The month and year of when the card expires.   panToken string The token representing the specific PAN of the card.   cardBrand string Visa, MC, etc. The brand of the card.   cardType string Credit Card or Debit Card. Indicates the type of card used for the authorization.   issuingBank string The name of the bank that issued the card used for the authorization.   countryCode string The country the card is issued in.   acquirerTransactionType string 3DSECURE or SSL. Indicates the transaction type of the acquirer.   acquirerStan string The System Trace Audit Number assigned by the acquirer to uniquely identify the transaction.   acquirerTerminalId string The ID of the acquirer terminal.   acquirerTransactionTime string The ISO-8601 date and time of the acquirer transaction.   authenticationStatus string Y, A, U or N. Indicates the status of the authentication.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/transactions.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a mobilepay payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a mobilepay payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/mobilepay/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/transactions.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a vipps payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a vipps payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/vipps/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/transactions.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a old-implementations/checkout-v2 payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a old-implementations/checkout-v2 payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/old-implementations/checkout-v2/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/transactions.html"
  },{
    "title": "Transactions",
    "text": "Transactions A payment contains sub-resources in the form of transactions. Most operations performed on a payment ends up as a transaction resource. The different types of operations that alter the state of the payment by creating a transaction is described below. The transactions resource will list the transactions (one or more) on a specific payment. Transaction List Request Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Transaction List Response The transaction resource contains information about the transaction transaction made against a old-implementations/payment-menu-v2 payment. You can return a specific transaction transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transactions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"transactionList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the transactions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of transaction transaction objects. {{ transaction }}List[] object The transaction transaction object described in the transaction resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Transaction The transaction resource contains the generic details of a transaction on a specific payment. When a transaction is created it will have one of three states: Initialized - if there is some error where the source is undeterminable (network failure, etc), the transaction will remain Initialized. The corresponding state of the payment order will in this case be set to pending. No further transactions can be created. Completed - if everything went ok the transaction will follow through to completion. Failed - if the transaction has failed (i.e. a denial from the acquiring bank) it is possible to retry (i.e the payer tries using another card) up to a maximum amount of retries (in that case which the payment order gets the state failed as well). Request 1 2 3 4 GET /psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Initialized\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"failedReason\": \"\", \"isOperational\": true, \"operations\": [] } } Transaction Problems In the event that a transaction is failed, the transaction response will contain a problem property as seen in the example below. To view all the problems that can occur due to an unsuccessful transaction, head over to the problems section. The created transaction resource contains information about the transaction transaction made against a old-implementations/payment-menu-v2 payment. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"itemDescriptions\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177/itemDescriptions\" }, \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Transaction\", \"state\": \"Failed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"problem\": { \"type\": \"https://api.payex.com/psp/errordetail/old-implementations/payment-menu-v2/3DSECUREERROR\", \"title\": \"Error when complete authorization\", \"status\": 400, \"detail\": \"Unable to complete 3DSecure verification!\", \"problems\": [ ] } } } Show fields Hide fields Field Type Description   paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   itemDescriptions object The object representation of the itemDescriptions resource.   id string The relative URL and unique identifier of the itemDescriptions resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   transaction object The object representation of the generic transaction resource, containing information about the current transaction.   id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution.   created string The ISO-8601 date and time of when the transaction was created.   updated string The ISO-8601 date and time of when the transaction was updated.   type string Indicates the transaction type.   state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial transaction has been done and further transactions are possible, the state will be awaitingActivity.   number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead.   amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   description string A 40 character length textual description of the purchase.   payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference.   failedReason string The human readable explanation of why the payment failed.   isOperational bool true if the transaction is operational; otherwise false.   operations array The array of operations that are possible to perform on the transaction in its current state.  ",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/transactions.html"
  },{
    "title": "Unscheduled Purchase",
    "text": "Unscheduled Purchase warning Please note that this feature is only available through Payment Order, and the service is asynchronous which will require a compatible implementation. Using a similar implementation to Credit Card Recur will therefore not work. An unscheduled purchase, also called a Merchant Initiated Transaction (MIT), is a payment which uses a paymentToken generated through a previous payment in order to charge the same card at a later time. They are done by the merchant without the user being present. To use this, you need to make sure directDebitEnabled is true in the Trustly contract. After that you need to have the field generateUnscheduledToken set to true when creating an initial Purchase or Verify. Another important step is to make sure the email field is set, as this is a required parameter. If the email is missing, Trustly will not be available for selection from the payments menu. If you enable callbackEnabled and send a callbackUrl, you can expect to get a callback when the payment is finised. The alternative is setting up polling to poll for a state. Creating The Payment You need to POST a Purchase payment / and generate an unscheduled token (for later use). As mentioned, the email parameter MUST be set for trustly to appear as an available option You need to POST a Verify payment / and generate an unscheduled token (for later use). As mentioned, the email parameter MUST be set for trustly to appear as an available option Delete Unscheduled Token You can delete a created unscheduled token. Please see technical reference for details here.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/optional/unscheduled-purchase.html"
  },{
    "title": "Unscheduled Purchase",
    "text": "Unscheduled Purchase An unscheduled purchase, also called a Merchant Initiated Transaction (MIT), is a payment which uses a unscheduledToken generated through a previous payment in order to charge the same card at a later time. They are done by the merchant without the cardholder being present. Unscheduled purchases can be used in cases where you have an agreement with your customer which handles both recurring orders and/or singular transactions. Observe - it’s important that the Terms of Service clearly and understandably states how the payment will be done towards your customer. Example use cases are car rental companies charging the payer’s card for toll road expenses after the rental period, or different subscription services and recurring orders where the periodicity and/or amount varies. Please note that you need to do a capture after sending the unscheduled request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the unscheduledToken is generated and connected. You do that by adding the field generateUnscheduledToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. You can also use Verify to activate tokens. (Read more about deleting the unscheduled token here.) Initial Unscheduled Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateUnscheduledToken\": true, \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", // Seamless View only \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" // Redirect only }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\" \"lastName\": \"Ahlström\" \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateUnscheduledToken boolean true or false. Set to true if you want to generate an unscheduledToken for future unscheduled purchases (Merchant Initiated Transactions).   check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.     implementation string Indicates which implementation to use.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.     paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.   check︎︎︎︎ ︎ streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)   check zipCode string The postal number (ZIP code) of the payer.   check city string The city of the payer.   check countryCode string SE, NO, or FI.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Unscheduled Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"implementation\": \"Enterprise\", \"integration\": \"HostedView\", //For Seamless View integrations \"integration\": \"Redirect\", //For Redirect integrations \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token The token can be retrieved by performing a GET towards paid. It will be visible under tokens in the paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json As an alternative, you can also retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Unscheduled Purchase When you are ready to perform the unscheduled purchase, simply add the unscheduledToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Unscheduled Purchase Please remember that the unscheduled request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the unscheduled purchase. You can also Cancel it if needed. Unscheduled Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UnscheduledPurchase\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Unscheduled Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment object. check operation object UnscheduledPurchase. check unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO, da-DK, en-US or fi-FI. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/unscheduled.html"
  },{
    "title": "Unscheduled Purchase",
    "text": "Unscheduled Purchase An unscheduled purchase, also called a Merchant Initiated Transaction (MIT), is a payment which uses a unscheduledToken generated through a previous payment in order to charge the same card at a later time. They are done by the merchant without the cardholder being present. Unscheduled purchases can be used in cases where you have an agreement with your customer which handles both recurring orders and/or singular transactions. Observe - it’s important that the Terms of Service clearly and understandably states how the payment will be done towards your customer. Example use cases are car rental companies charging the payer’s card for toll road expenses after the rental period, or different subscription services and recurring orders where the periodicity and/or amount varies. Please note that you need to do a capture after sending the unscheduled request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the unscheduledToken is generated and connected. You do that by adding the field generateUnscheduledToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. You can also use Verify to activate tokens. (Read more about deleting the unscheduled token here.) Initial Unscheduled Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateUnscheduledToken\": true, \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\", \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", // Seamless View only \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" // Redirect only }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\" \"lastName\": \"Ahlström\" \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateUnscheduledToken boolean true or false. Set to true if you want to generate an unscheduledToken for future unscheduled purchases (Merchant Initiated Transactions).   check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.     implementation string Indicates which implementation to use.   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.     paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.   check︎︎︎︎ ︎ streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)   check zipCode string The postal number (ZIP code) of the payer.   check city string The city of the payer.   check countryCode string SE, NO, or FI.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Unscheduled Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"status\": \"Initialized\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"integration\": \"HostedView\", //For Seamless View integrations \"integration\": \"Redirect\", //For Redirect integrations \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" }, \"history\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/history\" }, \"failed\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failed\" }, \"aborted\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/aborted\" }, \"paid\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/paid\" }, \"cancelled\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/cancelled\" }, \"financialTransactions\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/financialtransactions\" }, \"failedAttempts\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/failedattempts\" }, \"metadata\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/metadata\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase status string Indicates the payment order’s current status. Initialized is returned when the payment is created and still ongoing. The request example above has this status. Paid is returned when the payer has completed the payment successfully. See the Paid response. Failed is returned when a payment has failed. You will find an error message in the Failed response. Cancelled is returned when an authorized amount has been fully cancelled. See the Cancelled response. It will contain fields from both the cancelled description and paid section. Aborted is returned when the merchant has aborted the payment, or if the payer cancelled the payment in the redirect integration (on the redirect page). See the Aborted response. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. availableInstruments string A list of instruments available for this payment. implementation string The merchant’s Digital Payments implementation type. Enterprise or PaymentsOnly. We ask that you don’t build logic around this field’s response. It is mainly for information purposes, as the implementation types might be subject to name changes. If this should happen, updated information will be available in this table. integration string The merchant’s Digital Payments integration type. HostedView (Seamless View) or Redirect. This field will not be populated until the payer has opened the payment UI, and the client script has identified if Swedbank Pay or another URI is hosting the container with the payment iframe. We ask that you don’t build logic around this field’s response. It is mainly for information purposes. as the integration types might be subject to name changes, If this should happen, updated information will be available in this table. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. history string The URL to the history resource where information about the payment’s history can be retrieved. failed string The URL to the failed resource where information about the failed transactions can be retrieved. aborted string The URL to the aborted resource where information about the aborted transactions can be retrieved. paid string The URL to the paid resource where information about the paid transactions can be retrieved. cancelled string The URL to the cancelled resource where information about the cancelled transactions can be retrieved. financialTransactions string The URL to the financialTransactions resource where information about the financial transactions can be retrieved. failedAttempts string The URL to the failedAttempts resource where information about the failed attempts can be retrieved. metadata string The URL to the metadata resource where information about the metadata can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token The token can be retrieved by performing a GET towards paid. It will be visible under tokens in the paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json As an alternative, you can also retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Unscheduled Purchase When you are ready to perform the unscheduled purchase, simply add the unscheduledToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Unscheduled Purchase Please remember that the unscheduled request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the unscheduled purchase. You can also Cancel it if needed. Unscheduled Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UnscheduledPurchase\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Unscheduled Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment object. check operation object UnscheduledPurchase. check unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US. check productName string Used to tag the payment as Digital Payments. Mandatory for Digital Payments, as you won’t get the operations in the response without submitting this field.   implementation string Indicates which implementation to use. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   siteId string(15) siteId is used for split settlement transactions when you, as a merchant, need to specify towards AMEX which sub-merchant the transaction belongs to. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/checkout-v3/features/optional/unscheduled.html"
  },{
    "title": "Unscheduled Purchase",
    "text": "Unscheduled Purchase warning This feature is only available for merchants who have a specific agreement with Swedbank Pay. An unscheduled purchase, also called a Merchant Initiated Transaction (MIT), is a payment which uses a paymentToken generated through a previous payment in order to charge the same card at a later time. They are done by the merchant without the cardholder being present. Unscheduled purchases can be used in cases where you have an agreement with your customer which handles both recurring orders and/or singular transactions. Observe - it’s important that the Terms of Service clearly and understandably states how the payment will be done towards your customer. Example use cases are car rental companies charging the payer’s card for toll road expenses after the rental period, or different subscription services and recurring orders where the periodicity and/or amount varies. Please note that you need to do a capture after sending the unscheduled request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the unscheduledToken is generated and connected. You do that by adding the field generateUnscheduledToken in the request and set the value to true. The payer must complete the purchase to activate the token. You can also use Verify to activate tokens. (Read more about deleting the unscheduled token here.) Initial Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 POST /psp/creditcard/payments HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"prices\": [{ \"type\": \"CreditCard\", \"amount\": 1500, \"vatAmount\": 0 } ], \"description\": \"Test Purchase\", \"generatePaymentToken\": true, \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\", }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or123\", \"subsite\": \"mySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", }, \"cardholder\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"homePhoneNumber\": \"+4787654321\", \"workPhoneNumber\": \"+4776543210\", \"shippingAddress\": { \"firstName\": \"Olivia\", \"lastName\": \"Nyhuus\", \"email\": \"olivia.nyhuus@payex.com\", \"msisdn\": \"+4798765432\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" }, }, \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhuus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description check payment object The payment object check operation string Determines the initial operation, defining the type of payment order created. check intent string Authorization. Reserves the amount, and is followed by a Cancel or Capture of funds. AutoCapture. A one phase option that enables the Capture of funds automatically after authorization. check currency string NOK, SEK, DKK, USD or EUR. check prices array The prices resource lists the prices related to a specific payment. check type string Use the value ``.See the prices resource for more information. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase.   generatePaymentToken boolean true or false. Set to true if you want to generate a paymentToken for future unscheduled purchases (Merchant Initiated Transactions). check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. check︎ urls object The object containing URLs relevant for the payment. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   cardholder object Optional. Cardholder object that can hold information about a buyer (private or company). The information added increases the chance for frictionless flow and is related to 3-D Secure 2.0..   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   homePhoneNumber string Optional (increased chance for frictionless flow if set)   workPhoneNumber string Optional (increased chance for frictionless flow if set)   shippingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set)   lastName string Optional (increased chance for frictionless flow if set)   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   billingAddress object Optional (increased chance for frictionless flow if set)   firstName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   lastName string Optional (increased chance for frictionless flow if set). If buyer is a company, use only firstName.   email string Optional (increased chance for frictionless flow if set)   msisdn string Optional (increased chance for frictionless flow if set)   streetAddress string Optional (increased chance for frictionless flow if set)   coAddress string Optional (increased chance for frictionless flow if set)   city string Optional (increased chance for frictionless flow if set)   zipCode string Optional (increased chance for frictionless flow if set)   countryCode string Optional (increased chance for frictionless flow if set)   riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.   deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.   deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)   preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD   preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)   shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)   giftCardPurchase bool true if this is a purchase of a gift card.   reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).   pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.   name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.   streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.   coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.   city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.   zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.   countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase. Initial Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"instrument\": \"CreditCard\", \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"SEK\", \"amount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"paymentToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"rel\": \"update-payment-abort\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"rel\": \"redirect-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/payments/authorize/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"text/html\" }, { \"rel\": \"view-authorization\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"view-payment\", \"href\": \"https://ecom.externalintegration.payex.com/creditcard/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"method\": \"GET\", \"contentType\": \"application/javascript\" }, { \"rel\": \"direct-authorization\", \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\", \"method\": \"POST\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. instrument string The payment instrument used in the payment. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. operation string Purchase intent string Authorization currency string NOK, SEK, DKK, USD or EUR. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. paymentToken string The generated payment token, if operation: Verify, operation: UnscheduledPurchase or generatePaymentToken: true was used. prices string The URL to the prices resource where all URLs related to the payment can be retrieved. transactions string The URL to the transactions resource where the information about the payer can be retrieved. authorizations string The URL to the authorizations resource where the information about the payer can be retrieved. captures string The URL to the captures resource where the information about the payer can be retrieved. reversals string The URL to the reversals resource where the information about the payer can be retrieved. cancellations string The URL to the cancellations resource where the information about the payer can be retrieved. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. settings string The URL to the settings resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. GET The Token You can retrieve the token by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/creditcard/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/?$expand=paid HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Unscheduled Purchase When you are ready to perform the unscheduled purchase, simply add the unscheduledToken field and use the token as the value. Your request should look like this: Unscheduled Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"UnscheduledPurchase\", \"intent\": \"Authorization\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Unscheduled\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://example.com/payment-callback\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.pdf\", }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\" }, \"payer\": { \"payerReference\": \"AB1234\", } } } Show fields Hide fields Required Field Type Description check payment object The payment object check operation string For unscheduled purchases, this needs to be unscheduledPurchase. check intent string Authorization. check unscheduledToken string The unscheduledToken generated in the initial purchase, if operation: Verify or generateUnscheduledToken: true was used. check currency string NOK, SEK, DKK, USD or EUR. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string(40) A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO, da-DK, de-DE, ee-EE, en-US, es-ES, fr-FR, lv-LV, lt-LT, ru-RU or fi-FI. check︎ urls object The object containing URLs relevant for the payment. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. check cancelUrl string The URL to redirect the payer to if the payment is cancelled. Only used in redirect scenarios. Can not be used simultaneously with paymentUrl; only cancelUrl or paymentUrl can be used, not both.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details.   logoUrl string The URL that will be used for showing the customer logo. Must be a picture with maximum 50px height and 400px width. Requires HTTPS.   termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits.   payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay.   productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.   orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.   subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true. Unscheduled Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/5adc265f-f87f-4313-577e-08d3dca1a26c\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"state\": \"Ready\", \"operation\": \"Purchase\", \"intent\": \"Authorization\", \"currency\": \"NOK\", \"amount\": 1500, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Unscheduled\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"prices\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/prices\" }, \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"authorizations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/authorizations\" }, \"captures\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures\" }, \"reversals\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/reversals\" }, \"cancellations\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/cancellations\" }, \"urls\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" } } } See the table in the initial purchase response for descriptions. Capture The capture transaction is where you ensure that the funds are charged from the payer. This step usually takes place when the product has exchanged possession. You must first do a GET request on the payment to find the create-capture operation. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. Create Capture Transaction To create a capture transaction to withdraw money from the payer’s card, you need to perform the create-capture operation. Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 POST /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\" } } Required Field Type Description check transaction object The object representation of the generic transaction resource, containing information about the current transaction. check amount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check vatAmount integer Amount Entered in the lowest momentary units of the selected currency. E.g. 10000 100.00 NOK, 5000 50.00 SEK. check description string A textual description of the capture transaction. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. Capture Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1500, \"vatAmount\": 250, \"description\": \"Test Capture\", \"payeeReference\": \"ABC123\", \"isOperational\": false, \"operations\": [] } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture resource contains information about the capture transaction made against a card payment. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer Amount is entered in the lowest momentary units of the selected currency. E.g. 10000 = 100.00 NOK, 5000 = 50.00 SEK. vatAmount integer If the amount given includes VAT, this may be displayed for the user in the payment page (redirect only). Set to 0 (zero) if this is not relevant. description string A human readable description of maximum 40 characters of the transaction payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. failedReason string The human readable explanation of why the payment failed. isOperational boolean true if the transaction is operational; otherwise false . operations array The array of operations that are possible to perform on the transaction in its current state. List Capture Transactions The captures resource list the capture transactions (one or more) on a specific payment. Request 1 2 3 4 GET /psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json The capture resource contains information about the capture transaction made against a creditcard payment. You can return a specific capture transaction by performing a GET request towards the specific transaction’s id. Transaction List Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"captures\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment\", \"captureList\": [{ \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/paymentorders/7e6cdfc3-1276-44e9-9992-7cf4419750e1/currentpayment/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2016-09-14T01:01:01.01Z\", \"updated\": \"2016-09-14T01:01:01.03Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"number\": 1234567890, \"amount\": 1000, \"vatAmount\": 250, \"description\": \"Test transaction\", \"payeeReference\": \"AH123456\", \"isOperational\": false, \"operations\": [] } }] } } Show fields Hide fields Field Type Required paymentOrder string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. id string The relative URL and unique identifier of the captures resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. {{ transaction }}List array The array of capture transaction objects. {{ transaction }}List[] object The capture transaction object described in the capture resource below. id string The relative URL and unique identifier of the transaction resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial capture has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(50). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. isOperational bool true if the transaction is operational; otherwise false. operations array The array of operations that are possible to perform on the transaction in its current state. Capture Sequence Diagram Capture can only be done on an authorized transaction. It is possible to do a partial capture where you only capture a part of the authorized amount. You can do more captures on the same payment up to the total authorization amount later. sequenceDiagram activate Merchant Merchant-&gt;&gt;-SwedbankPay: POST [ captures] activate SwedbankPay SwedbankPay--&gt;&gt;-Merchant: transaction resource",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/unscheduled.html"
  },{
    "title": "Unscheduled Purchase",
    "text": "Unscheduled Purchase An unscheduled purchase, also called a Merchant Initiated Transaction (MIT), is a payment which uses a unscheduledToken generated through a previous payment in order to charge the same card at a later time. They are done by the merchant without the cardholder being present. Unscheduled purchases can be used in cases where you have an agreement with your customer which handles both recurring orders and/or singular transactions. Observe - it’s important that the Terms of Service clearly and understandably states how the payment will be done towards your customer. Example use cases are car rental companies charging the payer’s card for toll road expenses after the rental period, or different subscription services and recurring orders where the periodicity and/or amount varies. Please note that you need to do a capture after sending the unscheduled request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the unscheduledToken is generated and connected. You do that by adding the field generateUnscheduledToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. You can also use Verify to activate tokens. (Read more about deleting the unscheduled token here.) Initial Unscheduled Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateUnscheduledToken\": true, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", // Seamless View only \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" // Redirect only }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\" \"lastName\": \"Ahlström\" \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateUnscheduledToken boolean true or false. Set to true if you want to generate an unscheduledToken for future unscheduled purchases (Merchant Initiated Transactions).   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.     paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.   check︎︎︎︎ ︎ streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)   check zipCode string The postal number (ZIP code) of the payer.   check city string The city of the payer.   check countryCode string SE, NO, or FI.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Unscheduled Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"integration\": \"HostedView\", //For Seamless View integrations \"integration\": \"Redirect\", //For Redirect integrations \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. availableInstruments string A list of instruments available for this payment. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token You can retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Unscheduled Purchase When you are ready to perform the unscheduled purchase, simply add the unscheduledToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Unscheduled Purchase Please remember that the unscheduled request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the unscheduled purchase. You can also Cancel it if needed. Unscheduled Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UnscheduledPurchase\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Unscheduled Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment object. check operation object UnscheduledPurchase. check unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US.   implementation string Indicates which implementation to use. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Step 5: Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform create-paymentorder-capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:create-paymentorder-capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/unscheduled.html"
  },{
    "title": "Unscheduled Purchase",
    "text": "Unscheduled Purchase An unscheduled purchase, also called a Merchant Initiated Transaction (MIT), is a payment which uses a unscheduledToken generated through a previous payment in order to charge the same card at a later time. They are done by the merchant without the cardholder being present. Unscheduled purchases can be used in cases where you have an agreement with your customer which handles both recurring orders and/or singular transactions. Observe - it’s important that the Terms of Service clearly and understandably states how the payment will be done towards your customer. Example use cases are car rental companies charging the payer’s card for toll road expenses after the rental period, or different subscription services and recurring orders where the periodicity and/or amount varies. Please note that you need to do a capture after sending the unscheduled request. We have added a capture section at the end of this page for that reason. Generating The Token First, you need an initial transaction where the unscheduledToken is generated and connected. You do that by adding the field generateUnscheduledToken in the PaymentOrder request and set the value to true. The payer must complete the purchase to activate the token. You can also use Verify to activate tokens. (Read more about deleting the unscheduled token here.) Initial Unscheduled Request The initial request should look like this: Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Purchase\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"sv-SE\", \"generateUnscheduledToken\": true, \"urls\": { \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"paymentUrl\": \"https://example.com/perform-payment\", // Seamless View only \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"callbackUrl\": \"https://api.example.com/payment-callback\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\", \"logoUrl\": \"https://example.com/logo.png\" // Redirect only }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"AB832\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-123456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"digitalProducts\": false, \"firstName\": \"Leia\" \"lastName\": \"Ahlström\" \"email\": \"leia@payex.com\", \"msisdn\": \"+46787654321\", \"payerReference\": \"AB1234\", \"shippingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"billingAddress\": { \"firstName\": \"firstname/companyname\", \"lastName\": \"lastname\", \"email\": \"karl.anderssson@mail.se\", \"msisdn\": \"+46759123456\", \"streetAddress\": \"string\", \"coAddress\": \"string\", \"city\": \"Solna\", \"zipCode\": \"17674\", \"countryCode\": \"SE\" }, \"accountInfo\": { \"accountAgeIndicator\": \"04\", \"accountChangeIndicator\": \"04\", \"accountPwdChangeIndicator\": \"01\", \"shippingAddressUsageIndicator\": \"01\", \"shippingNameIndicator\": \"01\", \"suspiciousAccountActivity\": \"01\", } }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 5, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 0, \"vatPercent\": 2500, \"amount\": 1500, \"vatAmount\": 375 } ], \"riskIndicator\": { \"deliveryEmailAddress\": \"olivia.nyhuus@payex.com\", \"deliveryTimeFrameIndicator\": \"01\", \"preOrderDate\": \"19801231\", \"preOrderPurchaseIndicator\": \"01\", \"shipIndicator\": \"01\", \"giftCardPurchase\": false, \"reOrderPurchaseIndicator\": \"01\", \"pickUpAddress\": { \"name\": \"Olivia Nyhus\", \"streetAddress\": \"Saltnestoppen 43\", \"coAddress\": \"\", \"city\": \"Saltnes\", \"zipCode\": \"1642\", \"countryCode\": \"NO\" } } } } Show fields Hide fields Required Field Type Description   check paymentOrder object The payment order object.   check operation string Determines the initial operation, defining the type of payment order created.   check currency string The currency of the payment.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   check description string The description of the payment order.   check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser.   check language string The language of the payer.     generateUnscheduledToken boolean true or false. Set to true if you want to generate an unscheduledToken for future unscheduled purchases (Merchant Initiated Transactions).   check urls object The urls object, containing the URLs relevant for the payment order.   check hostUrls array The array of URLs valid for embedding of Swedbank Pay Seamless Views.     paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment order to inspect it further. See completeUrl for details.     cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.   check logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo.   check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details.   check payeeId string The ID of the payee, usually the merchant ID.   check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.     payeeName string The name of the payee, usually the name of the merchant.     productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process.     orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems.     subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.     payer object The payer object containing information about the payer relevant for the payment order.     digitalProducts bool Set to true for merchants who only sell digital goods and only require email and/or msisdn as shipping details. Set to false if the merchant also sells physical goods.     firstName string The first name of the payer.     lastName string The last name of the payer.     email string The e-mail address of the payer. Will be used to prefill the Checkin as well as on the payer’s profile, if not already set. Increases the chance for frictionless 3-D Secure 2 flow.     msisdn string The mobile phone number of the Payer. Will be prefilled on Checkin page and used on the payer’s profile, if not already set. The mobile number must have a country code prefix and be 8 to 15 digits in length. The field is related to 3-D Secure 2.     shippingAddress object The shipping address object related to the payer. The field is related to 3-D Secure 2.     firstName string The first name of the addressee – the receiver of the shipped goods.     lastName string The last name of the addressee – the receiver of the shipped goods.     streetAddress string Payer’s street address. Maximum 50 characters long.     coAddress string Payer’ s c/o address, if applicable.     zipCode string Payer’s zip code     city string Payer’s city of residence.     countryCode string Country code for country of residence.   check billingAddress object The billing address object containing information about the payer’s billing address.     firstName string The first name of the payer.     lastName string The last name of the payer.   check︎︎︎︎ ︎ streetAddress string The street address of the payer. Maximum 50 characters long.     coAddress string The CO-address (if used)   check zipCode string The postal number (ZIP code) of the payer.   check city string The city of the payer.   check countryCode string SE, NO, or FI.     accountInfo object Object related to the payer containing info about the payer’s account.     accountAgeIndicator string Indicates the age of the payer’s account. 01 (No account, guest checkout) 02 (Created during this transaction) 03 (Less than 30 days old) 04 (30 to 60 days old) 05 (More than 60 days old)     accountChangeIndicator string Indicates when the last account changes occurred. 01 (Changed during this transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     accountChangePwdIndicator string Indicates when the account’s password was last changed. 01 (No changes) 02 (Changed during this transaction) 03 (Less than 30 days ago) 04 (30 to 60 days ago) 05 (More than 60 days old)     shippingAddressUsageIndicator string Indicates when the payer’s shipping address was last used. 01(This transaction) 02 (Less than 30 days ago) 03 (30 to 60 days ago) 04 (More than 60 days ago)     shippingNameIndicator string Indicates if the account name matches the shipping name. 01 (Account name identical to shipping name) 02 (Account name different from shipping name)     suspiciousAccountActivity string Indicates if there have been any suspicious activities linked to this account. 01 (No suspicious activity has been observed) 02 (Suspicious activity has been observed)   check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order.   check reference string A reference that identifies the order item.   check name string The name of the order item.   check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below.   check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.     itemUrl string The URL to a page that can display the purchased item, product or similar.   ︎︎︎ imageUrl string The URL to an image of the order item.     description string A 40 character length textual description of the purchase.     discountDescription string The human readable description of the possible discount.   check quantity number The 4 decimal precision quantity of order items being purchased.   check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping.   check unitPrice integer The price per unit of order item, including VAT.     discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT.   check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500.   check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK.   check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.     restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts.     riskIndicator array This optional object consist of information that helps verifying the payer. Providing these fields decreases the likelihood of having to prompt for 3-D Secure 2.0 authentication of the payer when they are authenticating the purchase.     deliveryEmailAdress string For electronic delivery, the email address to which the merchandise was delivered. Providing this field when appropriate decreases the likelihood of a 3-D Secure authentication for the payer.     deliveryTimeFrameIndicator string Indicates the merchandise delivery timeframe. 01 (Electronic Delivery) 02 (Same day shipping) 03 (Overnight shipping) 04 (Two-day or more shipping)     preOrderDate string For a pre-ordered purchase. The expected date that the merchandise will be available. Format: YYYYMMDD     preOrderPurchaseIndicator string Indicates whether the payer is placing an order for merchandise with a future availability or release date. 01 (Merchandise available) 02 (Future availability)     shipIndicator string Indicates shipping method chosen for the transaction. 01 (Ship to cardholder’s billing address) 02 (Ship to another verified address on file with merchant)03 (Ship to address that is different than cardholder’s billing address)04 (Ship to Store / Pick-up at local store. Store address shall be populated in shipping address fields)05 (Digital goods, includes online services, electronic giftcards and redemption codes) 06 (Travel and Event tickets, not shipped) 07 (Other, e.g. gaming, digital service)     giftCardPurchase bool true if this is a purchase of a gift card.     reOrderPurchaseIndicator string Indicates whether the cardholder is reordering previously purchased merchandise. 01 (First time ordered) 02 (Reordered).     pickUpAddress object If shipIndicator set to 04, then prefill this with the payers pickUpAddress of the purchase to decrease the risk factor of the purchase.     name string If shipIndicator set to 04, then prefill this with the payers name of the purchase to decrease the risk factor of the purchase.     streetAddress string If shipIndicator set to 04, then prefill this with the payers streetAddress of the purchase to decrease the risk factor of the purchase. Maximum 50 characters long.     coAddress string If shipIndicator set to 04, then prefill this with the payers coAddress of the purchase to decrease the risk factor of the purchase.     city string If shipIndicator set to 04, then prefill this with the payers city of the purchase to decrease the risk factor of the purchase.     zipCode string If shipIndicator set to 04, then prefill this with the payers zipCode of the purchase to decrease the risk factor of the purchase.     countryCode string If shipIndicator set to 04, then prefill this with the payers countryCode of the purchase to decrease the risk factor of the purchase.   Initial Unscheduled Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"language\": \"sv-SE\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"availableInstruments\": [ \"CreditCard\", \"Invoice-PayExFinancingSe\", \"Invoice-PayMonthlyInvoiceSe\", \"Swish\", \"CreditAccount\", \"Trustly\" ], \"integration\": \"HostedView\", //For Seamless View integrations \"integration\": \"Redirect\", //For Redirect integrations \"instrumentMode\": false, \"guestMode\": false, \"payer\": { \"id\": \"/psp/paymentorders/8be318c1-1caa-4db1-e2c6-08d7bf41224d/payers\" }, \"orderItems\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderitems\" } }, \"operations\": [ { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\":\"update-order\", \"method\":\"PATCH\", \"contentType\":\"application/json\" }, { \"href\": \"https://api.payex.com/psp/paymentorders/222a50ca-b268-4b32-16fa-08d6d3b73224\", \"rel\": \"abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" } ] } Show fields Hide fields Field Type Description paymentOrder object The payment order object. id string The relative URL and unique identifier of the paymentorder resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. created string The ISO-8601 date of when the payment order was created. updated string The ISO-8601 date of when the payment order was updated. operation string Purchase state string Ready, Pending, Failed or Aborted. Indicates the state of the payment order. Does not reflect the state of any ongoing payments initiated from the payment order. This field is only for status display purposes. currency string The currency of the payment order. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string(40) A 40 character length textual description of the purchase. initiatingSystemUserAgent string The user agent of the HTTP client making the request, reflecting the value sent in the User-Agent header with the initial POST request which created the Payment Order. language string sv-SE, nb-NO or en-US. unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. availableInstruments string A list of instruments available for this payment. instrumentMode bool Set to true or false. Indicates if the payment is initialized with only one payment instrument available. guestMode bool Set to true or false. Indicates if the payer chose to pay as a guest or not. When using the Payments Only implementation, this is triggered by not including a payerReference in the original paymentOrder request. payer string The URL to the payer resource where information about the payer can be retrieved. orderItems string The URL to the orderItems resource where information about the order items can be retrieved. operations array The array of operations that are possible to perform on the payment order in its current state. GET The Token You can retrieve it by using the expand option when you GET your payment. The GET request should look like the one below, with a ?$expand=paid after the paymentOrderId. The response should match the initial payment response, but with an expanded paid field. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Performing The Unscheduled Purchase When you are ready to perform the unscheduled purchase, simply add the unscheduledToken field to the paymentOrder request and use the token as the value. Your request should look like the example below, and the response will match the paymentOrder response from the initial purchase. After The Unscheduled Purchase Please remember that the unscheduled request will reserve the amount, but not charge it. You will (i.e. when you are ready to ship purchased physical products) have to perform a Capture request later on to complete the unscheduled purchase. You can also Cancel it if needed. Unscheduled Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UnscheduledPurchase\", \"unscheduledToken\": \"7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"currency\": \"NOK\", \"amount\": 1500, \"vatAmount\": 0, \"description\": \"Test Unscheduled Purchase\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\": { \"callbackUrl\": \"https://example.com/payment-callback\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\" \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", }, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment object. check operation object UnscheduledPurchase. check unscheduledToken string The generated unscheduledToken, if operation: Verify, operation: UnscheduledPurchase or generateUnscheduledToken: true was used. check currency string The currency of the payment order. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string A 40 character length textual description of the purchase. check userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. check language string sv-SE, nb-NO or en-US.   implementation string Indicates which implementation to use. check urls string The URL to the urls resource where all URLs related to the payment order can be retrieved. check callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details. check payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. check payeeId string This is the unique id that identifies this payee (like merchant) set by Swedbank Pay. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check payeeName string The payee name (like merchant name) that will be displayed when redirected to Swedbank Pay. check productCategory string A product category or number sent in from the payee/merchant. This is not validated by Swedbank Pay, but will be passed through the payment process and may be used in the settlement process. check orderReference string(50) The order reference should reflect the order reference found in the merchant’s systems. check subsite string(40) The subsite field can be used to perform split settlement on the payment. The different subsite values must be resolved with Swedbank Pay reconciliation before being used. If you send in an unknown subsite value, it will be ignored and the payment will be settled using the merchant’s default settlement account. Must be in the format of A-Za-z0-9.   payer string The payer object, containing information about the payer.   payerReference string The reference to the payer from the merchant system, like e-mail address, mobile number, customer number etc. Also used in Payer Aware Payment Menu. Mandatory if generateRecurrenceToken, RecurrenceToken, generatePaymentToken or paymentToken is true.   metadata object A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type string PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE DISCOUNT, VALUE_CODE or OTHER. The type of the order item. PAYMENT_FEE is the amount you are charged with when you are paying with invoice. The amount can be defined in the amount field below. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string A 40 character length textual description of the purchase.   discountDescription string The human readable description of the possible discount. check quantity integer The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged.   restrictedToInstruments array A list of the instruments you wish to restrict the payment to. Currently Invoice only. Invoice supports the subtypes PayExFinancingNo, PayExFinancingSe and PayMonthlyInvoiceSe, separated by a dash, e.g.; Invoice-PayExFinancingNo. Default value is all supported payment instruments. Use of this field requires an agreement with Swedbank Pay. You can restrict fees and/or discounts to certain instruments by adding this field to the orderline you want to restrict. Use positive amounts to add fees and negative amounts to add discounts. Capture Captures are only possible when a payment has a successful authorize transaction, naturally excluding one-phase payment instruments like Swish and Trustly. Two-phase payment instruments like Card and Vipps however, require a Capture to be completed. Please note that you have a maximum of 5 consecutive failed attempts at a capture. The payment will be locked after this, and you need to contact us for another attempt. In addition to full captures, it is possible to do partial captures of a part of the authorized amount. You can do other captures on the same payment later, up to the total authorized amount. Useful for when you have to split orders into several shipments, for instance. First off, you must request the order information from the server to get the request link. With this, you can request the capture with the amount to capture, and get the status back. To capture the authorized payment, we need to perform capture against the accompanying href returned in the operations list. See the abbreviated request and response below: Capture Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 POST /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/captures HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"transaction\": { \"description\": \"Capturing the authorized payment\", \"amount\": 1500, \"vatAmount\": 375, \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\", \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/products/123\", \"imageUrl\": \"https://example.com/product123.jpg\", \"description\": \"Product 1 description\", \"discountDescription\": \"Volume discount\", \"quantity\": 4, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product 2 description\", \"quantity\": 1, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check transaction object The transaction object. check description string The description of the capture transaction. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined.   receiptReference string(30) A unique reference to the transaction, provided by the merchant. Can be used as an invoice or receipt number as a supplement to payeeReference. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics.   itemUrl string The URL to a page that can display the purchased item, product or similar. ︎︎︎ imageUrl string The URL to an image of the order item.   description string The human readable description of the order item.   discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT.   discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 SEK and 5000 equals 50.00 SEK. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. ︎︎︎ itemUrl string The URL to a page that can display the purchased item, such as a product page ︎︎︎ imageUrl string The URL to an image of the order item. ︎︎︎ description string The human readable description of the order item. ︎︎︎ discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. check unitPrice integer The price per unit of order item, including VAT. ︎︎︎ discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Capture Response If the capture request succeeds, this should be the response: Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"capture\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/captures/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"transaction\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions/ec2a9b09-601a-42ae-8e33-a5737e1cf177\", \"created\": \"2020-06-22T10:56:56.2927632Z\", \"updated\": \"2020-06-22T10:56:56.4035291Z\", \"type\": \"Capture\", \"state\": \"Completed\", \"amount\": 1500, \"vatAmount\": 375, \"description\": \"Capturing the authorized payment\", \"payeeReference\": \"AB832\", \"receiptReference\": \"AB831\" } } } Show fields Hide fields Property Type Description payment string The relative URL of the payment this capture transaction belongs to. capture object The capture object, containing the information about the capture transaction. id string The relative URL of the created capture transaction. transaction object The object representation of the generic transaction resource, containing information about the current transaction. id string The relative URL of the current transaction resource. created string The ISO-8601 date and time of when the transaction was created. updated string The ISO-8601 date and time of when the transaction was updated. type string Indicates the transaction type. state string Indicates the state of the transaction, usually initialized, completed or failed. If a partial has been done and further transactions are possible, the state will be awaitingActivity. number integer The transaction number, useful when there’s need to reference the transaction in human communication. Not usable for programmatic identification of the transaction, where id should be used instead. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. description string A 40 character length textual description of the purchase. payeeReference string A unique reference from the merchant system. Set per operation to ensure an exactly-once delivery of a transactional operation. Length and content validation depends on whether the transaction.number or the payeeReference is sent to the acquirer. If Swedbank Pay handles the settlement, the transaction.number is sent and the payeeReference must be in the format of A-Za-z0-9 (including -) and string(30). If you handle the settlement, Swedbank Pay will send the payeeReference and it will be limited to the format of string(12). All characters must be digits. In Invoice Payments payeeReference is used as an invoice/receipt number, if the receiptReference is not defined. receiptReference string(30) A unique reference from the merchant system. It is set per operation to ensure an exactly-once delivery of a transactional operation. It is used to supplement payeeReference as an additional receipt number. Capture Sequence Diagram sequenceDiagram participant Merchant participant SwedbankPay as Swedbank Pay rect rgba(81,43,43,0.1) activate Merchant note left of Payer: Capture Merchant -&gt;&gt;+ SwedbankPay: rel:capture deactivate Merchant SwedbankPay --&gt;&gt;- Merchant: Capture status note right of Merchant: Capture here only if the purchased&lt;br/&gt;goods don't require shipping.&lt;br/&gt;If shipping is required, perform capture&lt;br/&gt;after the goods have shipped.&lt;br&gt;Should only be used for &lt;br&gt;Payment Instruments that support &lt;br&gt;Authorizations. end",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/unscheduled.html"
  },{
    "title": "Update Payment Order",
    "text": "Update Payment Order warning If a payment is attempted, failed or currently being processed, you will not be able to update the orderItems for the payment order. Should you need to update the orderItems, you will have to abort the payment order and create a new order with the updated orderItems. The UpdateOrder operation is used when there is a change in the amount, vat amount or there are added or removed order items in the payment order. info If you implement UpdateOrder you need to refresh() the Payment Menu frontend after you have called the UpdateOrder API from the backend. In case the shopping cart is changed in another browser tab, that should also lead to an UpdateOrder. On window.onfocus in the tab that had Payment Menu initialized, refresh() should be invoked so the correct amount is authorized. If the page is refreshed by a full page reload, refresh() is not necessary. The response given when changing a payment order is equivalent to a GET request towards the paymentorders resource. Even though the fields are the same, the UpdateOrder request will overwrite the fields that were sent in the initial Purchase request. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UpdateOrder\", \"amount\": 1500, \"vatAmount\": 375, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/shop/products/1234\", \"imageUrl\": \"https://example.com/products/product1.jpg\", \"description\": \"Product description\", \"discountDescription\": \"Volume discount\", \"quantity\": 351.3514, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product description\", \"quantity\": 9876.1531, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. check itemUrl string The URL to a page that can display the purchased item, product or similar. check imageUrl string The URL to an image of the order item. check description string The human readable description of the order item. check discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT. check discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/7f27f445-cefe-4a48-d405-08d8143ed22b\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-expandinstrument\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO, da-DK, en-US or fi-FI. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/core/update.html"
  },{
    "title": "Update Payment Order",
    "text": "Update Payment Order warning If a payment is attempted, failed or currently being processed, you will not be able to update the orderItems for the payment order. Should you need to update the orderItems, you will have to abort the payment order and create a new order with the updated orderItems. The UpdateOrder operation is used when there is a change in the amount, vat amount or there are added or removed order items in the payment order. info If you implement UpdateOrder you need to refresh() the Payment Menu frontend after you have called the UpdateOrder API from the backend. In case the shopping cart is changed in another browser tab, that should also lead to an UpdateOrder. On window.onfocus in the tab that had Payment Menu initialized, refresh() should be invoked so the correct amount is authorized. If the page is refreshed by a full page reload, refresh() is not necessary. The response given when changing a payment order is equivalent to a GET request towards the paymentorders resource. Even though the fields are the same, the UpdateOrder request will overwrite the fields that were sent in the initial Purchase request. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UpdateOrder\", \"amount\": 1500, \"vatAmount\": 375, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/shop/products/1234\", \"imageUrl\": \"https://example.com/products/product1.jpg\", \"description\": \"Product description\", \"discountDescription\": \"Volume discount\", \"quantity\": 351.3514, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product description\", \"quantity\": 9876.1531, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. check itemUrl string The URL to a page that can display the purchased item, product or similar. check imageUrl string The URL to an image of the order item. check description string The human readable description of the order item. check discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT. check discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/7f27f445-cefe-4a48-d405-08d8143ed22b\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-expandinstrument\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The amount displayed is the final amount the payer paid for their order, including any instrument specific discounts or fees. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource.",
    "tags": "",
    "url": "/checkout-v3/features/core/update.html"
  },{
    "title": "Update Payment Order",
    "text": "Update Payment Order warning If a payment is attempted, failed or currently being processed, you will not be able to update the orderItems for the payment order. Should you need to update the orderItems, you will have to abort the payment order and create a new order with the updated orderItems. The UpdateOrder operation is used when there is a change in the amount, vat amount or there are added or removed order items in the payment order. info If you implement UpdateOrder you need to refresh() the Payment Menu frontend after you have called the UpdateOrder API from the backend. In case the shopping cart is changed in another browser tab, that should also lead to an UpdateOrder. On window.onfocus in the tab that had Payment Menu initialized, refresh() should be invoked so the correct amount is authorized. If the page is refreshed by a full page reload, refresh() is not necessary. The response given when changing a payment order is equivalent to a GET request towards the paymentorders resource. Even though the fields are the same, the UpdateOrder request will overwrite the fields that were sent in the initial Purchase request. Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 PATCH /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce HTTP/1.1 Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"UpdateOrder\", \"amount\": 1500, \"vatAmount\": 375, \"orderItems\": [ { \"reference\": \"P1\", \"name\": \"Product1\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"itemUrl\": \"https://example.com/shop/products/1234\", \"imageUrl\": \"https://example.com/products/product1.jpg\", \"description\": \"Product description\", \"discountDescription\": \"Volume discount\", \"quantity\": 351.3514, \"quantityUnit\": \"pcs\", \"unitPrice\": 300, \"discountPrice\": 200, \"vatPercent\": 2500, \"amount\": 1000, \"vatAmount\": 250 }, { \"reference\": \"P2\", \"name\": \"Product2\", \"type\": \"PRODUCT\", \"class\": \"ProductGroup1\", \"description\": \"Product description\", \"quantity\": 9876.1531, \"quantityUnit\": \"pcs\", \"unitPrice\": 500, \"vatPercent\": 2500, \"amount\": 500, \"vatAmount\": 125 } ] } } Show fields Hide fields Required Field Type Description check paymentOrder object The payment order object. check operation string Determines the initial operation, defining the type of payment order created. check amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. check vatAmount integer The payment’s VAT (Value Added Tax) amount, entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. The vatAmount entered will not affect the amount shown on the payment page, which only shows the total amount. This field is used to specify how much of the total amount the VAT will be. Set to 0 (zero) if there is no VAT amount charged. check description string The description of the payment order. check orderItems array The array of items being purchased with the order. Note that authorization orderItems will not be printed on invoices, so lines meant for print must be added in the Capture request. The authorization orderItems will, however, be used in the Merchant Portal when captures or reversals are performed, and might be shown other places later. It is required to use this field to be able to send Capture orderItems. Capture requests should only contain items meant to be captured from the order. check reference string A reference that identifies the order item. check name string The name of the order item. check type enum PRODUCT, SERVICE, SHIPPING_FEE, PAYMENT_FEE, DISCOUNT, VALUE_CODE or OTHER. The type of the order item. check class string The classification of the order item. Can be used for assigning the order item to a specific product category, such as MobilePhone. Note that class cannot contain spaces and must follow the regex pattern [\\w-]*. Swedbank Pay may use this field for statistics. check itemUrl string The URL to a page that can display the purchased item, product or similar. check imageUrl string The URL to an image of the order item. check description string The human readable description of the order item. check discountDescription string The human readable description of the possible discount. check quantity number The 4 decimal precision quantity of order items being purchased. check quantityUnit string The unit of the quantity, such as pcs, grams, or similar. This is used for your own book keeping. check unitPrice integer The price per unit of order item, including VAT. check discountPrice integer If the order item is purchased at a discounted price. This field should contain that price, including VAT. check vatPercent integer The percent value of the VAT multiplied by 100, so 25% becomes 2500. check amount integer The total amount including VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. check vatAmount integer The total amount of VAT to be paid for the specified quantity of this order item, in the lowest monetary unit of the currency. E.g. 10000 equals 100.00 NOK and 5000 equals 50.00 NOK. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"created\": \"2018-09-14T13:21:29.3182115Z\", \"updated\": \"2018-09-14T13:21:57.6627579Z\", \"operation\": \"Purchase\", \"state\": \"Ready\", \"currency\": \"SEK\", \"amount\": 1500, \"vatAmount\": 0, \"remainingCaptureAmount\": 1500, \"remainingCancellationAmount\": 1500, \"remainingReversalAmount\": 0, \"description\": \"Test Purchase\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"urls\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payeeinfo\" }, \"payers\": { \"id\": \"/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" \"orderItems\" : { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/orderItems\" }, \"metadata\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/metadata\" }, \"payments\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/payments\" }, \"currentPayment\": { \"id\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/currentpayment\" } }, \"operations\": [ { \"method\": \"PATCH\", \"href\": \"https://api.stage.payex.com/psp/paymentorders/7f27f445-cefe-4a48-d405-08d8143ed22b\", \"rel\": \"update-paymentorder-updateorder\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-abort\", \"contentType\": \"application/json\" }, { \"method\": \"PATCH\", \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"rel\": \"update-paymentorder-expandinstrument\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/5a17c24e-d459-4567-bbad-aa0f17a76119?_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"redirect-paymentorder\", \"contentType\": \"text/html\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119&amp;culture=nb-NO&amp;_tc_tid=30f2168171e142d38bcd4af2c3721959\", \"rel\": \"view-paymentorder\", \"contentType\": \"application/javascript\" } ] } Show fields Hide fields Field Type Description payment object The payment object contains information about the specific payment. id string The relative URL and unique identifier of the payment resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. number integer The payment number, useful when there’s need to reference the payment in human communication. Not usable for programmatic identification of the payment, where id should be used instead. created string The ISO-8601 date of when the payment was created. updated string The ISO-8601 date of when the payment was updated. state string Ready, Pending, Failed or Aborted. Indicates the state of the payment, not the state of any transactions performed on the payment. To find the state of the payment’s transactions (such as a successful authorization), see the transactions resource or the different specialized type-specific resources such as authorizations or sales. prices object The prices resource lists the prices related to a specific payment. id string The relative URL and unique identifier of the prices resource . Please read about URL Usage to understand how this and other URLs should be used in your solution. amount integer The transaction amount (including VAT, if any) entered in the lowest monetary unit of the selected currency. E.g.: 10000 = 100.00 SEK, 5000 = 50.00 SEK. remainingCaptureAmount integer The available amount to capture. remainingCancelAmount integer The available amount to cancel. remainingReversalAmount integer The available amount to reverse. description string(40) A 40 character length textual description of the purchase. userAgent string The user agent of the payer. Should typically be set to the value of the User-Agent header sent by the payer’s web browser. language string sv-SE, nb-NO or en-US. urls string The URL to the urls resource where all URLs related to the payment can be retrieved. payeeInfo string The payeeInfo object, containing information about the payee (the recipient of the money). See payeeInfo for details. payers string The URL to the payer resource where the information about the payer can be retrieved. operations array The array of operations that are possible to perform on the payment in its current state. method string The HTTP method to use when performing the operation. href string The target URL to perform the operation against. rel string The name of the relation the operation has to the current resource.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/core/update.html"
  },{
    "title": "UpdateTerminalAsync",
    "text": "The UpdateTerminalAsync method sends a status report to TMS to trigger possible program or parameter fetching. The call should be made during a login session (after open and before close), but in order to actually change parameters Close must be called. This is not a high priority function to implement. The same thing may be achieved by booting and a call to Open. Returns A UpdateTerminalRequestResult - 1 public class UpdateTerminalRequestResult : NexoRequestResult; 1 2 3 4 5 6 7 public class NexoRequestResult { public string ResponseContent public NexoResponseResult ResponseResult { get; set; } public string ErrorCondition { get; set; } public string ResponseText { get; set; } };",
    "tags": "",
    "url": "/pax-terminal/NET/Methods/updateterminalasync.html"
  },{
    "title": "Urls",
    "text": "URLs When creating a Payment Order, the urls field of the paymentOrder contains the related URLs, including where the payer is redirected when going forward with or canceling a payment session, as well as the callback URL that is used to inform the payee (merchant) of changes or updates made to underlying payments or transaction. Show fields Hide fields Required Field Type Description check ︎︎︎︎︎ hostUrls array The array of URLs valid for embedding of Swedbank Pay Hosted Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Order Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment Order as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Seamless View Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device. URLs Resource It is possible to perform a GET request on the urls resource to retrieve its contents. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"urls\": { \"id\": \"/psp/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\", \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-complete\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"http://api.example.com/payment-callback\", \"logoUrl\": \"http://merchant.com/path/to/logo.png\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" } } Field Type Description paymentOrder string The relative URL and unique identifier of the payment resource this urls belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. urls object The URLs object. id string The relative URL and unique identifier of the urls resource this urls belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. hostsUrl string An array of the whitelisted URLs that are allowed as parents to a Hosted View, typically the URL of the web shop or similar that will embed a Hosted View within it. completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details. logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/urls.html"
  },{
    "title": "Urls",
    "text": "URLs When creating a Payment Order, the urls field of the paymentOrder contains the related URLs, including where the payer is redirected when going forward with or canceling a payment session, as well as the callback URL that is used to inform the payee (merchant) of changes or updates made to underlying payments or transaction. Show fields Hide fields Required Field Type Description check ︎︎︎︎︎ hostUrls array The array of URLs valid for embedding of Swedbank Pay Hosted Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Seamless View Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device. URLs Resource It is possible to perform a GET request on the urls resource to retrieve its contents. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"urls\": { \"id\": \"/psp/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\", \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-complete\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"http://api.example.com/payment-callback\", \"logoUrl\": \"http://merchant.com/path/to/logo.png\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" } } Field Type Description paymentOrder string The relative URL and unique identifier of the payment resource this urls belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. urls object The URLs object. id string The relative URL and unique identifier of the urls resource this urls belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. hostsUrl string An array of the whitelisted URLs that are allowed as parents to a Hosted View, typically the URL of the web shop or similar that will embed a Hosted View within it. completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details. logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/urls.html"
  },{
    "title": "Urls",
    "text": "URLs When creating a Payment Order, the urls field of the paymentOrder contains the related URLs, including where the payer is redirected when going forward with or canceling a payment session, as well as the callback URL that is used to inform the payee (merchant) of changes or updates made to underlying payments or transaction. Show fields Hide fields Required Field Type Description check ︎︎︎︎︎ hostUrls array The array of URLs valid for embedding of Swedbank Pay Hosted Views. check completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details.   cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder.   paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used.   callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment order. See callback for details.   logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. check termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement. Payment Url For our Seamless Views, the field called paymentUrl will be used when the payer is redirected out of the Seamless View (the iframe). The payer is redirected out of frame when selecting payment instruments which trigger SCA. This includes 3-D Secure card payments, installment account, invoice, MobilePay, monthly invoice payments, Trustly and Vipps. The URL should represent the page of where the Payment Seamless View was hosted originally, such as the checkout page, shopping cart page, or similar. Basically, paymentUrl should be set to the same URL as that of the page where the JavaScript for the Seamless View was added to in order to initiate the payment process. info Please note that the paymentUrl must be able to invoke the same JavaScript URL from the same Payment as the one that initiated the payment process originally, so it should include some sort of state identifier in the URL. The state identifier is the ID of the order, shopping cart or similar that has the URL of the Payment stored. With paymentUrl in place, the retry process becomes much more convenient for both the integration and the payer. paymentUrl is used by the Seamless View flow and must be used for WebView-based app implementations. Some payment instruments only work when owning the full browser page (no use of &lt;iframe&gt;), this will be solved by doing a full browser (top frame) redirect out of the Seamless View. 3-D Secure requires this, for example. For mobile flows, some payment instruments work best when app-to-app switching is enabled and handled automatically (Swish, Vipps etc). To solve this, it is important that the third party app or site understand where to redirect the payer back to after the flow on their end is completed. info Refresh your payment menu after the payer’s return!: The paymentUrl is the URL Swedbank Pay will provide to the third party for handling the redirect back to your site or app. When the payer returns from the paymentUrl either in an app or a web page, it is vital that you refresh the Seamless View payment menu so the payment flow can be completed. Failing to do so could lead to issues. For in-app it is important that you either implement the onPaymentCompleted event or let the Seamless View redirect to the completeUrl before intercepting the WebView. If you intercept the WebView when the payer’s device is redirected to the paymentUrl it can lead to issues. If you want to handle payment errors in your own code, you should also subscribe to other events provided by the Seamless View JavaScript and shut down the Seamless View if any of these events occur. Events to subscribe to for full control over the payment flow are can be found in Payment Menu Events. When implementing the Seamless View flow into a WebView in your mobile app, you should use a custom scheme or Universal Link in the paymentUrl for handling automatic switching between your app and the payment app on the mobile device. URLs Resource It is possible to perform a GET request on the urls resource to retrieve its contents. Request 1 2 3 4 GET /psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce/urls/ HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": \"/psp/paymentorders/09ccd29a-7c4f-4752-9396-12100cbfecce\", \"urls\": { \"id\": \"/psp/payments/09ccd29a-7c4f-4752-9396-12100cbfecce/urls\", \"hostUrls\": [ \"https://example.com\", \"https://example.net\" ], \"completeUrl\": \"https://example.com/payment-complete\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"paymentUrl\": \"https://example.com/perform-payment\", \"callbackUrl\": \"http://api.example.com/payment-callback\", \"logoUrl\": \"http://merchant.com/path/to/logo.png\", \"termsOfServiceUrl\": \"https://example.com/termsandconditions.pdf\" } } Field Type Description paymentOrder string The relative URL and unique identifier of the payment resource this urls belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. urls object The URLs object. id string The relative URL and unique identifier of the urls resource this urls belongs to. Please read about URL Usage to understand how this and other URLs should be used in your solution. hostsUrl string An array of the whitelisted URLs that are allowed as parents to a Hosted View, typically the URL of the web shop or similar that will embed a Hosted View within it. completeUrl string The URL that Swedbank Pay will redirect back to when the payer has completed their interactions with the payment. This does not indicate a successful payment, only that it has reached a final (complete) state. A GET request needs to be performed on the payment to inspect it further. See completeUrl for details. cancelUrl string The URL to redirect the payer to if the payment is cancelled, either by the payer or by the merchant trough an abort request of the payment or paymentorder. paymentUrl string The paymentUrl represents the URL that Swedbank Pay will redirect back to when the view-operation needs to be loaded, to inspect and act on the current status of the payment, such as when the payer is redirected out of the Seamless View (the &lt;iframe&gt;) and sent back after completing the payment. paymentUrl is only used in Seamless Views and should point to the page of where the Payment Order Seamless View is hosted. If both cancelUrl and paymentUrl is sent, the paymentUrl will used. callbackUrl string The URL that Swedbank Pay will perform an HTTP POST against every time a transaction is created on the payment. See callback for details. logoUrl string With permission and activation on your contract, sending in a logoUrl will replace the Swedbank Pay logo with the logo sent in. If you do not send in a logoUrl, then no logo and no text is shown. Without permission or activation on your contract, sending in a logoUrl has no effect. Read more about this in Custom Logo. termsOfServiceUrl string The URL to the terms of service document which the payer must accept in order to complete the payment. HTTPS is a requirement.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/urls.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/checkout-v3/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/technical-reference/user-agent.html"
  },{
    "title": "User Agent",
    "text": "User-Agent The term user agent is used for both the web browser used by the payer as well as the system making HTTP requests towards Swedbank Pay’s APIs. The difference between these two and how they relate to each other is illustrated in the below sequence diagram:  Payer Payer Merchant Merchant Swedbank Pay Swedbank PayUser-Agent: P ①User-Agent: M { userAgent: \"P\" } ②Store request data{ \"initiatingSystemUserAgent\": \"M\" } ③ First, the payer makes an HTTP request with their web browser towards the merchant’s website. This HTTP request contains a User-Agent header, here given the value P (for “Payer”). The merchant performs an HTTP request towards Swedbank Pay. The merchant extracts the P value of the User-Agent header from the payer’s browser and sends it to Swedbank Pay in the userAgent field in the JSON request body. The merchant also composes its own user agent string and sends it to Swedbank Pay in the User-Agent HTTP request header, here represented as the value M (for “Merchant”). Swedbank Pay receives \"userAgent\": \"P\" and User-Agent: M, stores the values and returns the M value in the initiatingSystemUserAgent response JSON field. The user agent strings are used for statistical purposes by Swedbank Pay.",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/technical-reference/user-agent.html"
  },{
    "title": "Verify",
    "text": "Verify Payments Verify payments are also supported by the SDK. This is particularly useful e.g. when creating tokens to charge a card later. Android 1 2 3 4 val paymentOrder = PaymentOrder( operation = Operation.VERIFY ... ) iOS 1 paymentOrder.operation = .Verify",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/features/optional/verify.html"
  },{
    "title": "Verify",
    "text": "The Verify operation lets you post verification payments, which confirm the validity of card information without reserving or charging any amount. Introduction To Verify This option is commonly used when initiating a subsequent unscheduled purchase flow - where you do not want to charge the payer right away. info Please note that all boolean credit card attributes involving the rejection of certain card types are optional and require enabling on the contract with Swedbank Pay. Verification Through Swedbank Pay Payments When properly set up in your merchant/webshop site, and the payer initiates a verification operation, you make a POST request towards Swedbank Pay with your Verify information. This will create a payment resource with a unique id. You either receive a Redirect URL to a hosted page or a JavaScript source in response. You need to embed the script source on your site to create aSeamless View in an iframe; so that the payer can enter the card details in a secure Swedbank Pay hosted environment. Swedbank Pay will handle 3-D Secure authentication when this is required. Swedbank Pay will redirect the payer’s browser to - or display directly in the iframe - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. When you detect that the payer reach your completeUrl, you need to do a GET request to receive the state of the transaction. Finally you will make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the payment result and a unscheduledToken that can be used for subsequent unscheduled server-to-server based payments. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect the credit card information. API Requests The API requests are displayed in the Verification flow below. The options you can choose from when creating a payment with key operation set to Value Verify are listed below. Please note that not including paymentUrl in the request will generate a redirect-verification operation in the response, meant to be used in the Redirect flow. Adding paymentUrl input will generate the response meant for Seamless View, which does not include the redirect-verification. The request below is the Redirect option. Verify Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 POST /psp/paymentorders HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Test Verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"productName\": \"Checkout3\", \"implementation\": \"Enterprise\", \"generateUnscheduledToken\": true, \"urls\": { \"hostUrls\": [\"https://example.com\", \"https://example.net\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"creditCard\": { \"rejectCreditCards\": false, \"rejectDebitCards\": false, \"rejectConsumerCards\": false, \"rejectCorporateCards\": false } } Verify Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/paymentorders/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://ecom.externalintegration.payex.com/psp//confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\", \"rel\": \"direct-verification\", \"contentType\": \"application/json\" } ] } Verification Flow The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. The diagram also shows in high level, the sequence of the process of a complete purchase. When dealing with credit card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcome of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant IssuingBank activate Payer Payer-&gt;&gt;+Merchant: start verification deactivate Payer Merchant-&gt;&gt;+SwedbankPay: POST /psp//payments(operation=VERIFY) deactivate Merchant note left of Payer: First API request SwedbankPay--&gt;+Merchant: payment resource deactivate SwedbankPay Merchant--&gt;&gt;+Payer: redirect to verification page deactivate Merchant Payer-&gt;&gt;+SwedbankPay: access verification page deactivate Payer note left of Payer: redirect to SwedbankPay&lt;br&gt;(If Redirect scenario) SwedbankPay--&gt;&gt;+Payer: display purchase information deactivate SwedbankPay Payer-&gt;&gt;Payer: input information Payer-&gt;&gt;+SwedbankPay: submit information deactivate Payer opt Card supports 3-D Secure SwedbankPay--&gt;&gt;Payer: redirect to IssuingBank deactivate SwedbankPay Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;+SwedbankPay: access authentication page deactivate Payer end SwedbankPay--&gt;&gt;+Payer: redirect to merchant deactivate SwedbankPay note left of Payer: redirect back to merchant&lt;br&gt;(If Redirect scenario) Payer-&gt;&gt;+Merchant: access merchant page Merchant-&gt;&gt;+SwedbankPay: GET &lt;payment.id&gt; deactivate Merchant note left of Merchant: Second API request SwedbankPay--&gt;&gt;+Merchant: rel: redirect-authorization deactivate SwedbankPay Merchant--&gt;&gt;Payer: display purchase result deactivate Merchant opt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;Merchant: POST Payment Callback deactivate SwedbankPay end",
    "tags": "",
    "url": "/checkout-v3/enterprise/features/optional/verify.html"
  },{
    "title": "Verify",
    "text": "The Verify operation lets you post verification payments, which confirm the validity of card information without reserving or charging any amount. Introduction To Verify This option is commonly used when initiating a subsequent unscheduled purchase flow - where you do not want to charge the payer right away. info Please note that all boolean credit card attributes involving the rejection of certain card types are optional and require enabling on the contract with Swedbank Pay. Verification Through Swedbank Pay Payments When properly set up in your merchant/webshop site, and the payer initiates a verification operation, you make a POST request towards Swedbank Pay with your Verify information. This will create a payment resource with a unique id. You either receive a Redirect URL to a hosted page or a JavaScript source in response. You need to embed the script source on your site to create aSeamless View in an iframe; so that the payer can enter the card details in a secure Swedbank Pay hosted environment. Swedbank Pay will handle 3-D Secure authentication when this is required. Swedbank Pay will redirect the payer’s browser to - or display directly in the iframe - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. When you detect that the payer reach your completeUrl, you need to do a GET request to receive the state of the transaction. Finally you will make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the payment result and a unscheduledToken that can be used for subsequent unscheduled server-to-server based payments. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect the credit card information. API Requests The API requests are displayed in the Verification flow below. The options you can choose from when creating a payment with key operation set to Value Verify are listed below. Please note that not including paymentUrl in the request will generate a redirect-verification operation in the response, meant to be used in the Redirect flow. Adding paymentUrl input will generate the response meant for Seamless View, which does not include the redirect-verification. The request below is the Redirect option. Verify Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 POST /psp/checkout-v3 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Test Verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"productName\": \"Checkout3\", \"implementation\": \"Checkoutv3\", \"generateUnscheduledToken\": true, \"urls\": { \"hostUrls\": [\"https://example.com\", \"https://example.net\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", \"siteId\": \"MySiteId\", }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"creditCard\": { \"rejectCreditCards\": false, \"rejectDebitCards\": false, \"rejectConsumerCards\": false, \"rejectCorporateCards\": false } } Verify Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/checkout-v3/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://ecom.externalintegration.payex.com/psp//confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\", \"rel\": \"direct-verification\", \"contentType\": \"application/json\" } ] } Verification Flow The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. The diagram also shows in high level, the sequence of the process of a complete purchase. When dealing with credit card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcome of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant IssuingBank activate Payer Payer-&gt;&gt;+Merchant: start verification deactivate Payer Merchant-&gt;&gt;+SwedbankPay: POST /psp//payments(operation=VERIFY) deactivate Merchant note left of Payer: First API request SwedbankPay--&gt;+Merchant: payment resource deactivate SwedbankPay Merchant--&gt;&gt;+Payer: redirect to verification page deactivate Merchant Payer-&gt;&gt;+SwedbankPay: access verification page deactivate Payer note left of Payer: redirect to SwedbankPay&lt;br&gt;(If Redirect scenario) SwedbankPay--&gt;&gt;+Payer: display purchase information deactivate SwedbankPay Payer-&gt;&gt;Payer: input information Payer-&gt;&gt;+SwedbankPay: submit information deactivate Payer opt Card supports 3-D Secure SwedbankPay--&gt;&gt;Payer: redirect to IssuingBank deactivate SwedbankPay Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;+SwedbankPay: access authentication page deactivate Payer end SwedbankPay--&gt;&gt;+Payer: redirect to merchant deactivate SwedbankPay note left of Payer: redirect back to merchant&lt;br&gt;(If Redirect scenario) Payer-&gt;&gt;+Merchant: access merchant page Merchant-&gt;&gt;+SwedbankPay: GET &lt;payment.id&gt; deactivate Merchant note left of Merchant: Second API request SwedbankPay--&gt;&gt;+Merchant: rel: redirect-authorization deactivate SwedbankPay Merchant--&gt;&gt;Payer: display purchase result deactivate Merchant opt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;Merchant: POST Payment Callback deactivate SwedbankPay end",
    "tags": "",
    "url": "/checkout-v3/features/optional/verify.html"
  },{
    "title": "Verify",
    "text": "The Verify operation lets you post verification payments, which confirm the validity of card information without reserving or charging any amount. Introduction To Verify This option is commonly used when initiating a subsequent One-click payment or an unscheduled purchase flow - where you do not want to charge the payer right away. info Please note that all boolean credit card attributes involving the rejection of certain card types are optional and require enabling on the contract with Swedbank Pay. Verification Through Swedbank Pay Payments When properly set up in your merchant/webshop site, and the payer initiates a verification operation, you make a POST request towards Swedbank Pay with your Verify information. This will create a payment resource with a unique id. You either receive a Redirect URL to a hosted page or a JavaScript source in response. You need to redirect the payer’s browser to that specified URL, or embed the script source on your site to create a Seamless View in an iframe; so that the payer can enter the card details in a secure Swedbank Pay hosted environment. Swedbank Pay will handle 3-D Secure authentication when this is required. Swedbank Pay will redirect the payer’s browser to - or display directly in the iframe - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. When you detect that the payer reach your completeUrl, you need to do a GET request to receive the state of the transaction. Finally you will make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the payment result and a paymentToken that can be used for subsequent One-Click Payments or a unscheduledToken that can be used for subsequent unscheduled server-to-server based payments. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect the credit card information. API Requests The API requests are displayed in the Verification flow below. The options you can choose from when creating a payment with key operation set to Value Verify are listed below. Please note that not including paymentUrl in the request will generate a redirect-verification operation in the response, meant to be used in the Redirect flow. Adding paymentUrl input will generate the response meant for Seamless View, which does not include the redirect-verification. The request below is the Redirect option. Verify Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 POST /psp/creditcard/payments HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"payment\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Test Verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"generatePaymentToken\": true, \"urls\": { \"hostUrls\": [\"https://example.com\", \"https://example.net\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"creditCard\": { \"rejectCreditCards\": false, \"rejectDebitCards\": false, \"rejectConsumerCards\": false, \"rejectCorporateCards\": false } } Verify Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"payment\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/creditcard/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://ecom.externalintegration.payex.com/psp//confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\", \"rel\": \"direct-verification\", \"contentType\": \"application/json\" } ] } Verification Flow The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. The diagram also shows in high level, the sequence of the process of a complete purchase. When dealing with credit card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcome of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant IssuingBank activate Payer Payer-&gt;&gt;+Merchant: start verification deactivate Payer Merchant-&gt;&gt;+SwedbankPay: POST /psp//payments(operation=VERIFY) deactivate Merchant note left of Payer: First API request SwedbankPay--&gt;+Merchant: payment resource deactivate SwedbankPay Merchant--&gt;&gt;+Payer: redirect to verification page deactivate Merchant Payer-&gt;&gt;+SwedbankPay: access verification page deactivate Payer note left of Payer: redirect to SwedbankPay&lt;br&gt;(If Redirect scenario) SwedbankPay--&gt;&gt;+Payer: display purchase information deactivate SwedbankPay Payer-&gt;&gt;Payer: input information Payer-&gt;&gt;+SwedbankPay: submit information deactivate Payer opt Card supports 3-D Secure SwedbankPay--&gt;&gt;Payer: redirect to IssuingBank deactivate SwedbankPay Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;+SwedbankPay: access authentication page deactivate Payer end SwedbankPay--&gt;&gt;+Payer: redirect to merchant deactivate SwedbankPay note left of Payer: redirect back to merchant&lt;br&gt;(If Redirect scenario) Payer-&gt;&gt;+Merchant: access merchant page Merchant-&gt;&gt;+SwedbankPay: GET &lt;payment.id&gt; deactivate Merchant note left of Merchant: Second API request SwedbankPay--&gt;&gt;+Merchant: rel: redirect-authorization deactivate SwedbankPay Merchant--&gt;&gt;Payer: display purchase result deactivate Merchant opt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;Merchant: POST Payment Callback deactivate SwedbankPay end",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/features/optional/verify.html"
  },{
    "title": "Verify",
    "text": "The Verify operation lets you post verification payments, which confirm the validity of card information without reserving or charging any amount. Introduction To Verify This option is commonly used when initiating a subsequent unscheduled purchase flow - where you do not want to charge the payer right away. info Please note that all boolean credit card attributes involving the rejection of certain card types are optional and require enabling on the contract with Swedbank Pay. Verification Through Swedbank Pay Payments When properly set up in your merchant/webshop site, and the payer initiates a verification operation, you make a POST request towards Swedbank Pay with your Verify information. This will create a payment resource with a unique id. You either receive a Redirect URL to a hosted page or a JavaScript source in response. You need to embed the script source on your site to create aSeamless View in an iframe; so that the payer can enter the card details in a secure Swedbank Pay hosted environment. Swedbank Pay will handle 3-D Secure authentication when this is required. Swedbank Pay will redirect the payer’s browser to - or display directly in the iframe - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. When you detect that the payer reach your completeUrl, you need to do a GET request to receive the state of the transaction. Finally you will make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the payment result and a unscheduledToken that can be used for subsequent unscheduled server-to-server based payments. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect the credit card information. API Requests The API requests are displayed in the Verification flow below. The options you can choose from when creating a payment with key operation set to Value Verify are listed below. Please note that not including paymentUrl in the request will generate a redirect-verification operation in the response, meant to be used in the Redirect flow. Adding paymentUrl input will generate the response meant for Seamless View, which does not include the redirect-verification. The request below is the Redirect option. Verify Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 POST /psp/old-implementations/checkout-v2 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Test Verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"generateUnscheduledToken\": true, \"urls\": { \"hostUrls\": [\"https://example.com\", \"https://example.net\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"creditCard\": { \"rejectCreditCards\": false, \"rejectDebitCards\": false, \"rejectConsumerCards\": false, \"rejectCorporateCards\": false } } Verify Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/old-implementations/checkout-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://ecom.externalintegration.payex.com/psp//confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\", \"rel\": \"direct-verification\", \"contentType\": \"application/json\" } ] } Verification Flow The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. The diagram also shows in high level, the sequence of the process of a complete purchase. When dealing with credit card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcome of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant IssuingBank activate Payer Payer-&gt;&gt;+Merchant: start verification deactivate Payer Merchant-&gt;&gt;+SwedbankPay: POST /psp//payments(operation=VERIFY) deactivate Merchant note left of Payer: First API request SwedbankPay--&gt;+Merchant: payment resource deactivate SwedbankPay Merchant--&gt;&gt;+Payer: redirect to verification page deactivate Merchant Payer-&gt;&gt;+SwedbankPay: access verification page deactivate Payer note left of Payer: redirect to SwedbankPay&lt;br&gt;(If Redirect scenario) SwedbankPay--&gt;&gt;+Payer: display purchase information deactivate SwedbankPay Payer-&gt;&gt;Payer: input information Payer-&gt;&gt;+SwedbankPay: submit information deactivate Payer opt Card supports 3-D Secure SwedbankPay--&gt;&gt;Payer: redirect to IssuingBank deactivate SwedbankPay Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;+SwedbankPay: access authentication page deactivate Payer end SwedbankPay--&gt;&gt;+Payer: redirect to merchant deactivate SwedbankPay note left of Payer: redirect back to merchant&lt;br&gt;(If Redirect scenario) Payer-&gt;&gt;+Merchant: access merchant page Merchant-&gt;&gt;+SwedbankPay: GET &lt;payment.id&gt; deactivate Merchant note left of Merchant: Second API request SwedbankPay--&gt;&gt;+Merchant: rel: redirect-authorization deactivate SwedbankPay Merchant--&gt;&gt;Payer: display purchase result deactivate Merchant opt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;Merchant: POST Payment Callback deactivate SwedbankPay end",
    "tags": "",
    "url": "/old-implementations/checkout-v2/features/optional/verify.html"
  },{
    "title": "Verify",
    "text": "The Verify operation lets you post verification payments, which confirm the validity of card information without reserving or charging any amount. Introduction To Verify This option is commonly used when initiating a subsequent unscheduled purchase flow - where you do not want to charge the payer right away. info Please note that all boolean credit card attributes involving the rejection of certain card types are optional and require enabling on the contract with Swedbank Pay. Verification Through Swedbank Pay Payments When properly set up in your merchant/webshop site, and the payer initiates a verification operation, you make a POST request towards Swedbank Pay with your Verify information. This will create a payment resource with a unique id. You either receive a Redirect URL to a hosted page or a JavaScript source in response. You need to embed the script source on your site to create aSeamless View in an iframe; so that the payer can enter the card details in a secure Swedbank Pay hosted environment. Swedbank Pay will handle 3-D Secure authentication when this is required. Swedbank Pay will redirect the payer’s browser to - or display directly in the iframe - one of two specified URLs, depending on whether the payment session is followed through completely or cancelled beforehand. Please note that both a successful and rejected payment reach completion, in contrast to a cancelled payment. When you detect that the payer reach your completeUrl, you need to do a GET request to receive the state of the transaction. Finally you will make a GET request towards Swedbank Pay with the id of the payment received in the first step, which will return the payment result and a unscheduledToken that can be used for subsequent unscheduled server-to-server based payments. How It Looks You will redirect the payer to Swedbank Pay hosted pages to collect the credit card information. API Requests The API requests are displayed in the Verification flow below. The options you can choose from when creating a payment with key operation set to Value Verify are listed below. Please note that not including paymentUrl in the request will generate a redirect-verification operation in the response, meant to be used in the Redirect flow. Adding paymentUrl input will generate the response meant for Seamless View, which does not include the redirect-verification. The request below is the Redirect option. Verify Request Request 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 POST /psp/old-implementations/payment-menu-v2 HTTP/1.1 Host: api.externalintegration.payex.com Authorization: Bearer &lt;AccessToken&gt; Content-Type: application/json { \"paymentorder\": { \"operation\": \"Verify\", \"currency\": \"NOK\", \"description\": \"Test Verification\", \"userAgent\": \"Mozilla/5.0...\", \"language\": \"nb-NO\", \"generatePaymentToken\": true, \"generateUnscheduledToken\": true, \"urls\": { \"hostUrls\": [\"https://example.com\", \"https://example.net\"], \"completeUrl\": \"https://example.com/payment-completed\", \"cancelUrl\": \"https://example.com/payment-cancelled\", \"logoUrl\": \"https://example.com/payment-logo.png\", \"termsOfServiceUrl\": \"https://example.com/payment-terms.html\" }, \"payeeInfo\": { \"payeeId\": \"5cabf558-5283-482f-b252-4d58e06f6f3b\", \"payeeReference\": \"CD1234\", \"payeeName\": \"Merchant1\", \"productCategory\": \"A123\", \"orderReference\": \"or-12456\", \"subsite\": \"MySubsite\", }, \"payer\": { \"payerReference\": \"AB1234\", } }, \"creditCard\": { \"rejectCreditCards\": false, \"rejectDebitCards\": false, \"rejectConsumerCards\": false, \"rejectCorporateCards\": false } } Verify Response Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 HTTP/1.1 200 OK Content-Type: application/json { \"paymentorder\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"number\": 1234567890, \"created\": \"2016-09-14T13:21:29.3182115Z\", \"updated\": \"2016-09-14T13:21:57.6627579Z\", \"operation\": \"Verify\", \"state\": \"Ready\", \"currency\": \"NOK\", \"amount\": 0, \"description\": \"Test Verification\", \"initiatingSystemUserAgent\": \"swedbankpay-sdk-dotnet/3.0.1\", \"userAgent\": \"Mozilla/5.0\", \"language\": \"nb-NO\", \"transactions\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/transactions\" }, \"verifications\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\" }, \"urls\" : { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/urls\" }, \"payeeInfo\" : { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payeeInfo\" }, \"payers\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/payers\" }, \"settings\": { \"id\": \"/psp/old-implementations/payment-menu-v2/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/settings\" } }, \"operations\": [ { \"href\": \"https://api.externalintegration.payex.com/psp//payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1\", \"rel\": \"update-payment-abort\", \"method\": \"PATCH\", \"contentType\": \"application/json\" }, { \"href\": \"https://ecom.externalintegration.payex.com/payments/verification/5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"redirect-verification\", \"method\": \"GET\", \"contentType\": \"application/json\" }, { \"method\": \"GET\", \"href\": \"https://ecom.externalintegration.payex.com/core/scripts/client/px.creditcard.client.js?token=5a17c24e-d459-4567-bbad-aa0f17a76119\", \"rel\": \"view-verification\", \"contentType\": \"application/javascript\" }, { \"method\": \"POST\", \"href\": \"https://ecom.externalintegration.payex.com/psp//confined/payments/7e6cdfc3-1276-44e9-9992-7cf4419750e1/verifications\", \"rel\": \"direct-verification\", \"contentType\": \"application/json\" } ] } Verification Flow The sequence diagram below shows the two requests you have to send to Swedbank Pay to make a purchase. The links will take you directly to the API description for the specific request. The diagram also shows in high level, the sequence of the process of a complete purchase. When dealing with credit card payments, 3-D Secure authentication of the cardholder is an essential topic. There are three alternative outcome of a credit card payment: 3-D Secure enabled - by default, 3-D Secure should be enabled, and Swedbank Pay will check if the card is enrolled with 3-D Secure. This depends on the issuer of the card. If the card is not enrolled with 3-D Secure, no authentication of the cardholder is done. Card supports 3-D Secure - if the card is enrolled with 3-D Secure, Swedbank Pay will redirect the cardholder to the autentication mechanism that is decided by the issuing bank. Normally this will be done using BankID or Mobile BankID. sequenceDiagram participant Payer participant Merchant participant SwedbankPay as Swedbank Pay participant IssuingBank activate Payer Payer-&gt;&gt;+Merchant: start verification deactivate Payer Merchant-&gt;&gt;+SwedbankPay: POST /psp//payments(operation=VERIFY) deactivate Merchant note left of Payer: First API request SwedbankPay--&gt;+Merchant: payment resource deactivate SwedbankPay Merchant--&gt;&gt;+Payer: redirect to verification page deactivate Merchant Payer-&gt;&gt;+SwedbankPay: access verification page deactivate Payer note left of Payer: redirect to SwedbankPay&lt;br&gt;(If Redirect scenario) SwedbankPay--&gt;&gt;+Payer: display purchase information deactivate SwedbankPay Payer-&gt;&gt;Payer: input information Payer-&gt;&gt;+SwedbankPay: submit information deactivate Payer opt Card supports 3-D Secure SwedbankPay--&gt;&gt;Payer: redirect to IssuingBank deactivate SwedbankPay Payer-&gt;&gt;IssuingBank: 3-D Secure authentication process Payer-&gt;&gt;+SwedbankPay: access authentication page deactivate Payer end SwedbankPay--&gt;&gt;+Payer: redirect to merchant deactivate SwedbankPay note left of Payer: redirect back to merchant&lt;br&gt;(If Redirect scenario) Payer-&gt;&gt;+Merchant: access merchant page Merchant-&gt;&gt;+SwedbankPay: GET &lt;payment.id&gt; deactivate Merchant note left of Merchant: Second API request SwedbankPay--&gt;&gt;+Merchant: rel: redirect-authorization deactivate SwedbankPay Merchant--&gt;&gt;Payer: display purchase result deactivate Merchant opt Callback is set activate SwedbankPay SwedbankPay-&gt;&gt;SwedbankPay: Payment is updated SwedbankPay-&gt;&gt;Merchant: POST Payment Callback deactivate SwedbankPay end",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/features/optional/verify.html"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/swish/after-payment"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/trustly/after-payment"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/invoice/after-payment"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/card/after-payment"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/mobile-pay/after-payment"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/vipps/after-payment"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout/after-payment"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/invoice/capture"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/card/capture"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/mobilepay/capture"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/vipps/capture"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout/capture"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout/checkin"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/swish/direct"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/invoice/direct"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/mobile-sdk/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout-v3/resources/sdk-modules"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/pax-terminal/NET/CodeExamples"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/pax-terminal/NET/Events"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/pax-terminal/NET/Methods"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout-v3/modules-sdks/pax-terminal/instore-solution/NET"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout-v3/resources/ecom"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/swish/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/swish/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/trustly/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/trustly/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/invoice/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/invoice/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/card/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/card/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/mobile-pay/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/mobile-pay/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-instruments-v1/vipps/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/vipps/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/old-implementations/payment-menu-v2/other-features"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/card/mobile-card-payments"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/checkout/payment-menu"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/swish/redirect"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/trustly/redirect"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/invoice/redirect"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/card/redirect"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/mobile-pay/redirect"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/vipps/redirect"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/swish/seamless-view"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/invoice/seamless-view"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/card/seamless-view"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/mobile-pay/seamless-view"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/payments/vipps/seamless-view"
  }]};
